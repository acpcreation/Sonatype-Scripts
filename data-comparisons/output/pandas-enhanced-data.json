{
    "TotalDescriptions": 29,
    "Descriptions": [
        {
            "displayName": "pandas (cp310-cp310-macosx_11_0_arm64) 2.0.3 (.whl)",
            "cve": "CVE-2020-13091",
            "description": "pandas through 1.0.3 can unserialize and execute commands from an untrusted file that is passed to the read_pickle() function, if __reduce__ makes an os.system call. NOTE: third parties dispute this issue because the read_pickle() function is documented as unsafe and it is the user's responsibility to use the function in a secure manner"
        },
        {
            "displayName": "pandas (cp311-cp311-macosx_11_0_arm64) 2.0.3 (.whl)",
            "cve": "CVE-2020-13091",
            "description": "pandas through 1.0.3 can unserialize and execute commands from an untrusted file that is passed to the read_pickle() function, if __reduce__ makes an os.system call. NOTE: third parties dispute this issue because the read_pickle() function is documented as unsafe and it is the user's responsibility to use the function in a secure manner"
        },
        {
            "displayName": "pandas (cp38-cp38-macosx_10_9_x86_64) 2.0.3 (.whl)",
            "cve": "CVE-2020-13091",
            "description": "pandas through 1.0.3 can unserialize and execute commands from an untrusted file that is passed to the read_pickle() function, if __reduce__ makes an os.system call. NOTE: third parties dispute this issue because the read_pickle() function is documented as unsafe and it is the user's responsibility to use the function in a secure manner"
        },
        {
            "displayName": "pandas (cp310-cp310-macosx_10_9_x86_64) 2.0.3 (.whl)",
            "cve": "CVE-2020-13091",
            "description": "pandas through 1.0.3 can unserialize and execute commands from an untrusted file that is passed to the read_pickle() function, if __reduce__ makes an os.system call. NOTE: third parties dispute this issue because the read_pickle() function is documented as unsafe and it is the user's responsibility to use the function in a secure manner"
        },
        {
            "displayName": "pandas (cp39-cp39-macosx_11_0_arm64) 2.0.3 (.whl)",
            "cve": "CVE-2020-13091",
            "description": "pandas through 1.0.3 can unserialize and execute commands from an untrusted file that is passed to the read_pickle() function, if __reduce__ makes an os.system call. NOTE: third parties dispute this issue because the read_pickle() function is documented as unsafe and it is the user's responsibility to use the function in a secure manner"
        },
        {
            "displayName": "pandas (cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64) 2.0.3 (.whl)",
            "cve": "CVE-2020-13091",
            "description": "pandas through 1.0.3 can unserialize and execute commands from an untrusted file that is passed to the read_pickle() function, if __reduce__ makes an os.system call. NOTE: third parties dispute this issue because the read_pickle() function is documented as unsafe and it is the user's responsibility to use the function in a secure manner"
        },
        {
            "displayName": "pandas (cp39-cp39-win_amd64) 2.0.3 (.whl)",
            "cve": "CVE-2020-13091",
            "description": "pandas through 1.0.3 can unserialize and execute commands from an untrusted file that is passed to the read_pickle() function, if __reduce__ makes an os.system call. NOTE: third parties dispute this issue because the read_pickle() function is documented as unsafe and it is the user's responsibility to use the function in a secure manner"
        },
        {
            "displayName": "pandas (cp38-cp38-win_amd64) 2.0.3 (.whl)",
            "cve": "CVE-2020-13091",
            "description": "pandas through 1.0.3 can unserialize and execute commands from an untrusted file that is passed to the read_pickle() function, if __reduce__ makes an os.system call. NOTE: third parties dispute this issue because the read_pickle() function is documented as unsafe and it is the user's responsibility to use the function in a secure manner"
        },
        {
            "displayName": "pandas (cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64) 2.0.3 (.whl)",
            "cve": "CVE-2020-13091",
            "description": "pandas through 1.0.3 can unserialize and execute commands from an untrusted file that is passed to the read_pickle() function, if __reduce__ makes an os.system call. NOTE: third parties dispute this issue because the read_pickle() function is documented as unsafe and it is the user's responsibility to use the function in a secure manner"
        },
        {
            "displayName": "pandas (cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64) 2.0.3 (.whl)",
            "cve": "CVE-2020-13091",
            "description": "pandas through 1.0.3 can unserialize and execute commands from an untrusted file that is passed to the read_pickle() function, if __reduce__ makes an os.system call. NOTE: third parties dispute this issue because the read_pickle() function is documented as unsafe and it is the user's responsibility to use the function in a secure manner"
        },
        {
            "displayName": "pandas (cp311-cp311-win_amd64) 2.0.3 (.whl)",
            "cve": "CVE-2020-13091",
            "description": "pandas through 1.0.3 can unserialize and execute commands from an untrusted file that is passed to the read_pickle() function, if __reduce__ makes an os.system call. NOTE: third parties dispute this issue because the read_pickle() function is documented as unsafe and it is the user's responsibility to use the function in a secure manner"
        },
        {
            "displayName": "pandas (cp38-cp38-win32) 2.0.3 (.whl)",
            "cve": "CVE-2020-13091",
            "description": "pandas through 1.0.3 can unserialize and execute commands from an untrusted file that is passed to the read_pickle() function, if __reduce__ makes an os.system call. NOTE: third parties dispute this issue because the read_pickle() function is documented as unsafe and it is the user's responsibility to use the function in a secure manner"
        },
        {
            "displayName": "pandas (cp38-cp38-macosx_11_0_arm64) 2.0.3 (.whl)",
            "cve": "CVE-2020-13091",
            "description": "pandas through 1.0.3 can unserialize and execute commands from an untrusted file that is passed to the read_pickle() function, if __reduce__ makes an os.system call. NOTE: third parties dispute this issue because the read_pickle() function is documented as unsafe and it is the user's responsibility to use the function in a secure manner"
        },
        {
            "displayName": "pandas (cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64) 2.0.3 (.whl)",
            "cve": "CVE-2020-13091",
            "description": "pandas through 1.0.3 can unserialize and execute commands from an untrusted file that is passed to the read_pickle() function, if __reduce__ makes an os.system call. NOTE: third parties dispute this issue because the read_pickle() function is documented as unsafe and it is the user's responsibility to use the function in a secure manner"
        },
        {
            "displayName": "pandas (cp311-cp311-win32) 2.0.3 (.whl)",
            "cve": "CVE-2020-13091",
            "description": "pandas through 1.0.3 can unserialize and execute commands from an untrusted file that is passed to the read_pickle() function, if __reduce__ makes an os.system call. NOTE: third parties dispute this issue because the read_pickle() function is documented as unsafe and it is the user's responsibility to use the function in a secure manner"
        },
        {
            "displayName": "pandas (cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64) 2.0.3 (.whl)",
            "cve": "CVE-2020-13091",
            "description": "pandas through 1.0.3 can unserialize and execute commands from an untrusted file that is passed to the read_pickle() function, if __reduce__ makes an os.system call. NOTE: third parties dispute this issue because the read_pickle() function is documented as unsafe and it is the user's responsibility to use the function in a secure manner"
        },
        {
            "displayName": "pandas (cp39-cp39-macosx_10_9_x86_64) 2.0.3 (.whl)",
            "cve": "CVE-2020-13091",
            "description": "pandas through 1.0.3 can unserialize and execute commands from an untrusted file that is passed to the read_pickle() function, if __reduce__ makes an os.system call. NOTE: third parties dispute this issue because the read_pickle() function is documented as unsafe and it is the user's responsibility to use the function in a secure manner"
        },
        {
            "displayName": "pandas (cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64) 2.0.3 (.whl)",
            "cve": "CVE-2020-13091",
            "description": "pandas through 1.0.3 can unserialize and execute commands from an untrusted file that is passed to the read_pickle() function, if __reduce__ makes an os.system call. NOTE: third parties dispute this issue because the read_pickle() function is documented as unsafe and it is the user's responsibility to use the function in a secure manner"
        },
        {
            "displayName": "pypdf (py3-none-any) 3.8.1 (.whl)",
            "cve": "CVE-2023-36464",
            "description": "pypdf is an open source, pure-python PDF library. In affected versions an attacker may craft a PDF which leads to an infinite loop if `__parse_content_stream` is executed. That is, for example, the case if the user extracted text from such a PDF. This issue was introduced in pull request #969 and resolved in pull request #1828. Users are advised to upgrade. Users unable to upgrade may modify the line `while peek not in (b\"\\r\", b\"\\n\")` in `pypdf/generic/_data_structures.py` to `while peek not in (b\"\\r\", b\"\\n\", b\"\")`."
        },
        {
            "displayName": "pypdf (py3-none-any) 3.8.1 (.whl)",
            "cve": "CVE-2023-46250",
            "description": "pypdf is a free and open-source pure-python PDF library. An attacker who uses a vulnerability present in versions 3.7.0 through 3.16.4 can craft a PDF which leads to an infinite loop. This infinite loop blocks the current process and can utilize a single core of the CPU by 100%. It does not affect memory usage. That is, for example, the case when the pypdf-user manipulates an incoming malicious PDF e.g. by merging it with another PDF or by adding annotations. The issue was fixed in version 3.17.0. As a workaround, apply the patch manually by modifying `pypdf/generic/_data_structures.py`."
        },
        {
            "displayName": "pandas (cp311-cp311-macosx_10_9_x86_64) 2.0.3 (.whl)",
            "cve": "CVE-2020-13091",
            "description": "pandas through 1.0.3 can unserialize and execute commands from an untrusted file that is passed to the read_pickle() function, if __reduce__ makes an os.system call. NOTE: third parties dispute this issue because the read_pickle() function is documented as unsafe and it is the user's responsibility to use the function in a secure manner"
        },
        {
            "displayName": "pandas (cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64) 2.0.3 (.whl)",
            "cve": "CVE-2020-13091",
            "description": "pandas through 1.0.3 can unserialize and execute commands from an untrusted file that is passed to the read_pickle() function, if __reduce__ makes an os.system call. NOTE: third parties dispute this issue because the read_pickle() function is documented as unsafe and it is the user's responsibility to use the function in a secure manner"
        },
        {
            "displayName": "pandas (cp39-cp39-win32) 2.0.3 (.whl)",
            "cve": "CVE-2020-13091",
            "description": "pandas through 1.0.3 can unserialize and execute commands from an untrusted file that is passed to the read_pickle() function, if __reduce__ makes an os.system call. NOTE: third parties dispute this issue because the read_pickle() function is documented as unsafe and it is the user's responsibility to use the function in a secure manner"
        },
        {
            "displayName": "pandas (cp310-cp310-win32) 2.0.3 (.whl)",
            "cve": "CVE-2020-13091",
            "description": "pandas through 1.0.3 can unserialize and execute commands from an untrusted file that is passed to the read_pickle() function, if __reduce__ makes an os.system call. NOTE: third parties dispute this issue because the read_pickle() function is documented as unsafe and it is the user's responsibility to use the function in a secure manner"
        },
        {
            "displayName": "pypdf 3.8.1 (.tar.gz)",
            "cve": "CVE-2023-36464",
            "description": "pypdf is an open source, pure-python PDF library. In affected versions an attacker may craft a PDF which leads to an infinite loop if `__parse_content_stream` is executed. That is, for example, the case if the user extracted text from such a PDF. This issue was introduced in pull request #969 and resolved in pull request #1828. Users are advised to upgrade. Users unable to upgrade may modify the line `while peek not in (b\"\\r\", b\"\\n\")` in `pypdf/generic/_data_structures.py` to `while peek not in (b\"\\r\", b\"\\n\", b\"\")`."
        },
        {
            "displayName": "pypdf 3.8.1 (.tar.gz)",
            "cve": "CVE-2023-46250",
            "description": "pypdf is a free and open-source pure-python PDF library. An attacker who uses a vulnerability present in versions 3.7.0 through 3.16.4 can craft a PDF which leads to an infinite loop. This infinite loop blocks the current process and can utilize a single core of the CPU by 100%. It does not affect memory usage. That is, for example, the case when the pypdf-user manipulates an incoming malicious PDF e.g. by merging it with another PDF or by adding annotations. The issue was fixed in version 3.17.0. As a workaround, apply the patch manually by modifying `pypdf/generic/_data_structures.py`."
        },
        {
            "displayName": "pandas (cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64) 2.0.3 (.whl)",
            "cve": "CVE-2020-13091",
            "description": "pandas through 1.0.3 can unserialize and execute commands from an untrusted file that is passed to the read_pickle() function, if __reduce__ makes an os.system call. NOTE: third parties dispute this issue because the read_pickle() function is documented as unsafe and it is the user's responsibility to use the function in a secure manner"
        },
        {
            "displayName": "pandas (cp310-cp310-win_amd64) 2.0.3 (.whl)",
            "cve": "CVE-2020-13091",
            "description": "pandas through 1.0.3 can unserialize and execute commands from an untrusted file that is passed to the read_pickle() function, if __reduce__ makes an os.system call. NOTE: third parties dispute this issue because the read_pickle() function is documented as unsafe and it is the user's responsibility to use the function in a secure manner"
        },
        {
            "displayName": "pandas 2.0.3 (.tar.gz)",
            "cve": "CVE-2020-13091",
            "description": "pandas through 1.0.3 can unserialize and execute commands from an untrusted file that is passed to the read_pickle() function, if __reduce__ makes an os.system call. NOTE: third parties dispute this issue because the read_pickle() function is documented as unsafe and it is the user's responsibility to use the function in a secure manner"
        }
    ],
    "TotalAdvisories": 27,
    "UniqueAdvisories": 2,
    "Advisories": [
        {
            "cve": "CVE-2020-13091",
            "advisory": "The `pandas` package contains a vector for the deserialization of untrusted data. The `read_pickle()` function in `pickle.py` will deserialize any arbitrary data in a way that will be executed during the deserialization process. Consequently, an attacker who is able to supply a pickle file to an application using this library could execute arbitrary code utilizing the applications privileges.\n\n***Advisory Deviation Notice:***\nThe unsafe deserialization functionality is considered a legitimate use case for pandas. As such, this attack vector is viable for all versions of pandas and not just version 1.0.3 and earlier, as implied by this CVE's associated advisories."
        },
        {
            "cve": "CVE-2023-36464",
            "advisory": "The  `pypdf` and `PyPDF2` packages are vulnerable due to a Loop with Unreachable Exit Condition. The `__parse_content_stream()` function in the `_data_structures.py` file fails to properly parse comments from a given PDF document. An attacker can exploit this vulnerability by enticing a victim into opening a crafted PDF with an empty malformed comment. When an application using this library attempts to parse the malicious PDF payload, it will trigger an infinite loop leading to a process crash, and ultimately a Denial of Service (DoS) condition. \n\n*Advisory Deviation Notice:*\nThe Sonatype Security Research team has decided to use a CVSS score that differs from the NVD assigned score that, based on our research, more accurately reflects the severity of the vulnerability."
        }
    ],
    "TotalWorkarounds": 0,
    "Workarounds": [],
    "DeepDiveResearch": 29,
    "SonatypeCVECount": 0,
    "TotalCVEs": 29
}