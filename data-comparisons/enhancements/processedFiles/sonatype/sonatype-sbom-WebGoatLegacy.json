[{"packageUrl": "pkg:a-name/%40rokt33r/ace-builds@1.1.9", "hash": "010519754ea6d9e3c9fa", "componentIdentifier": {"format": "a-name", "coordinates": {"name": "@rokt33r/ace-builds", "qualifier": "", "version": "1.1.9"}}, "displayName": "@rokt33r/ace-builds 1.1.9", "proprietary": false, "matchState": "exact", "pathnames": ["./src/main/webapp/js/ace/mode-gcode.js", "./src/main/webapp/js/ace/mode-lisp.js", "./src/main/webapp/js/ace/mode-lucene.js", "./src/main/webapp/js/ace/mode-mysql.js", "./src/main/webapp/js/ace/mode-vbscript.js", "./target/WebGoatLegacy-6.0.1-war-exec.jar/WebGoat.war/js/ace/mode-gcode.js", "./target/WebGoatLegacy-6.0.1-war-exec.jar/WebGoat.war/js/ace/mode-lisp.js", "./target/WebGoatLegacy-6.0.1-war-exec.jar/WebGoat.war/js/ace/mode-lucene.js", "./target/WebGoatLegacy-6.0.1-war-exec.jar/WebGoat.war/js/ace/mode-mysql.js", "./target/WebGoatLegacy-6.0.1-war-exec.jar/WebGoat.war/js/ace/mode-vbscript.js", "./target/WebGoatLegacy-6.0.1/js/ace/mode-gcode.js", "./target/WebGoatLegacy-6.0.1/js/ace/mode-lisp.js", "./target/WebGoatLegacy-6.0.1/js/ace/mode-lucene.js", "./target/WebGoatLegacy-6.0.1/js/ace/mode-mysql.js", "./target/WebGoatLegacy-6.0.1/js/ace/mode-vbscript.js"], "identificationSource": "Sonatype", "licenseData": {"declaredLicenses": [{"licenseId": "BSD-UNSPECIFIED", "licenseName": "BSD"}], "observedLicenses": [{"licenseId": "Not-Supported", "licenseName": "Not Supported"}], "effectiveLicenses": [{"licenseId": "BSD-UNSPECIFIED", "licenseName": "BSD"}], "overriddenLicenses": [], "status": "Open", "effectiveLicenseThreats": [{"licenseThreatGroupName": "Liberal", "licenseThreatGroupLevel": 0, "licenseThreatGroupCategory": "no-threat"}, {"licenseThreatGroupName": "Sonatype Informational", "licenseThreatGroupLevel": 0, "licenseThreatGroupCategory": "no-threat"}]}, "securityData": {"securityIssues": []}, "remediation": {"versionChanges": [{"type": "next-non-failing", "data": {"component": {"packageUrl": "pkg:a-name/%40rokt33r/ace-builds@1.1.9", "hash": null, "componentIdentifier": {"format": "a-name", "coordinates": {"name": "@rokt33r/ace-builds", "qualifier": "", "version": "1.1.9"}}, "displayName": "@rokt33r/ace-builds 1.1.9"}}}]}}, {"packageUrl": "pkg:maven/org.apache.tiles/tiles-core@2.2.2?type=jar", "hash": "01db730fbe26c148e3d0", "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "tiles-core", "classifier": "", "extension": "jar", "groupId": "org.apache.tiles", "version": "2.2.2"}}, "displayName": "org.apache.tiles : tiles-core : 2.2.2", "proprietary": false, "matchState": "exact", "pathnames": ["./target/WebGoatLegacy-6.0.1-war-exec.jar/WebGoat.war/WEB-INF/lib/tiles-core-2.2.2.jar", "./target/WebGoatLegacy-6.0.1/WEB-INF/lib/tiles-core-2.2.2.jar", "WebGoat:WebGoatLegacy:war:6.0.1/org.apache.tiles:tiles-core:jar:2.2.2"], "identificationSource": "Sonatype", "licenseData": {"declaredLicenses": [{"licenseId": "Apache-2.0", "licenseName": "Apache-2.0"}], "observedLicenses": [{"licenseId": "Apache-2.0", "licenseName": "Apache-2.0"}], "effectiveLicenses": [{"licenseId": "Apache-2.0", "licenseName": "Apache-2.0"}], "overriddenLicenses": [], "status": "Open", "effectiveLicenseThreats": [{"licenseThreatGroupName": "Liberal", "licenseThreatGroupLevel": 0, "licenseThreatGroupCategory": "no-threat"}]}, "securityData": {"securityIssues": []}, "dependencyData": {"directDependency": true, "innerSource": false}, "remediation": {"versionChanges": [{"type": "next-non-failing", "data": {"component": {"packageUrl": "pkg:maven/org.apache.tiles/tiles-core@2.2.2?type=jar", "hash": null, "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "tiles-core", "classifier": "", "extension": "jar", "groupId": "org.apache.tiles", "version": "2.2.2"}}, "displayName": "org.apache.tiles : tiles-core : 2.2.2"}}}, {"type": "next-non-failing-with-dependencies", "data": {"component": {"packageUrl": "pkg:maven/org.apache.tiles/tiles-core@2.2.2?type=jar", "hash": null, "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "tiles-core", "classifier": "", "extension": "jar", "groupId": "org.apache.tiles", "version": "2.2.2"}}, "displayName": "org.apache.tiles : tiles-core : 2.2.2"}}}]}}, {"packageUrl": "pkg:maven/aopalliance/aopalliance@1.0?type=jar", "hash": "0235ba8b489512805ac1", "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "aopalliance", "classifier": "", "extension": "jar", "groupId": "aopalliance", "version": "1.0"}}, "displayName": "aopalliance : aopalliance : 1.0", "proprietary": false, "matchState": "exact", "pathnames": ["./target/WebGoatLegacy-6.0.1-war-exec.jar/WebGoat.war/WEB-INF/lib/aopalliance-1.0.jar", "./target/WebGoatLegacy-6.0.1/WEB-INF/lib/aopalliance-1.0.jar", "WebGoat:WebGoatLegacy:war:6.0.1/aopalliance:aopalliance:jar:1.0"], "identificationSource": "Sonatype", "licenseData": {"declaredLicenses": [{"licenseId": "PUBLIC-DOMAIN", "licenseName": "Public Domain"}], "observedLicenses": [{"licenseId": "No-Source-License", "licenseName": "No Source License"}], "effectiveLicenses": [{"licenseId": "PUBLIC-DOMAIN", "licenseName": "Public Domain"}], "overriddenLicenses": [], "status": "Open", "effectiveLicenseThreats": [{"licenseThreatGroupName": "Liberal", "licenseThreatGroupLevel": 0, "licenseThreatGroupCategory": "no-threat"}, {"licenseThreatGroupName": "Sonatype Special Licenses", "licenseThreatGroupLevel": 5, "licenseThreatGroupCategory": "severe"}]}, "securityData": {"securityIssues": []}, "dependencyData": {"directDependency": false, "innerSource": false, "parentComponentPurls": ["pkg:maven/org.springframework.security/spring-security-core@3.2.4.RELEASE?type=jar"]}, "remediation": {"versionChanges": [{"type": "next-non-failing", "data": {"component": {"packageUrl": "pkg:maven/aopalliance/aopalliance@1.0?type=jar", "hash": null, "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "aopalliance", "classifier": "", "extension": "jar", "groupId": "aopalliance", "version": "1.0"}}, "displayName": "aopalliance : aopalliance : 1.0"}}}, {"type": "next-non-failing-with-dependencies", "data": {"component": {"packageUrl": "pkg:maven/aopalliance/aopalliance@1.0?type=jar", "hash": null, "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "aopalliance", "classifier": "", "extension": "jar", "groupId": "aopalliance", "version": "1.0"}}, "displayName": "aopalliance : aopalliance : 1.0"}}}]}}, {"packageUrl": "pkg:a-name/org.webjars%20angularjs@1.2.16", "hash": "16e2da53f9d2c1744211", "componentIdentifier": {"format": "a-name", "coordinates": {"name": "org.webjars angularjs", "qualifier": "", "version": "1.2.16"}}, "displayName": "org.webjars angularjs 1.2.16", "proprietary": false, "matchState": "exact", "pathnames": ["./src/main/webapp/js/angular/angular.js", "./src/main/webapp/js/angular/angular.min.js", "./target/WebGoatLegacy-6.0.1-war-exec.jar/WebGoat.war/js/angular/angular.js", "./target/WebGoatLegacy-6.0.1-war-exec.jar/WebGoat.war/js/angular/angular.min.js", "./target/WebGoatLegacy-6.0.1/js/angular/angular.js", "./target/WebGoatLegacy-6.0.1/js/angular/angular.min.js"], "identificationSource": "Sonatype", "licenseData": {"declaredLicenses": [{"licenseId": "MIT", "licenseName": "MIT"}], "observedLicenses": [{"licenseId": "Not-Supported", "licenseName": "Not Supported"}], "effectiveLicenses": [{"licenseId": "MIT", "licenseName": "MIT"}], "overriddenLicenses": [], "status": "Open", "effectiveLicenseThreats": [{"licenseThreatGroupName": "Liberal", "licenseThreatGroupLevel": 0, "licenseThreatGroupCategory": "no-threat"}, {"licenseThreatGroupName": "Sonatype Informational", "licenseThreatGroupLevel": 0, "licenseThreatGroupCategory": "no-threat"}]}, "securityData": {"securityIssues": [{"source": "cve", "reference": "CVE-2022-25869", "severity": 6.1, "status": "Open", "url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-25869", "threatCategory": "severe", "cwe": "79", "cvssVector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N", "cvssVectorSource": "cve_cvss_3", "deeperData": {"identifier": "CVE-2022-25869", "vulnIds": ["CVE-2022-25869"], "vulnerabilityLink": "http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2022-25869", "source": {"shortName": "CVE", "longName": "National Vulnerability Database"}, "mainSeverity": {"source": "cve_cvss_3", "score": 6.1, "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N"}, "severityScores": [{"source": "cve_cvss_2", "score": 0.0}, {"source": "sonatype_cvss_3", "score": 4.2}], "weakness": {"cweSource": "CVE", "cweIds": [{"id": "79", "uri": "https://cwe.mitre.org/data/definitions/79.html"}]}, "categories": ["data"], "description": "All versions of package angular are vulnerable to Cross-site Scripting (XSS) due to insecure page caching in the Internet Explorer browser, which allows interpolation of <textarea> elements.", "explanationMarkdown": "The `angular` package implementing the 1.x AngularJS library is vulnerable to Cross-Site Scripting (XSS) attacks. The `inputDirective()` and `hiddenInputBrowserCacheDirective()` functions in `angular.js` manage interpolation and translation of `<input>` and `<textarea>` HTML tags without ensuring that cached page contents are properly sanitized prior to being rendered in the browser again. An attacker may entice a victim to submit malicious JavaScript in a `<textarea>` field that could be rendered in the context of a victim's browser after being cached and rendered once more. Exploitation of this vulnerability may also depend on the version and the type of browser being used.", "detectionMarkdown": "The application is vulnerable by using this component.", "recommendationMarkdown": "There is no non-vulnerable upgrade path for this component/package. We recommend investigating alternative components or a potential mitigating control.", "advisories": [{"referenceType": "THIRD_PARTY", "url": "https://github.com/advisories/GHSA-prc3-vjfx-vhm9"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "sonatype", "reference": "sonatype-2014-0015", "severity": 5.4, "status": "Open", "url": "http://localhost:8070/ui/links/vln/sonatype-2014-0015", "threatCategory": "severe", "cwe": "79", "cvssVector": "CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:N", "cvssVectorSource": "sonatype_cvss_3", "deeperData": {"identifier": "sonatype-2014-0015", "vulnIds": ["sonatype-2014-0015"], "source": {"shortName": "Sonatype", "longName": "Sonatype Data Research"}, "mainSeverity": {"source": "sonatype_cvss_3", "score": 5.4, "vector": "CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:N"}, "severityScores": [{"source": "cve_cvss_2", "score": 0.0}], "weakness": {"cweSource": "Sonatype", "cweIds": [{"id": "79", "uri": "https://cwe.mitre.org/data/definitions/79.html"}]}, "categories": ["data"], "description": null, "explanationMarkdown": "The `AngularJS` package is vulnerable to Cross-Site Scripting (XSS).  The `$interpolate()` method in `interpolate.js` allows JavaScript in interpolated expressions, used in server-rendered Angular templates. A remote attacker can exploit this vulnerability by crafting the user input/request with JavaScript that is included in the response generated by the server. This response contains the JavaScript in an interpolated expression when parsed on the client side templating engine, which results in a Cross-Site Scripting attack.", "detectionMarkdown": "The application is vulnerable by using this component.", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue.", "advisories": [{"referenceType": "PROJECT", "url": "https://gist.github.com/molnarg/5348cd4254cabc1d4f7b"}, {"referenceType": "PROJECT", "url": "https://github.com/angular/angular.js/issues/5601"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "sonatype", "reference": "sonatype-2014-0016", "severity": 5.4, "status": "Open", "url": "http://localhost:8070/ui/links/vln/sonatype-2014-0016", "threatCategory": "severe", "cwe": "79", "cvssVector": "CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:N", "cvssVectorSource": "sonatype_cvss_3", "deeperData": {"identifier": "sonatype-2014-0016", "vulnIds": ["sonatype-2014-0016"], "source": {"shortName": "Sonatype", "longName": "Sonatype Data Research"}, "mainSeverity": {"source": "sonatype_cvss_3", "score": 5.4, "vector": "CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:N"}, "severityScores": [{"source": "cve_cvss_2", "score": 0.0}], "weakness": {"cweSource": "Sonatype", "cweIds": [{"id": "79", "uri": "https://cwe.mitre.org/data/definitions/79.html"}]}, "categories": ["data"], "description": null, "explanationMarkdown": "The AngularJS framework is vulnerable to Cross-Site Scripting (XSS) through malicious method calls within the angular expressions. The `ensureSafeMemberName()` and `ensureSafeObject()` methods in `parse.js` allow multiple malicious activities as below.\r\n\r\n      * Ability to invoke `.bind`, `.call` and `.apply` on a function in angular expression\r\n      * Ability to access deprecated properties like `__proto__` inside angular expression\r\n      * Ability to access `{define,lookup}{Getter,Setter}` inside angular expression\r\n      * Ability to use object inside angular expression.\r\n\r\nA remote attacker can exploit this vulnerability by crafting the angular expressions with malicious method calls, resulting in Cross-Site Scripting (XSS).\r\n\r\nSample attack:\r\n\"\r\nIt was possible to run arbitrary JS from inside angular expressions using the `Object.getOwnPropertyDescriptor` a  method like this since commit 4ab16aa:\r\n```\r\n    ''.sub.call.call(\r\n      ({})[\"constructor\"].getOwnPropertyDescriptor(''.sub.__proto__, \"constructor\").value,\r\n      null,\r\n      \"alert(1)\"\r\n    )()\r\n```\r\n\"\r\nReference: https://github.com/angular/angular.js/commit/bc6fb7cc94afddcb11b94f74d13812a6be1cdb64", "detectionMarkdown": "The application is vulnerable by using this package.", "recommendationMarkdown": "We recommend upgrading to a version of this package that is not vulnerable to this specific issue.", "advisories": [{"referenceType": "PROJECT", "url": "https://github.com/angular/angular.js/blob/master/CHANGELOG.md#130-beta14-harmonious-cacophonies-2014-06-30"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "sonatype", "reference": "sonatype-2014-0017", "severity": 6.5, "status": "Open", "url": "http://localhost:8070/ui/links/vln/sonatype-2014-0017", "threatCategory": "severe", "cwe": "79", "cvssVector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:N", "cvssVectorSource": "sonatype_cvss_3", "deeperData": {"identifier": "sonatype-2014-0017", "vulnIds": ["sonatype-2014-0017"], "source": {"shortName": "Sonatype", "longName": "Sonatype Data Research"}, "mainSeverity": {"source": "sonatype_cvss_3", "score": 6.5, "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:N"}, "severityScores": [{"source": "cve_cvss_2", "score": 0.0}], "weakness": {"cweSource": "Sonatype", "cweIds": [{"id": "79", "uri": "https://cwe.mitre.org/data/definitions/79.html"}]}, "categories": ["data"], "description": null, "explanationMarkdown": "The `AngularJS` package is vulnerable to Cross-Site Scripting (XSS). The `$set()` function in `compile.js` allows JavaScript via the `ng-srcset` directive in an image element without sanitizing it. An attacker can exploit this vulnerability by injecting malicious script in the `ng-srcset` directive in an image element, that when rendered, results in Cross-Site Scripting.", "detectionMarkdown": "The application is vulnerable by using this component.", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue.", "advisories": [{"referenceType": "PROJECT", "url": "https://github.com/angular/angular.js/pull/8975"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "sonatype", "reference": "sonatype-2014-0043", "severity": 7.5, "status": "Open", "url": "http://localhost:8070/ui/links/vln/sonatype-2014-0043", "threatCategory": "critical", "cwe": "77", "cvssVector": "CVSS:3.0/AV:N/AC:H/PR:L/UI:N/S:U/C:H/I:H/A:H", "cvssVectorSource": "sonatype_cvss_3", "deeperData": {"identifier": "sonatype-2014-0043", "vulnIds": ["sonatype-2014-0043"], "source": {"shortName": "Sonatype", "longName": "Sonatype Data Research"}, "mainSeverity": {"source": "sonatype_cvss_3", "score": 7.5, "vector": "CVSS:3.0/AV:N/AC:H/PR:L/UI:N/S:U/C:H/I:H/A:H"}, "severityScores": [{"source": "cve_cvss_2", "score": 0.0}], "weakness": {"cweSource": "Sonatype", "cweIds": [{"id": "77", "uri": "https://cwe.mitre.org/data/definitions/77.html"}]}, "categories": ["data"], "description": null, "explanationMarkdown": "The `angular` package is vulnerable to arbitrary code execution. The `angular.js` file allows a user to access constructor functions via assignment functions. A remote attacker can exploit this vulnerability by passing a malicious payload via assignment functions which when processed can lead to arbitrary code execution.", "detectionMarkdown": "\"If you dynamically generate Angular templates or expressions from user-provided content then you are at risk of XSS whatever version of Angular you are using.\r\nIf you do not generate your Angular templates or expressions from user-provided content then you are not at risk of this attack whatever version of Angular you are using.\"\r\nReference link: [http://angularjs.blogspot.in/2016/09/angular-16-expression-sandbox-removal.html](http://angularjs.blogspot.in/2016/09/angular-16-expression-sandbox-removal.html)", "recommendationMarkdown": "\"If you dynamically generate Angular templates, or expression, using user-provided content then you should conduct a security review of your deployment and assess the risk that the user-provided content poses.\"\r\nReference link: [http://angularjs.blogspot.in/2016/09/angular-16-expression-sandbox-removal.html](http://angularjs.blogspot.in/2016/09/angular-16-expression-sandbox-removal.html)", "advisories": [{"referenceType": "PROJECT", "url": "http://angularjs.blogspot.in/2016/09/angular-16-expression-sandbox-removal.html"}, {"referenceType": "PROJECT", "url": "https://github.com/angular/angular.js/blob/master/CHANGELOG.md#132-cardiovasculatory-magnification-2014-11-07"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "sonatype", "reference": "sonatype-2014-0058", "severity": 3.6, "status": "Open", "url": "http://localhost:8070/ui/links/vln/sonatype-2014-0058", "threatCategory": "moderate", "cwe": "79", "cvssVector": "CVSS:3.0/AV:P/AC:H/PR:H/UI:N/S:U/C:L/I:L/A:L", "cvssVectorSource": "sonatype_cvss_3", "deeperData": {"identifier": "sonatype-2014-0058", "vulnIds": ["sonatype-2014-0058"], "source": {"shortName": "Sonatype", "longName": "Sonatype Data Research"}, "mainSeverity": {"source": "sonatype_cvss_3", "score": 3.6, "vector": "CVSS:3.0/AV:P/AC:H/PR:H/UI:N/S:U/C:L/I:L/A:L"}, "severityScores": [{"source": "cve_cvss_2", "score": 0.0}], "weakness": {"cweSource": "Sonatype", "cweIds": [{"id": "79", "uri": "https://cwe.mitre.org/data/definitions/79.html"}]}, "categories": ["data"], "description": null, "explanationMarkdown": "The `Angular` package is vulnerable to `Cross-Site Scripting (XSS)`.  The `ensureSafeMemberName()` function allows references to the potentially dangerous properties bind, apply, and call in angular expressions.  This can potentially lead to unintended side effects that can allow a remote attacker to execute arbitrary JavaScript against a vulnerable application.", "detectionMarkdown": "The application is vulnerable by using this component.", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue.", "advisories": [{"referenceType": "PROJECT", "url": "https://github.com/angular/angular.js/blob/b3b5015cb7919708ce179dc3d6f0d7d7f43ef621/CHANGELOG.md#1219-precognitive-flashbacks-2014-06-30"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "sonatype", "reference": "sonatype-2014-0059", "severity": 3.6, "status": "Open", "url": "http://localhost:8070/ui/links/vln/sonatype-2014-0059", "threatCategory": "moderate", "cwe": "20", "cvssVector": "CVSS:3.0/AV:P/AC:H/PR:H/UI:N/S:U/C:L/I:L/A:L", "cvssVectorSource": "sonatype_cvss_3", "deeperData": {"identifier": "sonatype-2014-0059", "vulnIds": ["sonatype-2014-0059"], "source": {"shortName": "Sonatype", "longName": "Sonatype Data Research"}, "mainSeverity": {"source": "sonatype_cvss_3", "score": 3.6, "vector": "CVSS:3.0/AV:P/AC:H/PR:H/UI:N/S:U/C:L/I:L/A:L"}, "severityScores": [{"source": "cve_cvss_2", "score": 0.0}], "weakness": {"cweSource": "Sonatype", "cweIds": [{"id": "20", "uri": "https://cwe.mitre.org/data/definitions/20.html"}]}, "categories": ["data"], "description": null, "explanationMarkdown": "The `Angular` package is vulnerable to `Cross-Site Scripting (XSS)`.  The `ensureSafeMemberName()` function allows references to `_proto` in angular expressions.  This can potentially lead to unintended side effects that can allow a remote attacker to execute arbitrary JavaScript against a vulnerable application.", "detectionMarkdown": "The application is vulnerable by using this component.", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue.", "advisories": [{"referenceType": "PROJECT", "url": "https://github.com/angular/angular.js/blob/b3b5015cb7919708ce179dc3d6f0d7d7f43ef621/CHANGELOG.md#1219-precognitive-flashbacks-2014-06-30"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "sonatype", "reference": "sonatype-2014-0060", "severity": 4.4, "status": "Open", "url": "http://localhost:8070/ui/links/vln/sonatype-2014-0060", "threatCategory": "severe", "cwe": "79", "cvssVector": "CVSS:3.0/AV:N/AC:H/PR:L/UI:R/S:C/C:L/I:L/A:N", "cvssVectorSource": "sonatype_cvss_3", "deeperData": {"identifier": "sonatype-2014-0060", "vulnIds": ["sonatype-2014-0060"], "source": {"shortName": "Sonatype", "longName": "Sonatype Data Research"}, "mainSeverity": {"source": "sonatype_cvss_3", "score": 4.4, "vector": "CVSS:3.0/AV:N/AC:H/PR:L/UI:R/S:C/C:L/I:L/A:N"}, "severityScores": [{"source": "cve_cvss_2", "score": 0.0}], "weakness": {"cweSource": "Sonatype", "cweIds": [{"id": "79", "uri": "https://cwe.mitre.org/data/definitions/79.html"}]}, "categories": ["data"], "description": null, "explanationMarkdown": "The `Angular` package is vulnerable to `Cross-Site Scripting (XSS)`.  The `ensureSafeMemberName()` function allows references to certain potentially dangerous properties in angular expressions, such as define, lookup, etc.  This can potentially lead to unintended side effects that can allow a remote attacker to execute arbitrary JavaScript against a vulnerable application.\n", "detectionMarkdown": "The application is vulnerable by using this component.", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue.", "advisories": [{"referenceType": "PROJECT", "url": "https://github.com/angular/angular.js/blob/b3b5015cb7919708ce179dc3d6f0d7d7f43ef621/CHANGELOG.md#1219-precognitive-flashbacks-2014-06-30"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "sonatype", "reference": "sonatype-2014-0068", "severity": 6.5, "status": "Open", "url": "http://localhost:8070/ui/links/vln/sonatype-2014-0068", "threatCategory": "severe", "cwe": "79", "cvssVector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:N", "cvssVectorSource": "sonatype_cvss_3", "deeperData": {"identifier": "sonatype-2014-0068", "vulnIds": ["sonatype-2014-0068"], "source": {"shortName": "Sonatype", "longName": "Sonatype Data Research"}, "mainSeverity": {"source": "sonatype_cvss_3", "score": 6.5, "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:N"}, "severityScores": [{"source": "cve_cvss_2", "score": 0.0}], "weakness": {"cweSource": "Sonatype", "cweIds": [{"id": "79", "uri": "https://cwe.mitre.org/data/definitions/79.html"}]}, "categories": ["data", "functional"], "description": null, "explanationMarkdown": "The Angular package is potentially vulnerable to XSS.  When using the `$parse` functionality, Angular expressions containing references to the `Object` prototype may be evaluated.  Untrusted input that passed to this functionality could use a reference to `Object` to execute arbitrary JavaScript in the context of the Angular application.", "detectionMarkdown": "The application is vulnerable by using this component's `$parse` functionality.", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue.", "advisories": [{"referenceType": "PROJECT", "url": "https://github.com/angular/angular.js/blob/b3b5015cb7919708ce179dc3d6f0d7d7f43ef621/CHANGELOG.md#1219-precognitive-flashbacks-2014-06-30"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "sonatype", "reference": "sonatype-2014-0069", "severity": 5.4, "status": "Open", "url": "http://localhost:8070/ui/links/vln/sonatype-2014-0069", "threatCategory": "severe", "cwe": "79", "cvssVector": "CVSS:3.0/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N", "cvssVectorSource": "sonatype_cvss_3", "deeperData": {"identifier": "sonatype-2014-0069", "vulnIds": ["sonatype-2014-0069"], "source": {"shortName": "Sonatype", "longName": "Sonatype Data Research"}, "mainSeverity": {"source": "sonatype_cvss_3", "score": 5.4, "vector": "CVSS:3.0/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N"}, "severityScores": [{"source": "cve_cvss_2", "score": 0.0}], "weakness": {"cweSource": "Sonatype", "cweIds": [{"id": "79", "uri": "https://cwe.mitre.org/data/definitions/79.html"}]}, "categories": ["data", "functional"], "description": null, "explanationMarkdown": "The Angular package is potentially vulnerable to XSS.  When using the $parse functionality, it would evaluate Angular expressions that contained a reference to Object.  Untrusted input that was passed to parse could use a reference to Object to execute arbitrary JavaScript in the context of the Angular application.", "detectionMarkdown": "The application is vulnerable by using this component's $parse functionality.", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue.", "advisories": [{"referenceType": "PROJECT", "url": "https://github.com/angular/angular.js/blob/b3b5015cb7919708ce179dc3d6f0d7d7f43ef621/CHANGELOG.md#1219-precognitive-flashbacks-2014-06-30"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "sonatype", "reference": "sonatype-2014-0248", "severity": 6.1, "status": "Open", "url": "http://localhost:8070/ui/links/vln/sonatype-2014-0248", "threatCategory": "severe", "cwe": "79", "cvssVector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N", "cvssVectorSource": "sonatype_cvss_3", "deeperData": {"identifier": "sonatype-2014-0248", "vulnIds": ["sonatype-2014-0248"], "source": {"shortName": "Sonatype", "longName": "Sonatype Data Research"}, "mainSeverity": {"source": "sonatype_cvss_3", "score": 6.1, "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N"}, "severityScores": [{"source": "cve_cvss_2", "score": 0.0}], "weakness": {"cweSource": "Sonatype", "cweIds": [{"id": "79", "uri": "https://cwe.mitre.org/data/definitions/79.html"}]}, "categories": ["data"], "description": null, "explanationMarkdown": "The `angular` package is vulnerable to Cross-Site Scripting (XSS). The `angular.js` file allows raw HTML in user input to be rendered on a webpage. A remote attacker can exploit this behavior by enticing a victim into submitting specially-crafted input containing malicious HTML which, when rendered, would lead to XSS in the victim's browser.", "detectionMarkdown": "The application is vulnerable by using this component.", "recommendationMarkdown": "", "advisories": [{"referenceType": "PROJECT", "url": "https://github.com/angular/angular.js/issues/7464"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "sonatype", "reference": "sonatype-2015-0057", "severity": 6.1, "status": "Open", "url": "http://localhost:8070/ui/links/vln/sonatype-2015-0057", "threatCategory": "severe", "cwe": "79", "cvssVector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N", "cvssVectorSource": "sonatype_cvss_3", "deeperData": {"identifier": "sonatype-2015-0057", "vulnIds": ["sonatype-2015-0057"], "source": {"shortName": "Sonatype", "longName": "Sonatype Data Research"}, "mainSeverity": {"source": "sonatype_cvss_3", "score": 6.1, "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N"}, "severityScores": [{"source": "cve_cvss_2", "score": 0.0}], "weakness": {"cweSource": "Sonatype", "cweIds": [{"id": "79", "uri": "https://cwe.mitre.org/data/definitions/79.html"}]}, "categories": ["data"], "description": null, "explanationMarkdown": "The `angular` package in NPM, and the `AngularJS.Core` and `AngularJS` packages in NuGet are vulnerable to Cross Site Scripting (XSS). The `sendReq()` function in the `angular.js` file does not validate the `JSONP` endpoint URL against the predefined trusted resource URLs before processing the `JSONP` request. An attacker can exploit this vulnerability by enticing the victim to send a malicious `JSONP` request. Once the request is sent, malicious JavaScript is returned from the attacker's website, which is then executed in the victim's browser.", "detectionMarkdown": "The application is vulnerable by using this component.", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue. \n\nWorkaround: \n\n>All JSONP requests now require the URL to be trusted as resource URLs. \nThere are two approaches to trust a URL: \n>\n>**Whitelisting with the `$sceDelegateProvider.resourceUrlWhitelist()` \nmethod.** \n>\n>You configure this list in a module configuration block: \n>\n``` \nappModule.config(['$sceDelegateProvider', function($sceDelegateProvider) { \n  $sceDelegateProvider.resourceUrlWhiteList([ \n    // Allow same origin resource loads. \n    'self', \n    // Allow JSONP calls that match this pattern \n    'https://some.dataserver.com/**.jsonp?**` \n  ]); \n}]); \n``` \n>\n>**Explicitly trusting the URL via the `$sce.trustAsResourceUrl(url)` \nmethod** \n>\n>You can pass a trusted object instead of a string as a URL to the `$http` \nservice: \n>\n``` \nvar promise = $http.jsonp($sce.trustAsResourceUrl(url)); \n``` \n \nReference: [https://github.com/angular/angular.js/commit/6476af83cd0418c84e034a955b12a842794385c4#diff-748e0a1e1a7db3458d5f95d59d7e16c9R885](https://github.com/angular/angular.js/commit/6476af83cd0418c84e034a955b12a842794385c4#diff-748e0a1e1a7db3458d5f95d59d7e16c9R885)", "advisories": [{"referenceType": "PROJECT", "url": "https://github.com/angular/angular.js/issues/11352"}, {"referenceType": "PROJECT", "url": "https://ossindex.net/resource/package/7099011201/vulnerabilities"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "sonatype", "reference": "sonatype-2015-0059", "severity": 6.5, "status": "Open", "url": "http://localhost:8070/ui/links/vln/sonatype-2015-0059", "threatCategory": "severe", "cwe": "79", "cvssVector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:N", "cvssVectorSource": "sonatype_cvss_3", "deeperData": {"identifier": "sonatype-2015-0059", "vulnIds": ["sonatype-2015-0059"], "source": {"shortName": "Sonatype", "longName": "Sonatype Data Research"}, "mainSeverity": {"source": "sonatype_cvss_3", "score": 6.5, "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:N"}, "severityScores": [{"source": "cve_cvss_2", "score": 0.0}], "weakness": {"cweSource": "Sonatype", "cweIds": [{"id": "79", "uri": "https://cwe.mitre.org/data/definitions/79.html"}]}, "categories": ["data"], "description": null, "explanationMarkdown": "The `angular` package is vulnerable to Cross-Site Scripting (XSS). The `computedMember()`, `nonComputedMember()`, and `recurse()` functions in the `angular.js` file allows JavaScript to be injected in the constructor properties of an object in angular expressions. An attacker can exploit this vulnerability by injecting an expression crafted with malicious script assigned to the constructor property of an object which, when parsed, results in XSS.", "detectionMarkdown": "The application is vulnerable by using this component.", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue.\n\nNote: If this component is included as a bundled/transitive dependency of another component, there may not be an upgrade path. In this instance, we recommend contacting the maintainers who included the vulnerable package. Alternatively, we recommend investigating alternative components or a potential mitigating control.", "advisories": [{"referenceType": "PROJECT", "url": "https://github.com/angular/angular.js/issues/14939"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "sonatype", "reference": "sonatype-2015-0078", "severity": 4.8, "status": "Open", "url": "http://localhost:8070/ui/links/vln/sonatype-2015-0078", "threatCategory": "severe", "cwe": "346", "cvssVector": "CVSS:3.0/AV:N/AC:L/PR:H/UI:R/S:C/C:L/I:L/A:N", "cvssVectorSource": "sonatype_cvss_3", "deeperData": {"identifier": "sonatype-2015-0078", "vulnIds": ["sonatype-2015-0078"], "source": {"shortName": "Sonatype", "longName": "Sonatype Data Research"}, "mainSeverity": {"source": "sonatype_cvss_3", "score": 4.8, "vector": "CVSS:3.0/AV:N/AC:L/PR:H/UI:R/S:C/C:L/I:L/A:N"}, "severityScores": [{"source": "cve_cvss_2", "score": 0.0}], "weakness": {"cweSource": "Sonatype", "cweIds": [{"id": "346", "uri": "https://cwe.mitre.org/data/definitions/346.html"}]}, "categories": ["data"], "description": null, "explanationMarkdown": "The `angular` package in NPM, and the `AngularJS.Core` and `AngularJS` packages in NuGet are vulnerable to Cross-Site Request Forgery (CSRF). The `sendReq()` function in the `angular.js` file doesn't properly validate the callback parameter. One likely exploit scenario involves the use of SWF files, deemed the Rosetta Flash vulnerability. This means that a remote attacker can host a page containing an `<object>` element with its `type` attribute set to \"application/x-shockwave-flash\" and its `data` attribute set to the vulnerable JSONP endpoint URL where the `callback` parameter of the URL is set to an alphanumeric encoding of a malicious SWF file. When rendered in the browser, the reflected SWF data will be recognized as a valid SWF file and will execute. Because the SWF file is reflected from the vulnerable site and may make cookie carrying requests, the browser believes the vulnerable site to be its origin, bypassing the Same Origin Policy. This allows making requests to the vulnerable site and possibly exfiltrating the vulnerable site's data to the attacker's domain.", "detectionMarkdown": "The application is vulnerable by using this component.", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue.\n\nNote: If this component is included as a bundled/transitive dependency of another component, there may not be an upgrade path. In this instance, we recommend contacting the maintainers who included the vulnerable package. Alternatively, we recommend investigating alternative components or a potential mitigating control.", "advisories": [{"referenceType": "PROJECT", "url": "https://github.com/angular/angular.js/pull/15143"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "sonatype", "reference": "sonatype-2015-0080", "severity": 5.4, "status": "Open", "url": "http://localhost:8070/ui/links/vln/sonatype-2015-0080", "threatCategory": "severe", "cwe": "79", "cvssVector": "CVSS:3.0/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N", "cvssVectorSource": "sonatype_cvss_3", "deeperData": {"identifier": "sonatype-2015-0080", "vulnIds": ["sonatype-2015-0080"], "source": {"shortName": "Sonatype", "longName": "Sonatype Data Research"}, "mainSeverity": {"source": "sonatype_cvss_3", "score": 5.4, "vector": "CVSS:3.0/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N"}, "severityScores": [{"source": "cve_cvss_2", "score": 0.0}], "weakness": {"cweSource": "Sonatype", "cweIds": [{"id": "79", "uri": "https://cwe.mitre.org/data/definitions/79.html"}]}, "categories": ["data"], "description": null, "explanationMarkdown": "AngularJS is vulnerable to Cross-Site Scripting (XSS). The `$set` function in `compile.js` allows JavaScript in the `xlink:href` attribute of an anchor (`a`) element within the svg element without sanitizing it. An attacker can exploit this vulnerability by crafting the `xlink:href` attribute of an anchor (`a`) element with malicious script, that when rendered results in Cross-Site Scripting.", "detectionMarkdown": "The application is vulnerable by using this component.", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue.\n\nNote: If this component is included as a bundled/transitive dependency of another component, there may not be an upgrade path. In this instance, we recommend contacting the maintainers who included the vulnerable package. Alternatively, we recommend investigating alternative components or a potential mitigating control.", "advisories": [{"referenceType": "PROJECT", "url": "https://github.com/angular/angular.js/pull/12524"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "sonatype", "reference": "sonatype-2016-0272", "severity": 4.7, "status": "Open", "url": "http://localhost:8070/ui/links/vln/sonatype-2016-0272", "threatCategory": "severe", "cwe": "693", "cvssVector": "CVSS:3.0/AV:N/AC:H/PR:N/UI:R/S:C/C:L/I:L/A:N", "cvssVectorSource": "sonatype_cvss_3", "deeperData": {"identifier": "sonatype-2016-0272", "vulnIds": ["sonatype-2016-0272"], "source": {"shortName": "Sonatype", "longName": "Sonatype Data Research"}, "mainSeverity": {"source": "sonatype_cvss_3", "score": 4.7, "vector": "CVSS:3.0/AV:N/AC:H/PR:N/UI:R/S:C/C:L/I:L/A:N"}, "severityScores": [{"source": "cve_cvss_2", "score": 0.0}], "weakness": {"cweSource": "Sonatype", "cweIds": [{"id": "693", "uri": "https://cwe.mitre.org/data/definitions/693.html"}]}, "categories": ["data"], "description": null, "explanationMarkdown": "AngularJS, when used in browser extensions, is vulnerable to a Content Security Policy (CSP) bypass vulnerability. The `angularInit()` function in the `angular.js` file does not properly prevent auto-bootstrapping when loaded from extensions. As a part of the AngularJS bootstrap process, portions of the HTML DOM are evaluated and potentially executed; by including AngularJS in a browser extension, it is possible to utilize this behavior to bypass the CSP of the target application. An attacker can leverage this vulnerability to execute XSS that would otherwise have been prevented by the CSP against victims that use a browser extension that includes AngularJS.", "detectionMarkdown": "The application is vulnerable by using this component.", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue.\n\nNote: If this component is included as a bundled/transitive dependency of another component, there may not be an upgrade path. In this instance, we recommend contacting the maintainers who included the vulnerable package. Alternatively, we recommend investigating alternative components or a potential mitigating control.", "advisories": [{"referenceType": "PROJECT", "url": "https://github.com/angular/angular.js/pull/15346/"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "sonatype", "reference": "sonatype-2016-0282", "severity": 6.5, "status": "Open", "url": "http://localhost:8070/ui/links/vln/sonatype-2016-0282", "threatCategory": "severe", "cwe": "79", "cvssVector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:C/C:L/I:L/A:L", "cvssVectorSource": "sonatype_cvss_3", "deeperData": {"identifier": "sonatype-2016-0282", "vulnIds": ["sonatype-2016-0282"], "source": {"shortName": "Sonatype", "longName": "Sonatype Data Research"}, "mainSeverity": {"source": "sonatype_cvss_3", "score": 6.5, "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:C/C:L/I:L/A:L"}, "severityScores": [{"source": "cve_cvss_2", "score": 0.0}], "weakness": {"cweSource": "Sonatype", "cweIds": [{"id": "79", "uri": "https://cwe.mitre.org/data/definitions/79.html"}]}, "categories": ["data"], "description": null, "explanationMarkdown": "AngularJS is vulnerable to Cross-Site Scripting (XSS). The `getTrustedContext()` function in `compile.js` allows malicious links through the `href` attribute of a `Link` element, as this element has no protection from the `$sce` module. An attacker can exploit this vulnerability by crafting input placed in the `href` attribute of a `Link` element to contain malicious script, which leads to Cross-Site Scripting.\n\n**Advisory Deviation Notice:** The Sonatype security research team discovered that the vulnerability is actually fixed in versions 1.6.0-rc.0 and 1.2.30, not just the version range <1.2.30 >=1.0.0 as the advisory states.", "detectionMarkdown": "The application is vulnerable by using this component.", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue.\n\nNote: If this component is included as a bundled/transitive dependency of another component, there may not be an upgrade path. In this instance, we recommend contacting the maintainers who included the vulnerable package. Alternatively, we recommend investigating alternative components or a potential mitigating control.", "advisories": [{"referenceType": "PROJECT", "url": "https://github.com/angular/angular.js/pull/14687"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "sonatype", "reference": "sonatype-2017-0023", "severity": 4.7, "status": "Open", "url": "http://localhost:8070/ui/links/vln/sonatype-2017-0023", "threatCategory": "severe", "cwe": "693", "cvssVector": "CVSS:3.0/AV:N/AC:H/PR:N/UI:R/S:C/C:L/I:L/A:N", "cvssVectorSource": "sonatype_cvss_3", "deeperData": {"identifier": "sonatype-2017-0023", "vulnIds": ["sonatype-2017-0023"], "source": {"shortName": "Sonatype", "longName": "Sonatype Data Research"}, "mainSeverity": {"source": "sonatype_cvss_3", "score": 4.7, "vector": "CVSS:3.0/AV:N/AC:H/PR:N/UI:R/S:C/C:L/I:L/A:N"}, "severityScores": [{"source": "cve_cvss_2", "score": 0.0}], "weakness": {"cweSource": "Sonatype", "cweIds": [{"id": "693", "uri": "https://cwe.mitre.org/data/definitions/693.html"}]}, "categories": ["data"], "description": null, "explanationMarkdown": "AngularJS, when used in browser extensions, is vulnerable to a Content Security Policy (CSP) bypass vulnerability. As a part of the AngularJS bootstrap process, portions of the HTML DOM are evaluated and potentially executed; by including AngularJS in a browser extension, it is possible to utilize this behavior to bypass the CSP of the target application. An attacker can leverage this vulnerability to execute XSS that would otherwise have been prevented by the CSP against victims that use a browser extension that includes AngularJS.", "detectionMarkdown": "The application is vulnerable by using this component.", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue.\n\nNote: If this component is included as a bundled/transitive dependency of another component, there may not be an upgrade path. In this instance, we recommend contacting the maintainers who included the vulnerable package. Alternatively, we recommend investigating alternative components or a potential mitigating control.", "advisories": [{"referenceType": "PROJECT", "url": "https://github.com/mozilla/addons-linter/issues/1000#issuecomment-282314001"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "sonatype", "reference": "sonatype-2017-0486", "severity": 6.1, "status": "Open", "url": "http://localhost:8070/ui/links/vln/sonatype-2017-0486", "threatCategory": "severe", "cwe": "79", "cvssVector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N", "cvssVectorSource": "sonatype_cvss_3", "deeperData": {"identifier": "sonatype-2017-0486", "vulnIds": ["sonatype-2017-0486"], "source": {"shortName": "Sonatype", "longName": "Sonatype Data Research"}, "mainSeverity": {"source": "sonatype_cvss_3", "score": 6.1, "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N"}, "severityScores": [{"source": "cve_cvss_2", "score": 0.0}], "weakness": {"cweSource": "Sonatype", "cweIds": [{"id": "79", "uri": "https://cwe.mitre.org/data/definitions/79.html"}]}, "categories": ["data"], "description": null, "explanationMarkdown": "Angular is vulnerable to Cross-Site Scripting.  The `sanitizeUri()` function in `angular.js` allows arbitrary JavaScript to be injected into certain HTML attributes in the form of `javascript:` protocol URIs.  If user input is used to generate an HTML attribute containing a URI (such as an `href` or `src` attribute), an attacker can exploit this vulnerability by injecting a URI containing malicious JavaScript.", "detectionMarkdown": "The application is vulnerable by using this component.", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue.\n\nNote: If this component is included as a bundled/transitive dependency of another component, there may not be an upgrade path. In this instance, we recommend contacting the maintainers who included the vulnerable package. Alternatively, we recommend investigating alternative components or a potential mitigating control.", "advisories": [{"referenceType": "PROJECT", "url": "https://github.com/angular/angular.js/pull/16414"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "sonatype", "reference": "sonatype-2020-0336", "severity": 6.1, "status": "Open", "url": "http://localhost:8070/ui/links/vln/sonatype-2020-0336", "threatCategory": "severe", "cwe": "79", "cvssVector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N", "cvssVectorSource": "sonatype_cvss_3", "deeperData": {"identifier": "sonatype-2020-0336", "vulnIds": ["sonatype-2020-0336", "CVE-2020-7676"], "source": {"shortName": "Sonatype", "longName": "Sonatype Data Research"}, "mainSeverity": {"source": "sonatype_cvss_3", "score": 6.1, "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N"}, "severityScores": [{"source": "cve_cvss_2", "score": 0.0}], "weakness": {"cweSource": "Sonatype", "cweIds": [{"id": "79", "uri": "https://cwe.mitre.org/data/definitions/79.html"}]}, "categories": ["data"], "description": null, "explanationMarkdown": "The `angular` package is vulnerable to Cross-Site Scripting (XSS). The `angular.js` and `angular.min.js` files use regex patterns to sanitize XML/HTML tags, however, the resulting tags do not get properly sanitized in certain cases. An attacker can exploit this vulnerability to cause XSS attacks.\n\n**Note**: This vulnerability was assigned CVE-2020-7676.\n", "detectionMarkdown": "The application is vulnerable by using this component. Please also refer to [additional documentation](https://github.com/angular/angular.js/blob/c8b7c16b78bc3ba7486ebf9c41f4603a9f429dd1/src/jqLite.js#L93) provided by the project. ", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue.\n\nNote: If this component is included as a bundled/transitive dependency of another component, there may not be an upgrade path. In this instance, we recommend contacting the maintainers who included the vulnerable package. Alternatively, we recommend investigating alternative components or a potential mitigating control.", "advisories": [{"referenceType": "PROJECT", "url": "https://github.com/angular/angular.js/pull/17028"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}]}, "remediation": {"versionChanges": [{"type": "next-non-failing", "data": {"component": {"packageUrl": "pkg:a-name/org.webjars%20angularjs@1.2.16", "hash": null, "componentIdentifier": {"format": "a-name", "coordinates": {"name": "org.webjars angularjs", "qualifier": "", "version": "1.2.16"}}, "displayName": "org.webjars angularjs 1.2.16"}}}]}}, {"packageUrl": "pkg:maven/java2html/j2h@1.3.1?type=jar", "hash": "18d393ad345b03b49c62", "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "j2h", "classifier": "", "extension": "jar", "groupId": "java2html", "version": "1.3.1"}}, "displayName": "java2html : j2h : 1.3.1", "proprietary": false, "matchState": "exact", "pathnames": ["./target/WebGoatLegacy-6.0.1-war-exec.jar/WebGoat.war/WEB-INF/lib/j2h-1.3.1.jar", "./target/WebGoatLegacy-6.0.1/WEB-INF/lib/j2h-1.3.1.jar", "WebGoat:WebGoatLegacy:war:6.0.1/java2html:j2h:jar:1.3.1"], "identificationSource": "Sonatype", "licenseData": {"declaredLicenses": [{"licenseId": "Not-Declared", "licenseName": "Not Declared"}], "observedLicenses": [{"licenseId": "No-Source-License", "licenseName": "No Source License"}], "effectiveLicenses": [{"licenseId": "Not-Declared", "licenseName": "Not Declared"}, {"licenseId": "No-Source-License", "licenseName": "No Source License"}], "overriddenLicenses": [], "status": "Open", "effectiveLicenseThreats": [{"licenseThreatGroupName": "Sonatype Special Licenses", "licenseThreatGroupLevel": 5, "licenseThreatGroupCategory": "severe"}]}, "securityData": {"securityIssues": []}, "dependencyData": {"directDependency": true, "innerSource": false}, "remediation": {"versionChanges": [{"type": "next-non-failing", "data": {"component": {"packageUrl": "pkg:maven/java2html/j2h@1.3.1?type=jar", "hash": null, "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "j2h", "classifier": "", "extension": "jar", "groupId": "java2html", "version": "1.3.1"}}, "displayName": "java2html : j2h : 1.3.1"}}}, {"type": "next-non-failing-with-dependencies", "data": {"component": {"packageUrl": "pkg:maven/java2html/j2h@1.3.1?type=jar", "hash": null, "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "j2h", "classifier": "", "extension": "jar", "groupId": "java2html", "version": "1.3.1"}}, "displayName": "java2html : j2h : 1.3.1"}}}]}}, {"packageUrl": "pkg:maven/org.springframework.security/spring-security-web@3.2.4.RELEASE?type=jar", "hash": "197d803ab63dd3523d9d", "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "spring-security-web", "classifier": "", "extension": "jar", "groupId": "org.springframework.security", "version": "3.2.4.RELEASE"}}, "displayName": "org.springframework.security : spring-security-web : 3.2.4.RELEASE", "proprietary": false, "matchState": "exact", "pathnames": ["./target/WebGoatLegacy-6.0.1-war-exec.jar/WebGoat.war/WEB-INF/lib/spring-security-web-3.2.4.RELEASE.jar", "./target/WebGoatLegacy-6.0.1/WEB-INF/lib/spring-security-web-3.2.4.RELEASE.jar", "WebGoat:WebGoatLegacy:war:6.0.1/org.springframework.security:spring-security-web:jar:3.2.4.RELEASE"], "identificationSource": "Sonatype", "licenseData": {"declaredLicenses": [{"licenseId": "Apache-2.0", "licenseName": "Apache-2.0"}], "observedLicenses": [{"licenseId": "Apache-2.0", "licenseName": "Apache-2.0"}], "effectiveLicenses": [{"licenseId": "Apache-2.0", "licenseName": "Apache-2.0"}], "overriddenLicenses": [], "status": "Open", "effectiveLicenseThreats": [{"licenseThreatGroupName": "Liberal", "licenseThreatGroupLevel": 0, "licenseThreatGroupCategory": "no-threat"}]}, "securityData": {"securityIssues": [{"source": "cve", "reference": "CVE-2016-9879", "severity": 7.5, "status": "Open", "url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2016-9879", "threatCategory": "critical", "cwe": "417", "cvssVector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N", "cvssVectorSource": "cve_cvss_3", "deeperData": {"identifier": "CVE-2016-9879", "vulnIds": ["CVE-2016-9879"], "vulnerabilityLink": "http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2016-9879", "source": {"shortName": "CVE", "longName": "National Vulnerability Database"}, "mainSeverity": {"source": "cve_cvss_3", "score": 7.5, "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N"}, "severityScores": [{"source": "cve_cvss_2", "score": 5.0}, {"source": "sonatype_cvss_3", "score": 7.5}], "weakness": {"cweSource": "CVE", "cweIds": [{"id": "417", "uri": "https://cwe.mitre.org/data/definitions/417.html"}]}, "categories": ["data"], "description": "An issue was discovered in Pivotal Spring Security before 3.2.10, 4.1.x before 4.1.4, and 4.2.x before 4.2.1. Spring Security does not consider URL path parameters when processing security constraints. By adding a URL path parameter with an encoded \"/\" to a request, an attacker may be able to bypass a security constraint. The root cause of this issue is a lack of clarity regarding the handling of path parameters in the Servlet Specification. Some Servlet containers include path parameters in the value returned for getPathInfo() and some do not. Spring Security uses the value returned by getPathInfo() as part of the process of mapping requests to security constraints. The unexpected presence of path parameters can cause a constraint to be bypassed. Users of Apache Tomcat (all current versions) are not affected by this vulnerability since Tomcat follows the guidance previously provided by the Servlet Expert group and strips path parameters from the value returned by getContextPath(), getServletPath(), and getPathInfo(). Users of other Servlet containers based on Apache Tomcat may or may not be affected depending on whether or not the handling of path parameters has been modified. Users of IBM WebSphere Application Server 8.5.x are known to be affected. Users of other containers that implement the Servlet specification may be affected.", "explanationMarkdown": "Spring Security is vulnerable to an Access Control Bypass due to an incomplete fix for CVE-2010-3700. An encoded `/` in a request's path parameters can cause the request to bypass the configured security constraints. A remote attacker can exploit this vulnerability by crafting a request with an encoded `/` in the URL to bypass configured security constraints.", "detectionMarkdown": "The application is vulnerable by using this component.", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue.", "advisories": [{"referenceType": "PROJECT", "url": "https://pivotal.io/security/cve-2016-9879"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "cve", "reference": "CVE-2018-1199", "severity": 5.3, "status": "Open", "url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-1199", "threatCategory": "severe", "cwe": "20", "cvssVector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N", "cvssVectorSource": "cve_cvss_3", "deeperData": {"identifier": "CVE-2018-1199", "vulnIds": ["CVE-2018-1199"], "vulnerabilityLink": "http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2018-1199", "source": {"shortName": "CVE", "longName": "National Vulnerability Database"}, "mainSeverity": {"source": "cve_cvss_3", "score": 5.3, "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N"}, "severityScores": [{"source": "cve_cvss_2", "score": 5.0}, {"source": "sonatype_cvss_3", "score": 5.3}], "weakness": {"cweSource": "CVE", "cweIds": [{"id": "20", "uri": "https://cwe.mitre.org/data/definitions/20.html"}]}, "categories": ["data"], "description": "Spring Security (Spring Security 4.1.x before 4.1.5, 4.2.x before 4.2.4, and 5.0.x before 5.0.1; and Spring Framework 4.3.x before 4.3.14 and 5.0.x before 5.0.3) does not consider URL path parameters when processing security constraints. By adding a URL path parameter with special encodings, an attacker may be able to bypass a security constraint. The root cause of this issue is a lack of clarity regarding the handling of path parameters in the Servlet Specification. Some Servlet containers include path parameters in the value returned for getPathInfo() and some do not. Spring Security uses the value returned by getPathInfo() as part of the process of mapping requests to security constraints. In this particular attack, different character encodings used in path parameters allows secured Spring MVC static resource URLs to be bypassed.", "explanationMarkdown": "Certain Spring Security sub-packages are vulnerable to Improper Input Validation.  Using special character encodings, it is possible to bypass predefined application security boundaries.  An attacker can exploit this vulnerability to access static resources, which are meant to be private, over HTTP.", "detectionMarkdown": "The application is vulnerable by using this component.", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue.", "advisories": [{"referenceType": "PROJECT", "url": "https://pivotal.io/security/cve-2018-1199"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "cve", "reference": "CVE-2021-22112", "severity": 8.8, "status": "Open", "url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-22112", "threatCategory": "critical", "cwe": "285", "cvssVector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H", "cvssVectorSource": "cve_cvss_3", "deeperData": {"identifier": "CVE-2021-22112", "vulnIds": ["CVE-2021-22112"], "vulnerabilityLink": "http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2021-22112", "source": {"shortName": "CVE", "longName": "National Vulnerability Database"}, "mainSeverity": {"source": "cve_cvss_3", "score": 8.8, "vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"}, "severityScores": [{"source": "cve_cvss_2", "score": 9.0}, {"source": "sonatype_cvss_3", "score": 4.9}], "weakness": {"cweSource": "Sonatype", "cweIds": [{"id": "285", "uri": "https://cwe.mitre.org/data/definitions/285.html"}]}, "categories": ["data", "operational"], "description": "Spring Security 5.4.x prior to 5.4.4, 5.3.x prior to 5.3.8.RELEASE, 5.2.x prior to 5.2.9.RELEASE, and older unsupported versions can fail to save the SecurityContext if it is changed more than once in a single request.A malicious user cannot cause the bug to happen (it must be programmed in). However, if the application's intent is to only allow the user to run with elevated privileges in a small portion of the application, the bug can be leveraged to extend those privileges to the rest of the application.", "explanationMarkdown": "The `spring-security-web` package is vulnerable to Improper Authorization. The `saveContext()` method in the `HttpSessionSecurityContextRepository` class and the `contextChanged()` method in the `HttpSessionSecurityContextRepository$SaveToSessionResponseWrapper` class fail to store the `HttpSession` if the `SecurityContext` is altered more than once per request. An attacker can leverage this behavior to extend the scope of their existing privileges in order to access functionality that would otherwise be restricted.", "detectionMarkdown": "The application is vulnerable by using this component if the application is designed to exhibit the following behavior:\n>>>First the developer must change the SecurityContext before the HttpResponse is committed and then the HttpResponse must be committed before the SecurityContextPersistenceFilter completes. Then the developer must attempt to change the SecurityContext again before the SecurityContextPersistenceFilter completes.\n\nReference: [https://tanzu.vmware.com/security/cve-2021-22112](https://tanzu.vmware.com/security/cve-2021-22112)", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue.\n\nNote: If this component is included as a bundled/transitive dependency of another component, there may not be an upgrade path. In this instance, we recommend contacting the maintainers who included the vulnerable package. Alternatively, we recommend investigating alternative components or a potential mitigating control.", "advisories": [{"referenceType": "PROJECT", "url": "https://github.com/spring-projects/spring-security/issues/9387"}, {"referenceType": "PROJECT", "url": "https://tanzu.vmware.com/security/cve-2021-22112"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "cve", "reference": "CVE-2022-22978", "severity": 9.8, "status": "Open", "url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-22978", "threatCategory": "critical", "cwe": "863", "cvssVector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H", "cvssVectorSource": "cve_cvss_3", "deeperData": {"identifier": "CVE-2022-22978", "vulnIds": ["CVE-2022-22978"], "vulnerabilityLink": "http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2022-22978", "source": {"shortName": "CVE", "longName": "National Vulnerability Database"}, "mainSeverity": {"source": "cve_cvss_3", "score": 9.8, "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"}, "severityScores": [{"source": "cve_cvss_2", "score": 7.5}, {"source": "sonatype_cvss_3", "score": 8.2}], "weakness": {"cweSource": "CVE", "cweIds": [{"id": "863", "uri": "https://cwe.mitre.org/data/definitions/863.html"}]}, "categories": ["configuration", "data"], "description": "In spring security versions prior to 5.4.11+, 5.5.7+ , 5.6.4+ and older unsupported versions, RegexRequestMatcher can easily be misconfigured to be bypassed on some servlet containers. Applications using RegexRequestMatcher with `.` in the regular expression are possibly vulnerable to an authorization bypass.", "explanationMarkdown": "The `spring-security-web` package is vulnerable to Authorization Bypass. The `RegexRequestMatcher()` function in the `RegexRequestMatcher` class and the `addSecureUrl()` function in the `DefaultFilterInvocationSecurityMetadataSource` class can return an unexpected match when a `.` character is used in a regular expression. A remote attacker can exploit this behavior by supplying line terminating characters in their request to gain unauthorized access.", "detectionMarkdown": "The application is vulnerable when using this component and using the `RegexRequestMatcher` definition with a regular expression that contains `.`.", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue.\n\nNote: If this component is included as a bundled/transitive dependency of another component, there may not be an upgrade path. In this instance, we recommend contacting the maintainers who included the vulnerable package. Alternatively, we recommend investigating alternative components or a potential mitigating control.", "advisories": [{"referenceType": "PROJECT", "url": "https://spring.io/blog/2022/05/15/cve-2022-22978-authorization-bypass-in-regexrequestmatcher"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "cve", "reference": "CVE-2023-20862", "severity": 9.8, "status": "Open", "url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-20862", "threatCategory": "critical", "cwe": "613", "cvssVector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H", "cvssVectorSource": "cve_cvss_3", "deeperData": {"identifier": "CVE-2023-20862", "vulnIds": ["CVE-2023-20862"], "vulnerabilityLink": "http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2023-20862", "source": {"shortName": "CVE", "longName": "National Vulnerability Database"}, "mainSeverity": {"source": "cve_cvss_3", "score": 9.8, "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"}, "severityScores": [{"source": "cve_cvss_2", "score": 0.0}, {"source": "sonatype_cvss_3", "score": 8.8}], "weakness": {"cweSource": "CVE", "cweIds": [{"id": "459", "uri": "https://cwe.mitre.org/data/definitions/459.html"}]}, "categories": ["data"], "description": "In Spring Security, versions 5.7.x prior to 5.7.8, versions 5.8.x prior to 5.8.3, and versions 6.0.x prior to 6.0.3, the logout support does not properly clean the security context if using serialized versions. Additionally, it is not possible to explicitly save an empty security context to the HttpSessionSecurityContextRepository. This vulnerability can keep users authenticated even after they performed logout. Users of affected versions should apply the following mitigation. 5.7.x users should upgrade to 5.7.8. 5.8.x users should upgrade to 5.8.3. 6.0.x users should upgrade to 6.0.3.", "explanationMarkdown": "The `spring-security-config` and `spring-security-web` packages are vulnerable to Insufficient Session Expiration. Multiple methods in multiple classes, stated below, fail to properly clean up the security context when serialized versions are in use. This flaw can keep leave users authenticated even after they have logged out, therefore putting their sessions and data at risk.\n\n**Advisory Deviation Notice:** The Sonatype Security Research team has identified that Spring Security Config/Web versions prior to 5.7.0 may also be vulnerable to the flaw (i.e. when cases described in **Detection** not related to `HttpSessionSecurityContextRepository` apply) contrary to what is implied by the [advisory](https://spring.io/security/cve-2023-20862).\n\n*Vulnerable File(s) and Function(s)*:\n\norg/springframework/security/config/annotation/web/configurers/LogoutConfigurer.class\n- createLogoutFilter()\n\ncreateLogoutFilter()org/springframework/security/web/authentication/logout/SecurityContextLogoutHandler.class\n- logout()\n- setClearAuthentication()\n\norg/springframework/security/web/context/HttpSessionSecurityContextRepository.class\n- saveContext()", "detectionMarkdown": "The application is vulnerable by using this component when **any** of the following applies:\n\n- You are using the `SecurityContextHolderFilter` or `requireExplicitSave(true)` and you are using Spring Security's logout support with serialized sessions (e.g. Spring Session) and `invalidateHttpSession(false)`\n- You are logging users out manually by saving an empty `SecurityContext` into the `HttpSessionSecurityContextRepository`\n- You have a custom `SecurityContextRepository` that does not rely on the `HttpSession`\n\nYou are **not** vulnerable if **any** of the following applies:\n- You are still using the deprecated `SecurityContextPersistenceFilter` or `requireExplicitSave(false)`\n- You are using Spring Security's logout support with in-memory sessions.\n- You are not saving an empty `SecurityContext` into the `HttpSessionSecurityContextRepository`\n\n[Source](https://spring.io/security/cve-2023-20862)", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue.\n\nNote: If this component is included as a bundled/transitive dependency of another component, there may not be an upgrade path. In this instance, we recommend contacting the maintainers who included the vulnerable package. Alternatively, we recommend investigating alternative components or a potential mitigating control.", "advisories": [{"referenceType": "PROJECT", "url": "https://spring.io/security/cve-2023-20862"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "sonatype", "reference": "sonatype-2017-0507", "severity": 5.0, "status": "Open", "url": "http://localhost:8070/ui/links/vln/sonatype-2017-0507", "threatCategory": "severe", "cwe": "352", "cvssVector": "CVSS:3.0/AV:N/AC:H/PR:N/UI:R/S:U/C:L/I:L/A:L", "cvssVectorSource": "sonatype_cvss_3", "deeperData": {"identifier": "sonatype-2017-0507", "vulnIds": ["sonatype-2017-0507"], "source": {"shortName": "Sonatype", "longName": "Sonatype Data Research"}, "mainSeverity": {"source": "sonatype_cvss_3", "score": 5.0, "vector": "CVSS:3.0/AV:N/AC:H/PR:N/UI:R/S:U/C:L/I:L/A:L"}, "severityScores": [{"source": "cve_cvss_2", "score": 0.0}], "weakness": {"cweSource": "Sonatype", "cweIds": [{"id": "352", "uri": "https://cwe.mitre.org/data/definitions/352.html"}]}, "categories": ["data", "privileged"], "description": null, "explanationMarkdown": "The `spring-security-web` package is vulnerable to Cross-Site Request Forgery (CSRF).  The `createMatcher()`  method in the `SwitchUserFilter`, which is reachable via a GET request, does not require any form of confirmation that the user sending the request intended to do so.  An attacker can exploit this vulnerability by crafting a malicious application containing links to the vulnerable endpoint, HTML tags that use the vulnerable endpoint in the `src` attribute, or malicious JavaScript designed to send the request to the vulnerable endpoint.  When a victim visits the malicious page, their browser will be made to send requests to the vulnerable endpoint, taking action as the victim without the victim's knowledge or consent.\n", "detectionMarkdown": "The application is vulnerable by using this component if the Switch User Processing Filter is configured.\n\n> To configure the Switch User Processing Filter, create a bean definition for the Switch User processing filter and add to the filterChainProxy. Note that the filter must come after the FilterSecurityInteceptor in the chain, in order to apply the correct constraints to the switchUserUrl. Example:\n\n ```\n<bean id=\"switchUserProcessingFilter\" class=\"org.springframework.security.web.authentication.switchuser.SwitchUserFilter\">\n    <property name=\"userDetailsService\" ref=\"userDetailsService\" />\n    <property name=\"switchUserUrl\" value=\"/login/impersonate\" />\n    <property name=\"exitUserUrl\" value=\"/logout/impersonate\" />\n    <property name=\"targetUrl\" value=\"/index.jsp\" />\n </bean>\n```\n\nReference: [https://docs.spring.io/spring-security/site/docs/4.2.6.RELEASE/apidocs/org/springframework/security/web/authentication/switchuser/SwitchUserFilter.html](https://docs.spring.io/spring-security/site/docs/4.2.6.RELEASE/apidocs/org/springframework/security/web/authentication/switchuser/SwitchUserFilter.html)", "recommendationMarkdown": "", "advisories": [{"referenceType": "PROJECT", "url": "https://github.com/spring-projects/spring-security/issues/4183"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "sonatype", "reference": "sonatype-2017-0641", "severity": 7.1, "status": "Open", "url": "http://localhost:8070/ui/links/vln/sonatype-2017-0641", "threatCategory": "critical", "cwe": "264", "cvssVector": "CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:H/A:N", "cvssVectorSource": "sonatype_cvss_3", "deeperData": {"identifier": "sonatype-2017-0641", "vulnIds": ["sonatype-2017-0641"], "source": {"shortName": "Sonatype", "longName": "Sonatype Data Research"}, "mainSeverity": {"source": "sonatype_cvss_3", "score": 7.1, "vector": "CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:H/A:N"}, "severityScores": [{"source": "cve_cvss_2", "score": 0.0}], "weakness": {"cweSource": "Sonatype", "cweIds": [{"id": "264", "uri": "https://cwe.mitre.org/data/definitions/264.html"}]}, "categories": ["configuration", "data", "functional"], "description": null, "explanationMarkdown": "Spring Security is vulnerable to Privilege Escalation. The `requiresSwitchUser()` and `requiresExitUser()` methods of the `SwitchUserFilter` class return true for all URLs ending in the switch user path. A remote attacker can exploit this behavior by appending the switch user path to a URL to change the attacker's privilege level.", "detectionMarkdown": "The application is vulnerable by using the `SwitchUserFilter` functionality of this component while wildcard URL patterns are configured.", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue. Alternatively, it has been suggested that it is possible to mitigate this vulnerability by using antMatchers in the component's configuration. For example: \n\n`.antMatchers(\"/**/login/impersonate**\").hasAuthority(\"ROLE_ADMIN\")`\n\nReference: [https://github.com/spring-projects/spring-security/issues/4249#issuecomment-287070268](https://github.com/spring-projects/spring-security/issues/4249#issuecomment-287070268)", "advisories": [{"referenceType": "PROJECT", "url": "https://github.com/spring-projects/spring-security/issues/4249"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "sonatype", "reference": "sonatype-2019-0341", "severity": 3.7, "status": "Open", "url": "http://localhost:8070/ui/links/vln/sonatype-2019-0341", "threatCategory": "moderate", "cwe": "327", "cvssVector": "CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N", "cvssVectorSource": "sonatype_cvss_3", "deeperData": {"identifier": "sonatype-2019-0341", "vulnIds": ["sonatype-2019-0341"], "source": {"shortName": "Sonatype", "longName": "Sonatype Data Research"}, "mainSeverity": {"source": "sonatype_cvss_3", "score": 3.7, "vector": "CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N"}, "severityScores": [{"source": "cve_cvss_2", "score": 0.0}], "weakness": {"cweSource": "Sonatype", "cweIds": [{"id": "327", "uri": "https://cwe.mitre.org/data/definitions/327.html"}]}, "categories": ["data"], "description": null, "explanationMarkdown": "Spring Security is vulnerable to BREACH Attacks. BREACH, which stands for Browser Reconnaissance and Exfiltration via Adaptive Compression of Hypertext, is a compression side channel attack that relies on HTTP compression being used for the data in HTTP responses, where the length of the compressed data is exposed. Various functions across several files in Spring Security always return the same CSRF token to the browser. If HTTP compression is enabled, an attacker can exploit this using a BREACH attack by systematically guessing and retrieving the the CSRF token one character at a time.\n\nRef: https://www.acunetix.com/blog/articles/breach-attack/\n\n*Vulnerable File(s) and Function(s)*:\n\norg/springframework/security/web/csrf/CsrfFilter.class\n* doFilterInternal()\n\norg/springframework/security/web/csrf/DefaultCsrfToken.class\n* getToken()\n\norg/springframework/security/web/server/csrf/CsrfWebFilter.class\n* containsValidCsrfToken()\n\norg/springframework/security/web/server/csrf/DefaultCsrfToken.class\n* getToken()", "detectionMarkdown": "The application is vulnerable by using this component when CSRF protection is turned on and HTTP compression is enabled somewhere in the web server stack.\n\nReference: https://github.com/spring-projects/spring-security/issues/4001", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue.\n\nNote: If this component is included as a bundled/transitive dependency of another component, there may not be an upgrade path. In this instance, we recommend contacting the maintainers who included the vulnerable package. Alternatively, we recommend investigating alternative components or a potential mitigating control.", "advisories": [{"referenceType": "ATTACK", "url": "https://www.acunetix.com/blog/articles/breach-attack/"}, {"referenceType": "PROJECT", "url": "https://github.com/spring-projects/spring-security/issues/4001"}, {"referenceType": "PROJECT", "url": "https://github.com/spring-projects/spring-security/pull/4002"}, {"referenceType": "PROJECT", "url": "https://github.com/spring-projects/spring-security/pull/4042"}, {"referenceType": "PROJECT", "url": "https://github.com/spring-projects/spring-security/pull/7221"}, {"referenceType": "PROJECT", "url": "https://github.com/spring-projects/spring-security/pull/8082"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "sonatype", "reference": "sonatype-2020-1270", "severity": 5.9, "status": "Open", "url": "http://localhost:8070/ui/links/vln/sonatype-2020-1270", "threatCategory": "severe", "cwe": "208", "cvssVector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N", "cvssVectorSource": "sonatype_cvss_3", "deeperData": {"identifier": "sonatype-2020-1270", "vulnIds": ["sonatype-2020-1270"], "source": {"shortName": "Sonatype", "longName": "Sonatype Data Research"}, "mainSeverity": {"source": "sonatype_cvss_3", "score": 5.9, "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N"}, "severityScores": [{"source": "cve_cvss_2", "score": 0.0}], "weakness": {"cweSource": "Sonatype", "cweIds": [{"id": "208", "uri": "https://cwe.mitre.org/data/definitions/208.html"}]}, "categories": ["data"], "description": null, "explanationMarkdown": "The `spring-security-web` package is vulnerable to Timing Attacks. The `doFilterInternal` method in `CsrfFilter.class` and `containsValidCsrfToken` method in `CsrfWebFilter.class` do not use a constant time comparison method when comparing CSRF tokens. An attacker can exploit this to observe comparison time differences and eventually reveal a valid CSRF token as part of a Timing Attack.", "detectionMarkdown": "The application is vulnerable by using this component.", "recommendationMarkdown": "There is no non-vulnerable upgrade path for this component/package. We recommend investigating alternative components or a potential mitigating control.", "advisories": [{"referenceType": "PROJECT", "url": "https://github.com/spring-projects/spring-security/issues/9291"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}]}, "dependencyData": {"directDependency": true, "innerSource": false}, "remediation": {"versionChanges": [{"type": "next-no-violations", "data": {"component": {"packageUrl": "pkg:maven/org.springframework.security/spring-security-web@5.7.8?type=jar", "hash": null, "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "spring-security-web", "classifier": "", "extension": "jar", "groupId": "org.springframework.security", "version": "5.7.8"}}, "displayName": "org.springframework.security : spring-security-web : 5.7.8"}}}, {"type": "next-non-failing", "data": {"component": {"packageUrl": "pkg:maven/org.springframework.security/spring-security-web@3.2.4.RELEASE?type=jar", "hash": null, "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "spring-security-web", "classifier": "", "extension": "jar", "groupId": "org.springframework.security", "version": "3.2.4.RELEASE"}}, "displayName": "org.springframework.security : spring-security-web : 3.2.4.RELEASE"}}}, {"type": "next-no-violations-with-dependencies", "data": {"component": {"packageUrl": "pkg:maven/org.springframework.security/spring-security-web@6.0.3?type=jar", "hash": null, "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "spring-security-web", "classifier": "", "extension": "jar", "groupId": "org.springframework.security", "version": "6.0.3"}}, "displayName": "org.springframework.security : spring-security-web : 6.0.3"}}}, {"type": "next-non-failing-with-dependencies", "data": {"component": {"packageUrl": "pkg:maven/org.springframework.security/spring-security-web@3.2.4.RELEASE?type=jar", "hash": null, "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "spring-security-web", "classifier": "", "extension": "jar", "groupId": "org.springframework.security", "version": "3.2.4.RELEASE"}}, "displayName": "org.springframework.security : spring-security-web : 3.2.4.RELEASE"}}}]}}, {"packageUrl": "pkg:maven/commons-fileupload/commons-fileupload@1.2.2?type=jar", "hash": "1e48256a2341047e7d72", "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "commons-fileupload", "classifier": "", "extension": "jar", "groupId": "commons-fileupload", "version": "1.2.2"}}, "displayName": "commons-fileupload : commons-fileupload : 1.2.2", "proprietary": false, "matchState": "exact", "pathnames": ["./target/WebGoatLegacy-6.0.1-war-exec.jar/WebGoat.war/WEB-INF/lib/commons-fileupload-1.2.2.jar", "./target/WebGoatLegacy-6.0.1/WEB-INF/lib/commons-fileupload-1.2.2.jar", "WebGoat:WebGoatLegacy:war:6.0.1/commons-fileupload:commons-fileupload:jar:1.2.2"], "identificationSource": "Sonatype", "licenseData": {"declaredLicenses": [{"licenseId": "Apache-2.0", "licenseName": "Apache-2.0"}], "observedLicenses": [{"licenseId": "Apache-2.0", "licenseName": "Apache-2.0"}], "effectiveLicenses": [{"licenseId": "Apache-2.0", "licenseName": "Apache-2.0"}], "overriddenLicenses": [], "status": "Open", "effectiveLicenseThreats": [{"licenseThreatGroupName": "Liberal", "licenseThreatGroupLevel": 0, "licenseThreatGroupCategory": "no-threat"}]}, "securityData": {"securityIssues": [{"source": "cve", "reference": "CVE-2013-0248", "severity": 3.3, "status": "Open", "url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2013-0248", "threatCategory": "moderate", "cwe": "264", "cvssVector": "AV:L/AC:M/Au:N/C:N/I:P/A:P", "cvssVectorSource": "cve_cvss_2", "deeperData": {"identifier": "CVE-2013-0248", "vulnIds": ["CVE-2013-0248"], "vulnerabilityLink": "http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2013-0248", "source": {"shortName": "CVE", "longName": "National Vulnerability Database"}, "mainSeverity": {"source": "cve_cvss_2", "score": 3.3, "vector": "AV:L/AC:M/Au:N/C:N/I:P/A:P"}, "severityScores": [{"source": "sonatype_cvss_3", "score": 4.0}], "weakness": {"cweSource": "CVE", "cweIds": [{"id": "264", "uri": "https://cwe.mitre.org/data/definitions/264.html"}]}, "categories": ["configuration"], "description": "The default configuration of javax.servlet.context.tempdir in Apache Commons FileUpload 1.0 through 1.2.2 uses the /tmp directory for uploaded files, which allows local users to overwrite arbitrary files via an unspecified symlink attack.", "explanationMarkdown": "Apache commons-fileupload is vulnerable to a Symlink Attack. The component uses a known naming convention when constructing temporary files which, by default, are stored in the `/tmp` directory. There is a window of opportunity between the creation of the temporary file and its use where an attacker can replace the temporary file with a symbolic link. This symbolic link can point to any arbitrary location and commons-fileupload will write to that location, overwriting any file already there, if the application has the permissions to do so.", "detectionMarkdown": "You are vulnerable if the application is using the default configuration for `javax.servlet.context.tempdir` and the `/tmp` directory is publicly writable.", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue.\n\nChange the configuration of `javax.servlet.context.tempdir` to use a protected directory. Only the application should be able to read/write the temporary files.\nNote: There was no code change in the provided fix. Only the documentation was updated to make users aware of the implications of keeping the default setting using a non-protected directory.", "advisories": [{"referenceType": "THIRD_PARTY", "url": "http://archives.neohapsis.com/archives/bugtraq/2013-03/0035.html"}, {"referenceType": "THIRD_PARTY", "url": "http://securitytracker.com/id/1028252"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "cve", "reference": "CVE-2013-2186", "severity": 7.5, "status": "Open", "url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2013-2186", "threatCategory": "critical", "cwe": "626", "cvssVector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "cvssVectorSource": "cve_cvss_2", "deeperData": {"identifier": "CVE-2013-2186", "vulnIds": ["CVE-2013-2186"], "vulnerabilityLink": "http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2013-2186", "source": {"shortName": "CVE", "longName": "National Vulnerability Database"}, "mainSeverity": {"source": "cve_cvss_2", "score": 7.5, "vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P"}, "severityScores": [{"source": "sonatype_cvss_3", "score": 8.2}], "weakness": {"cweSource": "CVE", "cweIds": [{"id": "20", "uri": "https://cwe.mitre.org/data/definitions/20.html"}]}, "categories": ["data", "functional"], "description": "The DiskFileItem class in Apache Commons FileUpload, as used in Red Hat JBoss BRMS 5.3.1; JBoss Portal 4.3 CP07, 5.2.2, and 6.0.0; and Red Hat JBoss Web Server 1.0.2 allows remote attackers to write to arbitrary files via a NULL byte in a file name in a serialized instance.", "explanationMarkdown": "Apache Commons FileUpload does not fully protect against deserialization of untrusted serialized Java objects, which can be used for transferring Java objects across a network. A poison null byte can be inserted into a file path in a serialized instance of DiskFileItem that allows an attacker to write to arbitrary files with the permissions of the host application.", "detectionMarkdown": "You are vulnerable if using this component to process untrusted, serialized data on a version of Java prior to JDK 7u40 b28.", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue.\n\nWorkaround: Java also implemented a mitigation for this attack in JDK 7u40 b28.  Upgrading Java to at least this version will mitigate this vulnerability as well.", "advisories": [{"referenceType": "ATTACK", "url": "https://securityblog.redhat.com/2013/11/20/java-deserialization-flaws-part-1-binary-deserialization/"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "cve", "reference": "CVE-2014-0050", "severity": 7.5, "status": "Open", "url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2014-0050", "threatCategory": "critical", "cwe": "264", "cvssVector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "cvssVectorSource": "cve_cvss_2", "deeperData": {"identifier": "CVE-2014-0050", "vulnIds": ["CVE-2014-0050"], "vulnerabilityLink": "http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2014-0050", "source": {"shortName": "CVE", "longName": "National Vulnerability Database"}, "mainSeverity": {"source": "cve_cvss_2", "score": 7.5, "vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P"}, "severityScores": [{"source": "sonatype_cvss_3", "score": 7.5}], "weakness": {"cweSource": "CVE", "cweIds": [{"id": "264", "uri": "https://cwe.mitre.org/data/definitions/264.html"}]}, "categories": ["functional", "operational"], "description": "MultipartStream.java in Apache Commons FileUpload before 1.3.1, as used in Apache Tomcat, JBoss Web, and other products, allows remote attackers to cause a denial of service (infinite loop and CPU consumption) via a crafted Content-Type header that bypasses a loop's intended exit conditions.", "explanationMarkdown": "The MultipartStream.java class processes multipart requests for Apache Commons FileUpload. It was found that a boundary condition related to the size of the request is not properly checked. This can be leveraged by a remote user to cause an infinite loop and excess cpu usage. \n\nSee the trustwave.com link for more technical details.", "detectionMarkdown": "You are vulnerable if using this component to process user supplied data or untrusted network traffic is able to be processed by your application.", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue or limiting the size of the Content Header of a multipart request to 4091 bytes or less.", "advisories": [{"referenceType": "ATTACK", "url": "http://www.rapid7.com/db/modules/auxiliary/dos/http/apache_commons_fileupload_dos"}, {"referenceType": "ATTACK", "url": "https://www.trustwave.com/Resources/SpiderLabs-Blog/CVE-2014-0050--Exploit-with-Boundaries,-Loops-without-Boundaries/"}, {"referenceType": "PROJECT", "url": "http://mail-archives.apache.org/mod_mbox/www-announce/201402.mbox/%3C52F373FC.9030907@apache.org%3E"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "cve", "reference": "CVE-2016-1000031", "severity": 9.8, "status": "Open", "url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2016-1000031", "threatCategory": "critical", "cwe": "284", "cvssVector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H", "cvssVectorSource": "cve_cvss_3", "deeperData": {"identifier": "CVE-2016-1000031", "vulnIds": ["CVE-2016-1000031"], "vulnerabilityLink": "http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2016-1000031", "source": {"shortName": "CVE", "longName": "National Vulnerability Database"}, "mainSeverity": {"source": "cve_cvss_3", "score": 9.8, "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"}, "severityScores": [{"source": "cve_cvss_2", "score": 7.5}, {"source": "sonatype_cvss_3", "score": 9.8}], "weakness": {"cweSource": "CVE", "cweIds": [{"id": "284", "uri": "https://cwe.mitre.org/data/definitions/284.html"}]}, "categories": ["data"], "description": "Apache Commons FileUpload before 1.3.3 DiskFileItem File Manipulation Remote Code Execution", "explanationMarkdown": "The Apache Commons FileUpload library is vulnerable to an arbitrary file relocation and file copy which can potentially lead to Remote Code Execution (RCE). The `readObject()` methods in `DiskFileItem.java` allow object serialization. An attacker can exploit this vulnerability to create files and copy the contents of one file into another, or cause Remote Code Execution using more sophisticated payloads.\n\nNOTES:\n1. Apache disputes this vulnerability, however Tenable maintains that this is a vulnerability. Please see the \"Apache vs Vendors, Attributing Blame\" section at [http://www.tenable.com/security/research/tra-2016-12](http://www.tenable.com/security/research/tra-2016-12) for details.\n\n2. Jenkins has implemented a customized version of this component with a different versioning scheme while still using the same name for the component as the official one (`commons-fileupload:commons-fileupload`). Because these customized versions are unique to Jenkins, the vulnerable Jenkins components containing these customized versions have been implicated.", "detectionMarkdown": "The application is vulnerable by using this component.", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue.", "advisories": [{"referenceType": "PROJECT", "url": "https://issues.apache.org/jira/browse/FILEUPLOAD-279"}, {"referenceType": "THIRD_PARTY", "url": "http://www.tenable.com/security/research/tra-2016-12"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "cve", "reference": "CVE-2016-3092", "severity": 7.5, "status": "Open", "url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2016-3092", "threatCategory": "critical", "cwe": "20", "cvssVector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H", "cvssVectorSource": "cve_cvss_3", "deeperData": {"identifier": "CVE-2016-3092", "vulnIds": ["CVE-2016-3092"], "vulnerabilityLink": "http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2016-3092", "source": {"shortName": "CVE", "longName": "National Vulnerability Database"}, "mainSeverity": {"source": "cve_cvss_3", "score": 7.5, "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}, "severityScores": [{"source": "cve_cvss_2", "score": 7.8}, {"source": "sonatype_cvss_3", "score": 7.5}], "weakness": {"cweSource": "CVE", "cweIds": [{"id": "20", "uri": "https://cwe.mitre.org/data/definitions/20.html"}]}, "categories": ["data"], "description": "The MultipartStream class in Apache Commons Fileupload before 1.3.2, as used in Apache Tomcat 7.x before 7.0.70, 8.x before 8.0.36, 8.5.x before 8.5.3, and 9.x before 9.0.0.M7 and other products, allows remote attackers to cause a denial of service (CPU consumption) via a long boundary string.", "explanationMarkdown": "The Apache Commons Fileupload library is vulnerable to Denial of Service (DoS) when multipart requests with large `boundary` values are sent by the client. The Commons Fileupload library takes a long time to process upload requests when the length of the multipart `boundary` in the Content-Type header is very close to the size of the buffer which is 4096 bytes. The `MultipartStream()` constructor method in `MultipartStream.java` does not consider the length of the request's boundary header when setting the buffer size. A remote attacker can exploit the vulnerability by submitting a multipart fileupload request with high `boundary` value to the server, making the server unresponsive to other client requests resulting in a Denial of Service (DoS).\n\nSample payload: \n\n> ```\n> Content-Type: multipart/mixed;\n> boundary=<a 4095 byte string> \n> ```", "detectionMarkdown": "The application is vulnerable by using this component.", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue.\n\n**Workaround:**\n\n> 1\\. All users of Apache Struts should replace the copy of Commons\n>\n> 2\\. System administrators should restrict the permitted maximum size of HTTP request header values (For example, Apache Httpd provides a LimitRequestFieldSize directive and Apache Tomcat provides a maxHttpHeaderSize attribute in their respective configuration files). A maximum header value size of 2048 bytes would block all dangerous request.\n>\n> Example:\n> File upload requests contain a so-called boundary in the Content-Type header:\n>\n> ```\n> Content-Type: multipart/mixed;\n> boundary=gc0p4Jq0M2Yt08jU534c0p\n> ```\n>\n> The boundary may be chosen by the request sender. In the case of previous versions of Apache Commons Fileupload the boundary becomes dangerous if its size is close to 4096 bytes.\n\nReference: [http://mail-archives.apache.org/mod_mbox/www-announce/201606.mbox/%3C45A20804-ABFF-4FED-A297-69AC95AB9A3F@apache.org%3E](http://mail-archives.apache.org/mod_mbox/www-announce/201606.mbox/%3C45A20804-ABFF-4FED-A297-69AC95AB9A3F@apache.org%3E)\n\nNote: If this component is included as a bundled/transitive dependency of another component, there may not be an upgrade path. In this instance, we recommend contacting the maintainers who included the vulnerable package. Alternatively, we recommend investigating alternative components or a potential mitigating control.", "advisories": [{"referenceType": "PROJECT", "url": "http://mail-archives.apache.org/mod_mbox/www-announce/201606.mbox/%3C45A20804-ABFF-4FED-A297-69AC95AB9A3F@apache.org%3E"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "cve", "reference": "CVE-2023-24998", "severity": 7.5, "status": "Open", "url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-24998", "threatCategory": "critical", "cwe": "770", "cvssVector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H", "cvssVectorSource": "cve_cvss_3", "deeperData": {"identifier": "CVE-2023-24998", "vulnIds": ["CVE-2023-24998"], "vulnerabilityLink": "http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2023-24998", "source": {"shortName": "CVE", "longName": "National Vulnerability Database"}, "mainSeverity": {"source": "cve_cvss_3", "score": 7.5, "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}, "severityScores": [{"source": "cve_cvss_2", "score": 0.0}, {"source": "sonatype_cvss_3", "score": 3.7}], "weakness": {"cweSource": "CVE", "cweIds": [{"id": "770", "uri": "https://cwe.mitre.org/data/definitions/770.html"}]}, "categories": ["data"], "description": "Apache Commons FileUpload before 1.5 does not limit the number of request parts to be processed resulting in the possibility of an attacker triggering a DoS with a malicious upload or series of uploads.\n\n\n\n\nNote that, like all of the file upload limits, the\n          new configuration option (FileUploadBase#setFileCountMax) is not\n          enabled by default and must be explicitly configured.\n\n\n", "explanationMarkdown": "The Apache Commons FileUpload `commons-fileupload` package and the `tomcat-coyote` package are vulnerable to Denial of Service (DoS) attacks. The `parseRequest` function in the `FileUploadBase.class` file in each package does not enforce a maximum number of files that can be included in a single upload request. An attacker can exploit this flaw to potentially trigger an application crash or slowdowns, resulting in DoS.\n\n*Advisory Deviation Notice:*\n                        The Sonatype Security Research team discovered that this vulnerability was actually introduced in version 7.0.0 of `tomcat-coyote` instead of 8.5.0 as stated in the advisory. In addition, it was found that this vulnerability affected the 10.x branch of `tomcat-coyote` from 10.0.0-M1 and not 10.1.0-M1 as stated in the advisory.", "detectionMarkdown": "The application is vulnerable by using this component.\n\n", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue.\n\nNote: If this component is included as a bundled/transitive dependency of another component, there may not be an upgrade path. In this instance, we recommend contacting the maintainers who included the vulnerable package. Alternatively, we recommend investigating alternative components or a potential mitigating control.", "advisories": [{"referenceType": "PROJECT", "url": "https://github.com/apache/commons-fileupload/commit/0a306f75949f2e9f5f92c400cad39d20117a2eb0"}, {"referenceType": "PROJECT", "url": "https://github.com/apache/commons-fileupload/pull/185"}, {"referenceType": "PROJECT", "url": "https://lists.apache.org/thread/4xl4l09mhwg4vgsk7dxqogcjrobrrdoy"}, {"referenceType": "PROJECT", "url": "https://tomcat.apache.org/security-10.html"}, {"referenceType": "PROJECT", "url": "https://tomcat.apache.org/security-11.html"}, {"referenceType": "PROJECT", "url": "https://tomcat.apache.org/security-8.html"}, {"referenceType": "PROJECT", "url": "https://tomcat.apache.org/security-9.html"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "sonatype", "reference": "sonatype-2014-0173", "severity": 5.3, "status": "Open", "url": "http://localhost:8070/ui/links/vln/sonatype-2014-0173", "threatCategory": "severe", "cwe": "400", "cvssVector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L", "cvssVectorSource": "sonatype_cvss_3", "deeperData": {"identifier": "sonatype-2014-0173", "vulnIds": ["sonatype-2014-0173"], "source": {"shortName": "Sonatype", "longName": "Sonatype Data Research"}, "mainSeverity": {"source": "sonatype_cvss_3", "score": 5.3, "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L"}, "severityScores": [{"source": "cve_cvss_2", "score": 0.0}], "weakness": {"cweSource": "Sonatype", "cweIds": [{"id": "400", "uri": "https://cwe.mitre.org/data/definitions/400.html"}]}, "categories": ["data"], "description": null, "explanationMarkdown": "Apache Commons FileUpload contains a resource leak which may lead to a Denial of Service (DoS) attack.   The `FileItemIteratorImpl()` method in the `FileUploadBase.class` file does not close the file input stream on encountering an exception. This means that the application maintains an open reference to the file in question indefinitely, as the stream is continuously waiting to read more data.  An attacker can exploit this vulnerability by sending a large number of requests specifically crafted to trigger this exception, causing the application to maintain a large number of open streams.  Eventually, these streams will consume all of the available memory resources and render the application unresponsive.", "detectionMarkdown": "The application is vulnerable by using this component.", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue.", "advisories": [{"referenceType": "THIRD_PARTY", "url": "https://issues.apache.org/jira/browse/FILEUPLOAD-250"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}]}, "dependencyData": {"directDependency": true, "innerSource": false}, "remediation": {"versionChanges": [{"type": "next-no-violations", "data": {"component": {"packageUrl": "pkg:maven/commons-fileupload/commons-fileupload@1.5?type=jar", "hash": null, "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "commons-fileupload", "classifier": "", "extension": "jar", "groupId": "commons-fileupload", "version": "1.5"}}, "displayName": "commons-fileupload : commons-fileupload : 1.5"}}}, {"type": "next-non-failing", "data": {"component": {"packageUrl": "pkg:maven/commons-fileupload/commons-fileupload@1.2.2?type=jar", "hash": null, "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "commons-fileupload", "classifier": "", "extension": "jar", "groupId": "commons-fileupload", "version": "1.2.2"}}, "displayName": "commons-fileupload : commons-fileupload : 1.2.2"}}}, {"type": "next-no-violations-with-dependencies", "data": {"component": {"packageUrl": "pkg:maven/commons-fileupload/commons-fileupload@1.5?type=jar", "hash": null, "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "commons-fileupload", "classifier": "", "extension": "jar", "groupId": "commons-fileupload", "version": "1.5"}}, "displayName": "commons-fileupload : commons-fileupload : 1.5"}}}, {"type": "next-non-failing-with-dependencies", "data": {"component": {"packageUrl": "pkg:maven/commons-fileupload/commons-fileupload@1.2.2?type=jar", "hash": null, "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "commons-fileupload", "classifier": "", "extension": "jar", "groupId": "commons-fileupload", "version": "1.2.2"}}, "displayName": "commons-fileupload : commons-fileupload : 1.2.2"}}}]}}, {"packageUrl": "pkg:maven/hsqldb/hsqldb@1.8.0.7?type=jar", "hash": "20554954120b3cc9f088", "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "hsqldb", "classifier": "", "extension": "jar", "groupId": "hsqldb", "version": "1.8.0.7"}}, "displayName": "hsqldb : hsqldb : 1.8.0.7", "proprietary": false, "matchState": "exact", "pathnames": ["./target/WebGoatLegacy-6.0.1-war-exec.jar/WebGoat.war/WEB-INF/lib/hsqldb-1.8.0.7.jar", "./target/WebGoatLegacy-6.0.1/WEB-INF/lib/hsqldb-1.8.0.7.jar", "WebGoat:WebGoatLegacy:war:6.0.1/hsqldb:hsqldb:jar:1.8.0.7"], "identificationSource": "Sonatype", "licenseData": {"declaredLicenses": [{"licenseId": "BSD-3-Clause", "licenseName": "BSD-3-Clause"}, {"licenseId": "UNKNOWN", "licenseName": "Non-Standard"}], "observedLicenses": [{"licenseId": "No-Source-License", "licenseName": "No Source License"}], "effectiveLicenses": [{"licenseId": "BSD-3-Clause", "licenseName": "BSD-3-Clause"}, {"licenseId": "UNKNOWN", "licenseName": "Non-Standard"}], "overriddenLicenses": [], "status": "Open", "effectiveLicenseThreats": [{"licenseThreatGroupName": "Liberal", "licenseThreatGroupLevel": 0, "licenseThreatGroupCategory": "no-threat"}, {"licenseThreatGroupName": "Sonatype Special Licenses", "licenseThreatGroupLevel": 5, "licenseThreatGroupCategory": "severe"}, {"licenseThreatGroupName": "Non Standard", "licenseThreatGroupLevel": 6, "licenseThreatGroupCategory": "severe"}]}, "securityData": {"securityIssues": [{"source": "cve", "reference": "CVE-2007-4575", "severity": 9.3, "status": "Open", "url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2007-4575", "threatCategory": "critical", "cwe": "94", "cvssVector": "AV:N/AC:M/Au:N/C:C/I:C/A:C", "cvssVectorSource": "cve_cvss_2", "deeperData": {"identifier": "CVE-2007-4575", "vulnIds": ["CVE-2007-4575"], "vulnerabilityLink": "http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2007-4575", "source": {"shortName": "CVE", "longName": "National Vulnerability Database"}, "mainSeverity": {"source": "cve_cvss_2", "score": 9.3, "vector": "AV:N/AC:M/Au:N/C:C/I:C/A:C"}, "severityScores": [{"source": "sonatype_cvss_3", "score": 9.8}], "weakness": {"cweSource": "CVE", "cweIds": [{"id": "94", "uri": "https://cwe.mitre.org/data/definitions/94.html"}]}, "categories": ["data", "operational"], "description": "HSQLDB before 1.8.0.9, as used in OpenOffice.org (OOo) 2 before 2.3.1, allows user-assisted remote attackers to execute arbitrary Java code via crafted database documents, related to \"exposing static java methods.\"", "explanationMarkdown": "A crafted database document can be used to execute arbitrary java code.", "detectionMarkdown": "You are vulnerable if processing user supplied or untrusted database documents.", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue.", "advisories": [{"referenceType": "PROJECT", "url": "http://sourceforge.net/p/hsqldb/svn/2755/"}, {"referenceType": "THIRD_PARTY", "url": "https://bugs.gentoo.org/show_bug.cgi?id=201799"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}]}, "dependencyData": {"directDependency": true, "innerSource": false}, "remediation": {"versionChanges": [{"type": "next-non-failing", "data": {"component": {"packageUrl": "pkg:maven/hsqldb/hsqldb@1.8.0.7?type=jar", "hash": null, "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "hsqldb", "classifier": "", "extension": "jar", "groupId": "hsqldb", "version": "1.8.0.7"}}, "displayName": "hsqldb : hsqldb : 1.8.0.7"}}}, {"type": "next-non-failing-with-dependencies", "data": {"component": {"packageUrl": "pkg:maven/hsqldb/hsqldb@1.8.0.7?type=jar", "hash": null, "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "hsqldb", "classifier": "", "extension": "jar", "groupId": "hsqldb", "version": "1.8.0.7"}}, "displayName": "hsqldb : hsqldb : 1.8.0.7"}}}]}}, {"packageUrl": "pkg:maven/org.slf4j/slf4j-api@1.7.7?type=jar", "hash": "2b8019b6249bb05d81d3", "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "slf4j-api", "classifier": "", "extension": "jar", "groupId": "org.slf4j", "version": "1.7.7"}}, "displayName": "org.slf4j : slf4j-api : 1.7.7", "proprietary": false, "matchState": "exact", "pathnames": ["./target/WebGoatLegacy-6.0.1-war-exec.jar/WebGoat.war/WEB-INF/lib/slf4j-api-1.7.7.jar", "./target/WebGoatLegacy-6.0.1/WEB-INF/lib/slf4j-api-1.7.7.jar", "WebGoat:WebGoatLegacy:war:6.0.1/org.slf4j:slf4j-api:jar:1.7.7"], "identificationSource": "Sonatype", "licenseData": {"declaredLicenses": [{"licenseId": "MIT", "licenseName": "MIT"}], "observedLicenses": [{"licenseId": "MIT", "licenseName": "MIT"}], "effectiveLicenses": [{"licenseId": "MIT", "licenseName": "MIT"}], "overriddenLicenses": [], "status": "Open", "effectiveLicenseThreats": [{"licenseThreatGroupName": "Liberal", "licenseThreatGroupLevel": 0, "licenseThreatGroupCategory": "no-threat"}]}, "securityData": {"securityIssues": []}, "dependencyData": {"directDependency": true, "innerSource": false}, "remediation": {"versionChanges": [{"type": "next-no-violations", "data": {"component": {"packageUrl": "pkg:maven/org.slf4j/slf4j-api@1.7.26?type=jar", "hash": null, "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "slf4j-api", "classifier": "", "extension": "jar", "groupId": "org.slf4j", "version": "1.7.26"}}, "displayName": "org.slf4j : slf4j-api : 1.7.26"}}}, {"type": "next-non-failing", "data": {"component": {"packageUrl": "pkg:maven/org.slf4j/slf4j-api@1.7.7?type=jar", "hash": null, "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "slf4j-api", "classifier": "", "extension": "jar", "groupId": "org.slf4j", "version": "1.7.7"}}, "displayName": "org.slf4j : slf4j-api : 1.7.7"}}}, {"type": "next-no-violations-with-dependencies", "data": {"component": {"packageUrl": "pkg:maven/org.slf4j/slf4j-api@1.7.26?type=jar", "hash": null, "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "slf4j-api", "classifier": "", "extension": "jar", "groupId": "org.slf4j", "version": "1.7.26"}}, "displayName": "org.slf4j : slf4j-api : 1.7.26"}}}, {"type": "next-non-failing-with-dependencies", "data": {"component": {"packageUrl": "pkg:maven/org.slf4j/slf4j-api@1.7.7?type=jar", "hash": null, "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "slf4j-api", "classifier": "", "extension": "jar", "groupId": "org.slf4j", "version": "1.7.7"}}, "displayName": "org.slf4j : slf4j-api : 1.7.7"}}}]}}, {"packageUrl": "pkg:a-name/com.h2database%20h2@1.4.179", "hash": "343dfe0f8e268b343c97", "componentIdentifier": {"format": "a-name", "coordinates": {"name": "com.h2database h2", "qualifier": "", "version": "1.4.179"}}, "displayName": "com.h2database h2 1.4.179", "proprietary": false, "matchState": "exact", "pathnames": ["./target/WebGoatLegacy-6.0.1-war-exec.jar/WebGoat.war/WEB-INF/lib/h2-1.4.187.jar/org/h2/util/data.zip/org/h2/server/web/res/table.js", "./target/WebGoatLegacy-6.0.1-war-exec.jar/WebGoat.war/WEB-INF/lib/h2-1.4.187.jar/org/h2/util/data.zip/org/h2/server/web/res/tree.js"], "identificationSource": "Sonatype", "licenseData": {"declaredLicenses": [{"licenseId": "EPL-1.0", "licenseName": "EPL-1.0"}, {"licenseId": "EPL-1.0-MPL-2.0", "licenseName": "EPL-1.0 or MPL-2.0"}, {"licenseId": "MPL-2.0", "licenseName": "MPL-2.0"}], "observedLicenses": [{"licenseId": "Not-Supported", "licenseName": "Not Supported"}], "effectiveLicenses": [{"licenseId": "EPL-1.0", "licenseName": "EPL-1.0"}, {"licenseId": "EPL-1.0-MPL-2.0", "licenseName": "EPL-1.0 or MPL-2.0"}, {"licenseId": "MPL-2.0", "licenseName": "MPL-2.0"}], "overriddenLicenses": [], "status": "Open", "effectiveLicenseThreats": [{"licenseThreatGroupName": "Weak Copyleft", "licenseThreatGroupLevel": 2, "licenseThreatGroupCategory": "moderate"}, {"licenseThreatGroupName": "Sonatype Informational", "licenseThreatGroupLevel": 0, "licenseThreatGroupCategory": "no-threat"}]}, "securityData": {"securityIssues": []}, "remediation": {"versionChanges": [{"type": "next-non-failing", "data": {"component": {"packageUrl": "pkg:a-name/com.h2database%20h2@1.4.179", "hash": null, "componentIdentifier": {"format": "a-name", "coordinates": {"name": "com.h2database h2", "qualifier": "", "version": "1.4.179"}}, "displayName": "com.h2database h2 1.4.179"}}}]}}, {"packageUrl": "pkg:a-name/org.webjars%20jquery@1.10.2", "hash": "37081687a930b9a4a29c", "componentIdentifier": {"format": "a-name", "coordinates": {"name": "org.webjars jquery", "qualifier": "", "version": "1.10.2"}}, "displayName": "org.webjars jquery 1.10.2", "proprietary": false, "matchState": "exact", "pathnames": ["./newDesign/assets/js/jquery-1.10.2.min.js", "./src/main/webapp/js/jquery/jquery-1.10.2.min.js", "./target/WebGoatLegacy-6.0.1-war-exec.jar/WebGoat.war/js/jquery/jquery-1.10.2.min.js", "./target/WebGoatLegacy-6.0.1/js/jquery/jquery-1.10.2.min.js"], "identificationSource": "Sonatype", "licenseData": {"declaredLicenses": [{"licenseId": "MIT", "licenseName": "MIT"}, {"licenseId": "UNKNOWN", "licenseName": "Non-Standard"}], "observedLicenses": [{"licenseId": "Not-Supported", "licenseName": "Not Supported"}], "effectiveLicenses": [{"licenseId": "MIT", "licenseName": "MIT"}, {"licenseId": "UNKNOWN", "licenseName": "Non-Standard"}], "overriddenLicenses": [], "status": "Open", "effectiveLicenseThreats": [{"licenseThreatGroupName": "Liberal", "licenseThreatGroupLevel": 0, "licenseThreatGroupCategory": "no-threat"}, {"licenseThreatGroupName": "Non Standard", "licenseThreatGroupLevel": 6, "licenseThreatGroupCategory": "severe"}, {"licenseThreatGroupName": "Sonatype Informational", "licenseThreatGroupLevel": 0, "licenseThreatGroupCategory": "no-threat"}]}, "securityData": {"securityIssues": [{"source": "cve", "reference": "CVE-2019-11358", "severity": 6.1, "status": "Open", "url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-11358", "threatCategory": "severe", "cwe": "79", "cvssVector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N", "cvssVectorSource": "cve_cvss_3", "deeperData": {"identifier": "CVE-2019-11358", "vulnIds": ["CVE-2019-11358"], "vulnerabilityLink": "http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2019-11358", "source": {"shortName": "CVE", "longName": "National Vulnerability Database"}, "mainSeverity": {"source": "cve_cvss_3", "score": 6.1, "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N"}, "severityScores": [{"source": "cve_cvss_2", "score": 4.3}, {"source": "sonatype_cvss_3", "score": 7.5}], "weakness": {"cweSource": "CVE", "cweIds": [{"id": "1321", "uri": "https://cwe.mitre.org/data/definitions/1321.html"}]}, "categories": ["data"], "description": "jQuery before 3.4.0, as used in Drupal, Backdrop CMS, and other products, mishandles jQuery.extend(true, {}, ...) because of Object.prototype pollution. If an unsanitized source object contained an enumerable __proto__ property, it could extend the native Object.prototype.", "explanationMarkdown": "The `jquery` package is vulnerable to Prototype Pollution. The `jQuery.extend` and `jQuery.fn.extend` functions defined in many files allow an untrusted object to extend `Object.prototype`. An attacker can modify and add prototype properties to JavaScript objects and can potentially leverage those changes to crash the application or execute remote code.\n\n*Advisory Deviation Notice:* The Sonatype security research team has assessed the CVSS score for this vulnerability to be 7.5 given the nature of prototype pollution and the high impact to data integrity, as opposed to a score of 6.1 reported by [NVD](https://nvd.nist.gov/vuln/detail/CVE-2019-11358).", "detectionMarkdown": "The application is vulnerable by using this component.", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue.\n\nNote: If this component is included as a bundled/transitive dependency of another component, there may not be an upgrade path. In this instance, we recommend contacting the maintainers who included the vulnerable package. Alternatively, we recommend investigating alternative components or a potential mitigating control.", "advisories": [{"referenceType": "PROJECT", "url": "https://blog.jquery.com/2019/04/10/jquery-3-4-0-released/"}, {"referenceType": "PROJECT", "url": "https://github.com/cbeust/testng/issues/2150"}, {"referenceType": "PROJECT", "url": "https://github.com/jquery/jquery/pull/4333"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "cve", "reference": "CVE-2020-11023", "severity": 6.1, "status": "Open", "url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-11023", "threatCategory": "severe", "cwe": "79", "cvssVector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N", "cvssVectorSource": "cve_cvss_3", "deeperData": {"identifier": "CVE-2020-11023", "vulnIds": ["CVE-2020-11023"], "vulnerabilityLink": "http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2020-11023", "source": {"shortName": "CVE", "longName": "National Vulnerability Database"}, "mainSeverity": {"source": "cve_cvss_3", "score": 6.1, "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N"}, "severityScores": [{"source": "cve_cvss_2", "score": 4.3}, {"source": "sonatype_cvss_3", "score": 6.1}], "weakness": {"cweSource": "CVE", "cweIds": [{"id": "79", "uri": "https://cwe.mitre.org/data/definitions/79.html"}]}, "categories": ["data"], "description": "In jQuery versions greater than or equal to 1.0.3 and before 3.5.0, passing HTML containing <option> elements from untrusted sources - even after sanitizing it - to one of jQuery's DOM manipulation methods (i.e. .html(), .append(), and others) may execute untrusted code. This problem is patched in jQuery 3.5.0.", "explanationMarkdown": "The `jquery` package is vulnerable to Cross-Site Scripting (XSS). Multiple jQuery files as listed below, improperly sanitize HTML input containing `<option>` tags. An attacker can exploit this vulnerability by passing crafted input to jQuery's DOM manipulation methods (e.g. `.html()`, `.append()`, etc.) to execute XSS attacks.\n\n\n*Vulnerable File(s) and Function(s)*:\n\npackage/dist/jquery.slim.js\n\npackage/dist/jquery.js\n\npackage/src/manipulation/wrapMap.js\n\npackage/src/manipulation.js\n\npackage/src/core.js\n\npackage/src/core.js", "detectionMarkdown": "The application is vulnerable by using this component.", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue.\n\nAlternatively, a workaround is provided by [jQuery](https://github.com/jquery/jquery/security/advisories/GHSA-jpcq-cgw6-v4j6):\n>To workaround this issue without upgrading, use DOMPurify with its `SAFE_FOR_JQUERY` option to sanitize the HTML string before passing it to a jQuery method.\n\n\nNote: If this component is included as a bundled/transitive dependency of another component, there may not be an upgrade path. In this instance, we recommend contacting the maintainers who included the vulnerable package. Alternatively, we recommend investigating alternative components or a potential mitigating control.", "advisories": [{"referenceType": "PROJECT", "url": "https://jquery.com/upgrade-guide/3.5/"}, {"referenceType": "THIRD_PARTY", "url": "https://github.com/advisories/GHSA-jpcq-cgw6-v4j6"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "sonatype", "reference": "sonatype-2014-0026", "severity": 6.5, "status": "Open", "url": "http://localhost:8070/ui/links/vln/sonatype-2014-0026", "threatCategory": "severe", "cwe": "79", "cvssVector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:H/A:N", "cvssVectorSource": "sonatype_cvss_3", "deeperData": {"identifier": "sonatype-2014-0026", "vulnIds": ["sonatype-2014-0026"], "source": {"shortName": "Sonatype", "longName": "Sonatype Data Research"}, "mainSeverity": {"source": "sonatype_cvss_3", "score": 6.5, "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:H/A:N"}, "severityScores": [{"source": "cve_cvss_2", "score": 0.0}], "weakness": {"cweSource": "Sonatype", "cweIds": [{"id": "79", "uri": "https://cwe.mitre.org/data/definitions/79.html"}]}, "categories": ["data"], "description": null, "explanationMarkdown": "The `jQuery` package is vulnerable to Cross-Site Scripting (XSS). The `parseHTML()` function in the `parseHTML.js`, `jquery.js` files allow JavaScript to be executed immediately when it's embedded within the event attributes. An attacker can exploit this vulnerability by injecting malicious JavaScript containing events handlers which, when rendered, results in the execution of arbitrary script.", "detectionMarkdown": "The application is vulnerable by using this component.", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue.\n\nNote: If this component is included as a bundled/transitive dependency of another component, there may not be an upgrade path. In this instance, we recommend contacting the maintainers who included the vulnerable package. Alternatively, we recommend investigating alternative components or a potential mitigating control.", "advisories": [{"referenceType": "PROJECT", "url": "https://github.com/jquery/jquery/pull/1505"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "sonatype", "reference": "sonatype-2020-0187", "severity": 6.1, "status": "Open", "url": "http://localhost:8070/ui/links/vln/sonatype-2020-0187", "threatCategory": "severe", "cwe": "79", "cvssVector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N", "cvssVectorSource": "sonatype_cvss_3", "deeperData": {"identifier": "sonatype-2020-0187", "vulnIds": ["sonatype-2020-0187", "CVE-2020-11022"], "source": {"shortName": "Sonatype", "longName": "Sonatype Data Research"}, "mainSeverity": {"source": "sonatype_cvss_3", "score": 6.1, "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N"}, "severityScores": [{"source": "cve_cvss_2", "score": 0.0}], "weakness": {"cweSource": "Sonatype", "cweIds": [{"id": "79", "uri": "https://cwe.mitre.org/data/definitions/79.html"}]}, "categories": ["data"], "description": null, "explanationMarkdown": "The `jquery` package is vulnerable to Cross-Site Scripting (XSS). The `htmlPrefilter` function in `manipulation.js` replaces non-XHTML-compliant tags with compliant tags. A remote attacker can exploit this behavior with an ostensibly benign injection that the replacement functionality will turn into malicious live JavaScript that will execute in a victim's browser context.\n\nNOTE: This vulnerability has been assigned CVE-2020-11022.", "detectionMarkdown": "The application is vulnerable by using this component.", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue. If an older version of jQuery must be used, the jQuery team recommends manually removing the regular expression string replacement in the `htmlPrefilter` function returning the HTML code as is, so that the function looks as follows:\n```\njQuery.htmlPrefilter = function( html ) {\n\treturn html;\n};\n```\n\nFor XHTML-compliant behavior: Use the latest version of the [jQuery migrate plugin](https://github.com/jquery/jquery-migrate) and call `jQuery.UNSAFE_restoreLegacyHtmlPrefilter()` in addition to sanitizing the user input using the [dompurify](https://github.com/cure53/dompurify) library. Do not use the `SAFE_FOR_JQUERY` option when using `dompurify`. See the [upgrade guide](https://jquery.com/upgrade-guide/3.5/) for more detailed information\n\nRef: [https://github.com/advisories/GHSA-gxr4-xjj5-5px2](https://github.com/advisories/GHSA-gxr4-xjj5-5px2)\n\nNote: If this component is included as a bundled/transitive dependency of another component, there may not be an upgrade path. In this instance, we recommend contacting the maintainers who included the vulnerable package. Alternatively, we recommend investigating alternative components or a potential mitigating control.\n", "advisories": [{"referenceType": "PROJECT", "url": "https://blog.jquery.com/2020/04/10/jquery-3-5-0-released/"}, {"referenceType": "PROJECT", "url": "https://github.com/jquery/jquery/pull/4642"}, {"referenceType": "PROJECT", "url": "https://github.com/jquery/jquery/security/advisories/GHSA-gxr4-xjj5-5px2"}, {"referenceType": "PROJECT", "url": "https://jquery.com/upgrade-guide/3.5/"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}]}, "remediation": {"versionChanges": [{"type": "next-non-failing", "data": {"component": {"packageUrl": "pkg:a-name/org.webjars%20jquery@1.10.2", "hash": null, "componentIdentifier": {"format": "a-name", "coordinates": {"name": "org.webjars jquery", "qualifier": "", "version": "1.10.2"}}, "displayName": "org.webjars jquery 1.10.2"}}}]}}, {"packageUrl": "pkg:a-name/ace-builds@1.2.2", "hash": "39c136421c79c8eb3ad9", "componentIdentifier": {"format": "a-name", "coordinates": {"name": "ace-builds", "qualifier": "", "version": "1.2.2"}}, "displayName": "ace-builds 1.2.2", "proprietary": false, "matchState": "exact", "pathnames": ["./src/main/webapp/js/ace/ext-modelist.js", "./src/main/webapp/js/ace/ext-themelist.js", "./target/WebGoatLegacy-6.0.1-war-exec.jar/WebGoat.war/js/ace/ext-modelist.js", "./target/WebGoatLegacy-6.0.1-war-exec.jar/WebGoat.war/js/ace/ext-themelist.js", "./target/WebGoatLegacy-6.0.1/js/ace/ext-modelist.js", "./target/WebGoatLegacy-6.0.1/js/ace/ext-themelist.js"], "identificationSource": "Sonatype", "licenseData": {"declaredLicenses": [{"licenseId": "BSD-UNSPECIFIED", "licenseName": "BSD"}], "observedLicenses": [{"licenseId": "Not-Supported", "licenseName": "Not Supported"}], "effectiveLicenses": [{"licenseId": "BSD-UNSPECIFIED", "licenseName": "BSD"}], "overriddenLicenses": [], "status": "Open", "effectiveLicenseThreats": [{"licenseThreatGroupName": "Liberal", "licenseThreatGroupLevel": 0, "licenseThreatGroupCategory": "no-threat"}, {"licenseThreatGroupName": "Sonatype Informational", "licenseThreatGroupLevel": 0, "licenseThreatGroupCategory": "no-threat"}]}, "securityData": {"securityIssues": []}, "remediation": {"versionChanges": [{"type": "next-no-violations", "data": {"component": {"packageUrl": "pkg:a-name/ace-builds@1.3.1", "hash": null, "componentIdentifier": {"format": "a-name", "coordinates": {"name": "ace-builds", "qualifier": "", "version": "1.3.1"}}, "displayName": "ace-builds 1.3.1"}}}, {"type": "next-non-failing", "data": {"component": {"packageUrl": "pkg:a-name/ace-builds@1.2.2", "hash": null, "componentIdentifier": {"format": "a-name", "coordinates": {"name": "ace-builds", "qualifier": "", "version": "1.2.2"}}, "displayName": "ace-builds 1.2.2"}}}]}}, {"packageUrl": "pkg:maven/commons-collections/commons-collections@3.1?type=jar", "hash": "40fb048097caeacdb11d", "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "commons-collections", "classifier": "", "extension": "jar", "groupId": "commons-collections", "version": "3.1"}}, "displayName": "commons-collections : commons-collections : 3.1", "proprietary": false, "matchState": "exact", "pathnames": ["./target/WebGoatLegacy-6.0.1-war-exec.jar/WebGoat.war/WEB-INF/lib/commons-collections-3.1.jar", "./target/WebGoatLegacy-6.0.1/WEB-INF/lib/commons-collections-3.1.jar", "WebGoat:WebGoatLegacy:war:6.0.1/commons-collections:commons-collections:jar:3.1"], "identificationSource": "Sonatype", "licenseData": {"declaredLicenses": [{"licenseId": "Not-Declared", "licenseName": "Not Declared"}], "observedLicenses": [{"licenseId": "Apache-2.0", "licenseName": "Apache-2.0"}], "effectiveLicenses": [{"licenseId": "Apache-2.0", "licenseName": "Apache-2.0"}], "overriddenLicenses": [], "status": "Open", "effectiveLicenseThreats": [{"licenseThreatGroupName": "Liberal", "licenseThreatGroupLevel": 0, "licenseThreatGroupCategory": "no-threat"}, {"licenseThreatGroupName": "Sonatype Special Licenses", "licenseThreatGroupLevel": 5, "licenseThreatGroupCategory": "severe"}]}, "securityData": {"securityIssues": [{"source": "sonatype", "reference": "sonatype-2015-0002", "severity": 9.0, "status": "Open", "url": "http://localhost:8070/ui/links/vln/sonatype-2015-0002", "threatCategory": "critical", "cwe": "502", "cvssVector": "CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:C/C:H/I:H/A:H", "cvssVectorSource": "sonatype_cvss_3", "deeperData": {"identifier": "sonatype-2015-0002", "vulnIds": ["sonatype-2015-0002"], "source": {"shortName": "Sonatype", "longName": "Sonatype Data Research"}, "mainSeverity": {"source": "sonatype_cvss_3", "score": 9.0, "vector": "CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:C/C:H/I:H/A:H"}, "severityScores": [{"source": "cve_cvss_2", "score": 0.0}], "weakness": {"cweSource": "Sonatype", "cweIds": [{"id": "502", "uri": "https://cwe.mitre.org/data/definitions/502.html"}]}, "categories": ["data", "functional"], "description": null, "explanationMarkdown": "The `commons-collections` package is vulnerable to Remote Code Execution (RCE). Due to the behavior of `InvokerTransformer`, a remote code execution attack may be executed against any application performing deserialization of user-supplied objects when `commons-collections` is present on the classpath.\n\nThe intended behavior of `InvokerTransformer` is to allow for the invocation of any method on the Java classpath. The `InvokerTransformer` class implements `Serializable` and therefore can be included in a serialized object. A combination of the intended functionality of the `InvokerTransformer` class and its serializable nature allows an attacker to embed malicious content, such as  `Runtime.getRuntime().exec()` via Java reflection, allowing execution of remote code.\n\nNOTE: Multiple CVEs assigned to various third-party products (e.g. IBM, Cisco, RedHat, etc.) contained this vulnerability via the `commons-collections` package. To avoid confusion, Sonatype Security Research team has assigned this vulnerability a single identifier specific to `commons-collections`: sonatype-2015-0002.\n\nOther CVEs include but are not limited to CVE-2015-7501, CVE-2015-6420, CVE-2017-10934, CVE-2017-15708, CVE-2015-4852, CVE-2015-6934, CVE-2016-1114, CVE-2016-1998, CVE-2016-1997, CVE-2016-1999, CVE-2016-2009, CVE-2016-3642, CVE-2016-4368, CVE-2016-4372, CVE-2016-4369, CVE-2016-4385, CVE-2015-7450, CVE-2015-8765, CVE-2016-2000, CVE-2016-1985, CVE-2016-2003, and CVE-2017-12628.", "detectionMarkdown": "The application is vulnerable if it allows deserialization of untrusted data.", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue.\n\nA potential workaround is to remove `commons-collections` from the classpath or to remove the `InvokerTransformer` class from the `common-collections` jar file.\n\nNote: This is not specifically a `commons-collections` issue. Any serializable object that allows reflection (dynamic method invocation) or execution of dangerous functionality will be subject to the same exploit.", "advisories": [{"referenceType": "ATTACK", "url": "http://foxglovesecurity.com/2015/11/06/what-do-weblogic-websphere-jboss-jenkins-opennms-and-your-application-have-in-common-this-vulnerability/"}, {"referenceType": "PROJECT", "url": "http://mail-archives.us.apache.org/mod_mbox/www-announce/201511.mbox/%3C5649061A.1050703@apache.org%3E"}, {"referenceType": "PROJECT", "url": "https://issues.apache.org/jira/browse/COLLECTIONS-580"}, {"referenceType": "THIRD_PARTY", "url": "https://blog.codecentric.de/en/2015/11/comment-on-the-so-called-security-vulnerability-in-apache-commons-collections/"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}]}, "dependencyData": {"directDependency": true, "innerSource": false}, "remediation": {"versionChanges": [{"type": "next-non-failing", "data": {"component": {"packageUrl": "pkg:maven/commons-collections/commons-collections@3.1?type=jar", "hash": null, "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "commons-collections", "classifier": "", "extension": "jar", "groupId": "commons-collections", "version": "3.1"}}, "displayName": "commons-collections : commons-collections : 3.1"}}}, {"type": "next-non-failing-with-dependencies", "data": {"component": {"packageUrl": "pkg:maven/commons-collections/commons-collections@3.1?type=jar", "hash": null, "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "commons-collections", "classifier": "", "extension": "jar", "groupId": "commons-collections", "version": "3.1"}}, "displayName": "commons-collections : commons-collections : 3.1"}}}]}}, {"packageUrl": "pkg:a-name/jquery-timepicker@1.3.2", "hash": "459038f2b3a096115f62", "componentIdentifier": {"format": "a-name", "coordinates": {"name": "jquery-timepicker", "qualifier": "", "version": "1.3.2"}}, "displayName": "jquery-timepicker 1.3.2", "proprietary": false, "matchState": "exact", "pathnames": ["./src/main/webapp/js/jquery/jquery-ui-1.10.4.custom.min.js", "./target/WebGoatLegacy-6.0.1-war-exec.jar/WebGoat.war/js/jquery/jquery-ui-1.10.4.custom.min.js", "./target/WebGoatLegacy-6.0.1/js/jquery/jquery-ui-1.10.4.custom.min.js"], "identificationSource": "Sonatype", "licenseData": {"declaredLicenses": [{"licenseId": "GPL-2.0", "licenseName": "GPL-2.0"}, {"licenseId": "MIT", "licenseName": "MIT"}], "observedLicenses": [{"licenseId": "Not-Supported", "licenseName": "Not Supported"}], "effectiveLicenses": [{"licenseId": "GPL-2.0", "licenseName": "GPL-2.0"}, {"licenseId": "MIT", "licenseName": "MIT"}], "overriddenLicenses": [], "status": "Open", "effectiveLicenseThreats": [{"licenseThreatGroupName": "Copyleft", "licenseThreatGroupLevel": 9, "licenseThreatGroupCategory": "critical"}, {"licenseThreatGroupName": "Liberal", "licenseThreatGroupLevel": 0, "licenseThreatGroupCategory": "no-threat"}, {"licenseThreatGroupName": "Sonatype Informational", "licenseThreatGroupLevel": 0, "licenseThreatGroupCategory": "no-threat"}]}, "securityData": {"securityIssues": []}, "remediation": {"versionChanges": [{"type": "next-non-failing", "data": {"component": {"packageUrl": "pkg:a-name/jquery-timepicker@1.3.2", "hash": null, "componentIdentifier": {"format": "a-name", "coordinates": {"name": "jquery-timepicker", "qualifier": "", "version": "1.3.2"}}, "displayName": "jquery-timepicker 1.3.2"}}}]}}, {"packageUrl": "pkg:maven/org.springframework/spring-beans@3.2.4.RELEASE?type=jar", "hash": "47b156296a5e9875faa7", "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "spring-beans", "classifier": "", "extension": "jar", "groupId": "org.springframework", "version": "3.2.4.RELEASE"}}, "displayName": "org.springframework : spring-beans : 3.2.4.RELEASE", "proprietary": false, "matchState": "exact", "pathnames": ["./target/WebGoatLegacy-6.0.1-war-exec.jar/WebGoat.war/WEB-INF/lib/spring-beans-3.2.4.RELEASE.jar", "./target/WebGoatLegacy-6.0.1/WEB-INF/lib/spring-beans-3.2.4.RELEASE.jar", "WebGoat:WebGoatLegacy:war:6.0.1/org.springframework:spring-beans:jar:3.2.4.RELEASE"], "identificationSource": "Sonatype", "licenseData": {"declaredLicenses": [{"licenseId": "Apache-2.0", "licenseName": "Apache-2.0"}], "observedLicenses": [{"licenseId": "Apache-2.0", "licenseName": "Apache-2.0"}], "effectiveLicenses": [{"licenseId": "Apache-2.0", "licenseName": "Apache-2.0"}], "overriddenLicenses": [], "status": "Open", "effectiveLicenseThreats": [{"licenseThreatGroupName": "Liberal", "licenseThreatGroupLevel": 0, "licenseThreatGroupCategory": "no-threat"}]}, "securityData": {"securityIssues": [{"source": "cve", "reference": "CVE-2022-22965", "severity": 9.8, "status": "Open", "url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-22965", "threatCategory": "critical", "cwe": "94", "cvssVector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H", "cvssVectorSource": "cve_cvss_3", "deeperData": {"identifier": "CVE-2022-22965", "vulnIds": ["CVE-2022-22965"], "vulnerabilityLink": "http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2022-22965", "source": {"shortName": "CVE", "longName": "National Vulnerability Database"}, "mainSeverity": {"source": "cve_cvss_3", "score": 9.8, "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"}, "severityScores": [{"source": "cve_cvss_2", "score": 7.5}, {"source": "sonatype_cvss_3", "score": 9.8}], "weakness": {"cweSource": "CVE", "cweIds": [{"id": "94", "uri": "https://cwe.mitre.org/data/definitions/94.html"}]}, "categories": ["data"], "description": "A Spring MVC or Spring WebFlux application running on JDK 9+ may be vulnerable to remote code execution (RCE) via data binding. The specific exploit requires the application to run on Tomcat as a WAR deployment. If the application is deployed as a Spring Boot executable jar, i.e. the default, it is not vulnerable to the exploit. However, the nature of the vulnerability is more general, and there may be other ways to exploit it.", "explanationMarkdown": "The `spring-beans` package is vulnerable to Remote Code Execution (RCE). The constructor method in the `CachedIntrospectionResults` class allows the loading of arbitrary classes. A remote attacker can leverage this behaviour to modify the web server's logging properties via a ClassLoader allowing for the upload of a web shell, ultimately resulting in RCE. \nThis vulnerability is also known as `springshell` or `spring4shell` which affects `spring-beans` and not `spring-core` as earlier reports suggested. \n\n*Note:* This issue is due to an insufficient fix for CVE-2010-1622. \n\n*Note*: This issue has been assigned CVE-2022-22965 since we initially reported this vulnerability.", "detectionMarkdown": "[According to the Spring project](https://spring.io/blog/2022/03/31/spring-framework-rce-early-announcement), this vulnerability is exploitable if the following are true about your specific application using this component:\n- JDK >=9 is being used.\n- The application is deployed as a .war (as opposed to a Spring Boot executable jar)\n\nIt is important to note that these qualifications pertain specifically to the currently published exploits (as of 3/31/2022). Due to the nature of this vulnerability, it is possible that future exploits may be discovered, and it is highly recommended that the component be updated to a non-vulnerable version regardless of the application's environment.\n\nFor example, initially it appeared that only applications running on Tomcat were affected, but exploits have since been found that work for Payara Server (and likely also Glassfish, the codebase Payara is based on). Please refer to [https://blog.payara.fish/payara-and-spring4shell](https://blog.payara.fish/payara-and-spring4shell) for more detail.", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue. \n\nThe Spring project has [released guidance on applying a workaround](https://spring.io/blog/2022/03/31/spring-framework-rce-early-announcement) for those who are unable to upgrade.\n\nNote: If this component is included as a bundled/transitive dependency of another component, there may not be an upgrade path. In this instance, we recommend contacting the maintainers who included the vulnerable package. Alternatively, we recommend investigating alternative components or a potential mitigating control.", "advisories": [{"referenceType": "PROJECT", "url": "https://spring.io/blog/2022/03/31/spring-framework-rce-early-announcement"}, {"referenceType": "THIRD_PARTY", "url": "http://web.archive.org/web/20220330064100/https://twitter.com/shyest_sys/status/1509053689331335174"}, {"referenceType": "THIRD_PARTY", "url": "https://blog.sonatype.com/new-0-day-spring-framework-vulnerability-confirmed-patch-now"}, {"referenceType": "THIRD_PARTY", "url": "https://www.praetorian.com/blog/spring-core-jdk9-rce/"}, {"referenceType": "THIRD_PARTY", "url": "https://www.rapid7.com/blog/post/2022/03/30/spring4shell-zero-day-vulnerability-in-spring-framework/"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "sonatype", "reference": "sonatype-2022-1764", "severity": 9.8, "status": "Open", "url": "http://localhost:8070/ui/links/vln/sonatype-2022-1764", "threatCategory": "critical", "cwe": "470", "cvssVector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H", "cvssVectorSource": "sonatype_cvss_3", "deeperData": {"identifier": "sonatype-2022-1764", "vulnIds": ["sonatype-2022-1764"], "source": {"shortName": "Sonatype", "longName": "Sonatype Data Research"}, "mainSeverity": {"source": "sonatype_cvss_3", "score": 9.8, "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"}, "severityScores": [{"source": "cve_cvss_2", "score": 0.0}], "weakness": {"cweSource": "Sonatype", "cweIds": [{"id": "470", "uri": "https://cwe.mitre.org/data/definitions/470.html"}]}, "categories": ["data"], "description": null, "explanationMarkdown": "*NOTE:* This Sonatype issue is a duplicate of CVE-2022-22965, as Sonatype reported this issue before a CVE ID was officially released.\n\nThe `spring-beans` package is vulnerable to Remote Code Execution (RCE). The constructor method in the `CachedIntrospectionResults` class allows the loading of arbitrary classes. A remote attacker can leverage this behaviour to modify the web server's logging properties via a ClassLoader allowing for the upload of a web shell, ultimately resulting in RCE. \nThis vulnerability is also known as `springshell` or `spring4shell` which affects `spring-beans` and not `spring-core` as earlier reports suggested. \n\n*Note:* This issue is due to an insufficient fix for CVE-2010-1622. \n\n*Note*: This issue has been assigned CVE-2022-22965 since we initially reported this vulnerability.", "detectionMarkdown": "[According to the Spring project](https://spring.io/blog/2022/03/31/spring-framework-rce-early-announcement), this vulnerability is exploitable if the following are true about your specific application using this component:\n- JDK >=9 is being used.\n- The application is deployed as a .war (as opposed to a Spring Boot executable jar)\n\nIt is important to note that these qualifications pertain specifically to the currently published exploits (as of 3/31/2022). Due to the nature of this vulnerability, it is possible that future exploits may be discovered, and it is highly recommended that the component be updated to a non-vulnerable version regardless of the application's environment.\n\nFor example, initially it appeared that only applications running on Tomcat were affected, but exploits have since been found that work for Payara Server (and likely also Glassfish, the codebase Payara is based on). Please refer to [https://blog.payara.fish/payara-and-spring4shell](https://blog.payara.fish/payara-and-spring4shell) for more detail.", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue. \n\nThe Spring project has [released guidance on applying a workaround](https://spring.io/blog/2022/03/31/spring-framework-rce-early-announcement) for those who are unable to upgrade.\n\nNote: If this component is included as a bundled/transitive dependency of another component, there may not be an upgrade path. In this instance, we recommend contacting the maintainers who included the vulnerable package. Alternatively, we recommend investigating alternative components or a potential mitigating control.", "advisories": [{"referenceType": "PROJECT", "url": "https://spring.io/blog/2022/03/31/spring-framework-rce-early-announcement"}, {"referenceType": "THIRD_PARTY", "url": "http://web.archive.org/web/20220330064100/https://twitter.com/shyest_sys/status/1509053689331335174"}, {"referenceType": "THIRD_PARTY", "url": "https://blog.sonatype.com/new-0-day-spring-framework-vulnerability-confirmed-patch-now"}, {"referenceType": "THIRD_PARTY", "url": "https://www.praetorian.com/blog/spring-core-jdk9-rce/"}, {"referenceType": "THIRD_PARTY", "url": "https://www.rapid7.com/blog/post/2022/03/30/spring4shell-zero-day-vulnerability-in-spring-framework/"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}]}, "dependencyData": {"directDependency": false, "innerSource": false, "parentComponentPurls": ["pkg:maven/org.springframework/spring-webmvc@3.2.4.RELEASE?type=jar"]}, "remediation": {"versionChanges": [{"type": "next-no-violations", "data": {"component": {"packageUrl": "pkg:maven/org.springframework/spring-beans@5.2.22.RELEASE?type=jar", "hash": null, "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "spring-beans", "classifier": "", "extension": "jar", "groupId": "org.springframework", "version": "5.2.22.RELEASE"}}, "displayName": "org.springframework : spring-beans : 5.2.22.RELEASE"}}}, {"type": "next-non-failing", "data": {"component": {"packageUrl": "pkg:maven/org.springframework/spring-beans@3.2.4.RELEASE?type=jar", "hash": null, "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "spring-beans", "classifier": "", "extension": "jar", "groupId": "org.springframework", "version": "3.2.4.RELEASE"}}, "displayName": "org.springframework : spring-beans : 3.2.4.RELEASE"}}}, {"type": "next-no-violations-with-dependencies", "data": {"component": {"packageUrl": "pkg:maven/org.springframework/spring-beans@5.2.22.RELEASE?type=jar", "hash": null, "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "spring-beans", "classifier": "", "extension": "jar", "groupId": "org.springframework", "version": "5.2.22.RELEASE"}}, "displayName": "org.springframework : spring-beans : 5.2.22.RELEASE"}}}, {"type": "next-non-failing-with-dependencies", "data": {"component": {"packageUrl": "pkg:maven/org.springframework/spring-beans@3.2.4.RELEASE?type=jar", "hash": null, "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "spring-beans", "classifier": "", "extension": "jar", "groupId": "org.springframework", "version": "3.2.4.RELEASE"}}, "displayName": "org.springframework : spring-beans : 3.2.4.RELEASE"}}}]}}, {"packageUrl": "pkg:maven/org.springframework.security/spring-security-core@3.2.4.RELEASE?type=jar", "hash": "493bc57396a821e8ffa7", "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "spring-security-core", "classifier": "", "extension": "jar", "groupId": "org.springframework.security", "version": "3.2.4.RELEASE"}}, "displayName": "org.springframework.security : spring-security-core : 3.2.4.RELEASE", "proprietary": false, "matchState": "exact", "pathnames": ["./target/WebGoatLegacy-6.0.1-war-exec.jar/WebGoat.war/WEB-INF/lib/spring-security-core-3.2.4.RELEASE.jar", "./target/WebGoatLegacy-6.0.1/WEB-INF/lib/spring-security-core-3.2.4.RELEASE.jar", "WebGoat:WebGoatLegacy:war:6.0.1/org.springframework.security:spring-security-core:jar:3.2.4.RELEASE"], "identificationSource": "Sonatype", "licenseData": {"declaredLicenses": [{"licenseId": "Apache-2.0", "licenseName": "Apache-2.0"}], "observedLicenses": [{"licenseId": "Apache-2.0", "licenseName": "Apache-2.0"}, {"licenseId": "ISC", "licenseName": "ISC"}], "effectiveLicenses": [{"licenseId": "Apache-2.0", "licenseName": "Apache-2.0"}, {"licenseId": "ISC", "licenseName": "ISC"}], "overriddenLicenses": [], "status": "Open", "effectiveLicenseThreats": [{"licenseThreatGroupName": "Liberal", "licenseThreatGroupLevel": 0, "licenseThreatGroupCategory": "no-threat"}]}, "securityData": {"securityIssues": [{"source": "cve", "reference": "CVE-2019-11272", "severity": 7.3, "status": "Open", "url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-11272", "threatCategory": "critical", "cwe": "522", "cvssVector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L", "cvssVectorSource": "cve_cvss_3", "deeperData": {"identifier": "CVE-2019-11272", "vulnIds": ["CVE-2019-11272"], "vulnerabilityLink": "http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2019-11272", "source": {"shortName": "CVE", "longName": "National Vulnerability Database"}, "mainSeverity": {"source": "cve_cvss_3", "score": 7.3, "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L"}, "severityScores": [{"source": "cve_cvss_2", "score": 7.5}, {"source": "sonatype_cvss_3", "score": 6.5}], "weakness": {"cweSource": "CVE", "cweIds": [{"id": "522", "uri": "https://cwe.mitre.org/data/definitions/522.html"}]}, "categories": ["data"], "description": "Spring Security, versions 4.2.x up to 4.2.12, and older unsupported versions support plain text passwords using PlaintextPasswordEncoder. If an application using an affected version of Spring Security is leveraging PlaintextPasswordEncoder and a user has a null encoded password, a malicious user (or attacker) can authenticate using a password of \"null\".", "explanationMarkdown": "The spring-security-core package is vulnerable to an Authentication Bypass. The `isPasswordValid` method in `PlaintextPasswordEncoder.class` will authenticate a user who has a null encoded password when PlaintextPasswordEncoder is used.  An attacker could exploit this vulnerability by logging in as that user with a null password.", "detectionMarkdown": "The application is vulnerable by using this component.", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue.", "advisories": [{"referenceType": "PROJECT", "url": "https://github.com/spring-projects/spring-security/issues/7023"}, {"referenceType": "PROJECT", "url": "https://pivotal.io/security/cve-2019-11272"}, {"referenceType": "PROJECT", "url": "https://sagan-production.cfapps.io/blog/2019/06/19/cve-2019-11272-spring-security-4-2-13-released"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "cve", "reference": "CVE-2019-3795", "severity": 5.3, "status": "Open", "url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-3795", "threatCategory": "severe", "cwe": "330", "cvssVector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N", "cvssVectorSource": "cve_cvss_3", "deeperData": {"identifier": "CVE-2019-3795", "vulnIds": ["CVE-2019-3795"], "vulnerabilityLink": "http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2019-3795", "source": {"shortName": "CVE", "longName": "National Vulnerability Database"}, "mainSeverity": {"source": "cve_cvss_3", "score": 5.3, "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N"}, "severityScores": [{"source": "cve_cvss_2", "score": 5.0}, {"source": "sonatype_cvss_3", "score": 4.8}], "weakness": {"cweSource": "CVE", "cweIds": [{"id": "330", "uri": "https://cwe.mitre.org/data/definitions/330.html"}]}, "categories": ["data", "functional"], "description": "Spring Security versions 4.2.x prior to 4.2.12, 5.0.x prior to 5.0.12, and 5.1.x prior to 5.1.5 contain an insecure randomness vulnerability when using SecureRandomFactoryBean#setSeed to configure a SecureRandom instance. In order to be impacted, an honest application must provide a seed and make the resulting random material available to an attacker for inspection.", "explanationMarkdown": "The spring-security-core package has a cryptographic weakness. The `getObject` method in `SecureRandomFactoryBean.class` uses a seed to create a cryptographically sensitive value in a reversible manner. An attacker with access to the random material produced by a vulnerable application's seed can exploit this behavior to decrypt values that would not normally be accessible.\n\n\n*Advisory Deviation Notice:* The Sonatype security research team discovered that this vulnerability was actually introduced in version 2.0.1 instead of 4.0 as stated in the advisory.", "detectionMarkdown": "The application is vulnerable by using SecureRandomFactoryBean#setSeed  from this component to create a SecureRandom instance.", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue.", "advisories": [{"referenceType": "PROJECT", "url": "https://pivotal.io/security/cve-2019-3795"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "cve", "reference": "CVE-2020-5408", "severity": 6.5, "status": "Open", "url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-5408", "threatCategory": "severe", "cwe": "329", "cvssVector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N", "cvssVectorSource": "cve_cvss_3", "deeperData": {"identifier": "CVE-2020-5408", "vulnIds": ["CVE-2020-5408"], "vulnerabilityLink": "http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2020-5408", "source": {"shortName": "CVE", "longName": "National Vulnerability Database"}, "mainSeverity": {"source": "cve_cvss_3", "score": 6.5, "vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N"}, "severityScores": [{"source": "cve_cvss_2", "score": 4.0}, {"source": "sonatype_cvss_3", "score": 6.5}], "weakness": {"cweSource": "CVE", "cweIds": [{"id": "330", "uri": "https://cwe.mitre.org/data/definitions/330.html"}]}, "categories": ["configuration", "data"], "description": "Spring Security versions 5.3.x prior to 5.3.2, 5.2.x prior to 5.2.4, 5.1.x prior to 5.1.10, 5.0.x prior to 5.0.16 and 4.2.x prior to 4.2.16 use a fixed null initialization vector with CBC Mode in the implementation of the queryable text encryptor. A malicious user with access to the data that has been encrypted using such an encryptor may be able to derive the unencrypted values using a dictionary attack.", "explanationMarkdown": "The `spring-security-crypto` package, also known as Spring Security Crypto Module, is vulnerable due to Not Using a Random IV with CBC Mode. The `queryableText` method in `Encryptors.class` which serves as the queryable text encryptor, utilises a fixed null initialization vector with CBC mode, which is not secure. An attacker can exploit this vulnerability via Dictionary Attacks to potentially derive unencrypted values of data encrypted using this method.\n\n*Advisory Deviation Notice:* The Sonatype Security Research team discovered that the fix for this vulnerability was actually introduced in version 6.0.0, by removing the unsafe/deprecated method, instead of 4.2.16, 5.0.16, 5.1.10, 5.2.4, and 5.3.2 as stated in the advisory.", "detectionMarkdown": "The application is vulnerable by using this component, if it uses `queryableText(CharSequence, CharSequence)` in `Encryptors.class` for querying encrypted data.", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue.\n\nNote: If this component is included as a bundled/transitive dependency of another component, there may not be an upgrade path. In this instance, we recommend contacting the maintainers who included the vulnerable package. Alternatively, we recommend investigating alternative components or a potential mitigating control.", "advisories": [{"referenceType": "PROJECT", "url": "https://github.com/spring-projects/spring-security/issues/8480"}, {"referenceType": "PROJECT", "url": "https://spring.io/blog/2020/05/13/cve-reports-published-for-spring-security"}, {"referenceType": "PROJECT", "url": "https://tanzu.vmware.com/security/cve-2020-5408"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "cve", "reference": "CVE-2022-22976", "severity": 5.3, "status": "Open", "url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-22976", "threatCategory": "severe", "cwe": "190", "cvssVector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N", "cvssVectorSource": "cve_cvss_3", "deeperData": {"identifier": "CVE-2022-22976", "vulnIds": ["CVE-2022-22976"], "vulnerabilityLink": "http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2022-22976", "source": {"shortName": "CVE", "longName": "National Vulnerability Database"}, "mainSeverity": {"source": "cve_cvss_3", "score": 5.3, "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N"}, "severityScores": [{"source": "cve_cvss_2", "score": 4.3}, {"source": "sonatype_cvss_3", "score": 5.3}], "weakness": {"cweSource": "CVE", "cweIds": [{"id": "190", "uri": "https://cwe.mitre.org/data/definitions/190.html"}]}, "categories": ["configuration", "data"], "description": "Spring Security versions 5.5.x prior to 5.5.7, 5.6.x prior to 5.6.4, and earlier unsupported versions contain an integer overflow vulnerability. When using the BCrypt class with the maximum work factor (31), the encoder does not perform any salt rounds, due to an integer overflow error. The default settings are not affected by this CVE.", "explanationMarkdown": "The `spring-security-crypto` is vulnerable to an Integer Overflow vulnerability. The `crypt_raw()` function in the `BCrypt` class calculate a negative `rounds` value when `31` is provided as the `log_rounds` argument, hence it does not perform any salt rounds. An attacker, who has access to the calculated hashes, can get the secret values using dictionary attack techniques such as rainbow tables.", "detectionMarkdown": "The application is vulnerable by using this component with a `BCrypt` work factor of 31.", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue.\n\nNote: If this component is included as a bundled/transitive dependency of another component, there may not be an upgrade path. In this instance, we recommend contacting the maintainers who included the vulnerable package. Alternatively, we recommend investigating alternative components or a potential mitigating control.", "advisories": [{"referenceType": "PROJECT", "url": "https://spring.io/blog/2022/05/15/cve-2022-22976-bcrypt-skips-salt-rounds-for-work-factor-of-31"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}]}, "dependencyData": {"directDependency": true, "innerSource": false}, "remediation": {"versionChanges": [{"type": "next-no-violations", "data": {"component": {"packageUrl": "pkg:maven/org.springframework.security/spring-security-core@5.5.1?type=jar", "hash": null, "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "spring-security-core", "classifier": "", "extension": "jar", "groupId": "org.springframework.security", "version": "5.5.1"}}, "displayName": "org.springframework.security : spring-security-core : 5.5.1"}}}, {"type": "next-non-failing", "data": {"component": {"packageUrl": "pkg:maven/org.springframework.security/spring-security-core@3.2.4.RELEASE?type=jar", "hash": null, "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "spring-security-core", "classifier": "", "extension": "jar", "groupId": "org.springframework.security", "version": "3.2.4.RELEASE"}}, "displayName": "org.springframework.security : spring-security-core : 3.2.4.RELEASE"}}}, {"type": "next-no-violations-with-dependencies", "data": {"component": {"packageUrl": "pkg:maven/org.springframework.security/spring-security-core@6.0.3?type=jar", "hash": null, "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "spring-security-core", "classifier": "", "extension": "jar", "groupId": "org.springframework.security", "version": "6.0.3"}}, "displayName": "org.springframework.security : spring-security-core : 6.0.3"}}}, {"type": "next-non-failing-with-dependencies", "data": {"component": {"packageUrl": "pkg:maven/org.springframework.security/spring-security-core@3.2.4.RELEASE?type=jar", "hash": null, "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "spring-security-core", "classifier": "", "extension": "jar", "groupId": "org.springframework.security", "version": "3.2.4.RELEASE"}}, "displayName": "org.springframework.security : spring-security-core : 3.2.4.RELEASE"}}}]}}, {"packageUrl": "pkg:a-name/pywebtest-gitbook@0.0.1", "hash": "499b47c97591f3c948c6", "componentIdentifier": {"format": "a-name", "coordinates": {"name": "pywebtest-gitbook", "qualifier": "", "version": "0.0.1"}}, "displayName": "pywebtest-gitbook 0.0.1", "proprietary": false, "matchState": "exact", "pathnames": ["./src/main/webapp/js/ace/worker-coffee.js", "./src/main/webapp/js/ace/worker-html.js", "./src/main/webapp/js/ace/worker-javascript.js", "./src/main/webapp/js/ace/worker-php.js", "./src/main/webapp/js/ace/worker-xquery.js", "./target/WebGoatLegacy-6.0.1-war-exec.jar/WebGoat.war/js/ace/worker-coffee.js", "./target/WebGoatLegacy-6.0.1-war-exec.jar/WebGoat.war/js/ace/worker-html.js", "./target/WebGoatLegacy-6.0.1-war-exec.jar/WebGoat.war/js/ace/worker-javascript.js", "./target/WebGoatLegacy-6.0.1-war-exec.jar/WebGoat.war/js/ace/worker-php.js", "./target/WebGoatLegacy-6.0.1-war-exec.jar/WebGoat.war/js/ace/worker-xquery.js", "./target/WebGoatLegacy-6.0.1/js/ace/worker-coffee.js", "./target/WebGoatLegacy-6.0.1/js/ace/worker-html.js", "./target/WebGoatLegacy-6.0.1/js/ace/worker-javascript.js", "./target/WebGoatLegacy-6.0.1/js/ace/worker-php.js", "./target/WebGoatLegacy-6.0.1/js/ace/worker-xquery.js"], "identificationSource": "Sonatype", "licenseData": {"declaredLicenses": [{"licenseId": "MIT", "licenseName": "MIT"}], "observedLicenses": [{"licenseId": "Not-Supported", "licenseName": "Not Supported"}], "effectiveLicenses": [{"licenseId": "MIT", "licenseName": "MIT"}], "overriddenLicenses": [], "status": "Open", "effectiveLicenseThreats": [{"licenseThreatGroupName": "Liberal", "licenseThreatGroupLevel": 0, "licenseThreatGroupCategory": "no-threat"}, {"licenseThreatGroupName": "Sonatype Informational", "licenseThreatGroupLevel": 0, "licenseThreatGroupCategory": "no-threat"}]}, "securityData": {"securityIssues": []}, "remediation": {"versionChanges": [{"type": "next-non-failing", "data": {"component": {"packageUrl": "pkg:a-name/pywebtest-gitbook@0.0.1", "hash": null, "componentIdentifier": {"format": "a-name", "coordinates": {"name": "pywebtest-gitbook", "qualifier": "", "version": "0.0.1"}}, "displayName": "pywebtest-gitbook 0.0.1"}}}]}}, {"packageUrl": "pkg:maven/org.springframework/spring-context@3.2.4.RELEASE?type=jar", "hash": "4e6d5edcaeeed6cb332b", "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "spring-context", "classifier": "", "extension": "jar", "groupId": "org.springframework", "version": "3.2.4.RELEASE"}}, "displayName": "org.springframework : spring-context : 3.2.4.RELEASE", "proprietary": false, "matchState": "exact", "pathnames": ["./target/WebGoatLegacy-6.0.1-war-exec.jar/WebGoat.war/WEB-INF/lib/spring-context-3.2.4.RELEASE.jar", "./target/WebGoatLegacy-6.0.1/WEB-INF/lib/spring-context-3.2.4.RELEASE.jar", "WebGoat:WebGoatLegacy:war:6.0.1/org.springframework:spring-context:jar:3.2.4.RELEASE"], "identificationSource": "Sonatype", "licenseData": {"declaredLicenses": [{"licenseId": "Apache-2.0", "licenseName": "Apache-2.0"}], "observedLicenses": [{"licenseId": "Apache-2.0", "licenseName": "Apache-2.0"}], "effectiveLicenses": [{"licenseId": "Apache-2.0", "licenseName": "Apache-2.0"}], "overriddenLicenses": [], "status": "Open", "effectiveLicenseThreats": [{"licenseThreatGroupName": "Liberal", "licenseThreatGroupLevel": 0, "licenseThreatGroupCategory": "no-threat"}]}, "securityData": {"securityIssues": [{"source": "cve", "reference": "CVE-2022-22968", "severity": 5.3, "status": "Open", "url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-22968", "threatCategory": "severe", "cwe": "178", "cvssVector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N", "cvssVectorSource": "cve_cvss_3", "deeperData": {"identifier": "CVE-2022-22968", "vulnIds": ["CVE-2022-22968"], "vulnerabilityLink": "http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2022-22968", "source": {"shortName": "CVE", "longName": "National Vulnerability Database"}, "mainSeverity": {"source": "cve_cvss_3", "score": 5.3, "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N"}, "severityScores": [{"source": "cve_cvss_2", "score": 5.0}, {"source": "sonatype_cvss_3", "score": 3.7}], "weakness": {"cweSource": "CVE", "cweIds": [{"id": "178", "uri": "https://cwe.mitre.org/data/definitions/178.html"}]}, "categories": ["data"], "description": "In Spring Framework versions 5.3.0 - 5.3.18, 5.2.0 - 5.2.20, and older unsupported versions, the patterns for disallowedFields on a DataBinder are case sensitive which means a field is not effectively protected unless it is listed with both upper and lower case for the first character of the field, including upper and lower case for the first character of all nested fields within the property path.", "explanationMarkdown": "The `spring-context` package is vulnerable to Improper Handling of Case Sensitivity. The `setDisallowedFields()` and `isAllowed()` methods in the `DataBinder` class fail to ensure that string comparisons during the data binding validation phase are case insensitive. Attackers with control over input fields used to bind data to object attributes have the ability to bypass disallowed fields. This may alter the expected functionality of the application. This also requires attackers to know the details of the `disallowedFields` deny list.", "detectionMarkdown": "The application is vulnerable by using this component. The project maintainers provide some additional information regarding the conditions for this to be exploitable:\n\n- Registration of disallowed field patterns in a DataBinder\n- `spring-webmvc` or `spring-webflux` dependency\n- The issue relates to data binding used to populate an object from request parameters (either query parameters or form data). Data binding is used for controller method parameters that are annotated with @ModelAttribute or optionally without it, and without any other Spring Web annotation.\n- The issue does not relate to @RequestBody controller method parameters (e.g. JSON deserialization). However, such methods may still be vulnerable if they have another method parameter populated via data binding from query parameters.\n- Your Spring MVC or Spring WebFlux application may be susceptible to data binding issues even if you do not register disallowed field patterns. We highly encourage you to review your DataBinder configuration and more broadly your approach to data binding. For more details, please see the new Data Binding Model Design section in the Spring Framework reference manual.\n\nReference: [https://spring.io/blog/2022/04/13/spring-framework-data-binding-rules-vulnerability-cve-2022-22968](https://spring.io/blog/2022/04/13/spring-framework-data-binding-rules-vulnerability-cve-2022-22968)", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue.\n\nNote: If this component is included as a bundled/transitive dependency of another component, there may not be an upgrade path. In this instance, we recommend contacting the maintainers who included the vulnerable package. Alternatively, we recommend investigating alternative components or a potential mitigating control. \n\nPotential Mitigation:\n```\nour recommended approach is to use a dedicated model object that exposes only properties that are relevant for the supported use case. Another alternative is to switch to allowed field patterns: instead of supplying a \"deny list\" via setDisallowedFields(), you can supply an explicit \"allow list\" via setAllowedFields() in a WebDataBinder.\n```\nReference: [https://spring.io/blog/2022/04/13/spring-framework-data-binding-rules-vulnerability-cve-2022-22968](https://spring.io/blog/2022/04/13/spring-framework-data-binding-rules-vulnerability-cve-2022-22968)", "advisories": [{"referenceType": "PROJECT", "url": "https://github.com/spring-projects/spring-framework/issues/28333"}, {"referenceType": "PROJECT", "url": "https://github.com/spring-projects/spring-framework/issues/28334"}, {"referenceType": "PROJECT", "url": "https://spring.io/blog/2022/04/13/spring-framework-data-binding-rules-vulnerability-cve-2022-22968"}, {"referenceType": "THIRD_PARTY", "url": "https://tanzu.vmware.com/security/cve-2022-22968"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "sonatype", "reference": "sonatype-2015-0489", "severity": 6.5, "status": "Open", "url": "http://localhost:8070/ui/links/vln/sonatype-2015-0489", "threatCategory": "severe", "cwe": "400", "cvssVector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H", "cvssVectorSource": "sonatype_cvss_3", "deeperData": {"identifier": "sonatype-2015-0489", "vulnIds": ["sonatype-2015-0489"], "source": {"shortName": "Sonatype", "longName": "Sonatype Data Research"}, "mainSeverity": {"source": "sonatype_cvss_3", "score": 6.5, "vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"}, "severityScores": [{"source": "cve_cvss_2", "score": 0.0}], "weakness": {"cweSource": "Sonatype", "cweIds": [{"id": "400", "uri": "https://cwe.mitre.org/data/definitions/400.html"}]}, "categories": ["data", "functional"], "description": null, "explanationMarkdown": "The `spring-context` package is vulnerable to Denial of Service (DoS) attacks. The `setNumberHits` function in the `CronSequenceGenerator` class fails to check the increment delta before entering a loop based on its value. An attacker with the ability to influence Crontab patterns passed to the affected function can exploit this vulnerability by sending a pattern of the form `n/0`. This will cause the increment delta to be 0 thus causing an infinite loop and ultimately a DoS condition.", "detectionMarkdown": "The application is vulnerable by using the `CronSequenceGenerator` from this component.", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue.\nThe `CronSequenceGenerator` has been deprecated as of 5.3, in favor of `CronExpression`. \nReference:[https://docs.spring.io/spring-framework/docs/current/javadoc-api/](https://docs.spring.io/spring-framework/docs/current/javadoc-api/)\n\nNote: If this component is included as a bundled/transitive dependency of another component, there may not be an upgrade path. In this instance, we recommend contacting the maintainers who included the vulnerable package. Alternatively, we recommend investigating alternative components or a potential mitigating control.", "advisories": [{"referenceType": "PROJECT", "url": "https://github.com/spring-projects/spring-framework/issues/17469"}, {"referenceType": "PROJECT", "url": "https://jira.spring.io/browse/SPR-12871?redirect=false"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}]}, "dependencyData": {"directDependency": false, "innerSource": false, "parentComponentPurls": ["pkg:maven/org.springframework/spring-webmvc@3.2.4.RELEASE?type=jar"]}, "remediation": {"versionChanges": [{"type": "next-no-violations", "data": {"component": {"packageUrl": "pkg:maven/org.springframework/spring-context@5.2.21.RELEASE?type=jar", "hash": null, "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "spring-context", "classifier": "", "extension": "jar", "groupId": "org.springframework", "version": "5.2.21.RELEASE"}}, "displayName": "org.springframework : spring-context : 5.2.21.RELEASE"}}}, {"type": "next-non-failing", "data": {"component": {"packageUrl": "pkg:maven/org.springframework/spring-context@3.2.4.RELEASE?type=jar", "hash": null, "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "spring-context", "classifier": "", "extension": "jar", "groupId": "org.springframework", "version": "3.2.4.RELEASE"}}, "displayName": "org.springframework : spring-context : 3.2.4.RELEASE"}}}, {"type": "next-no-violations-with-dependencies", "data": {"component": {"packageUrl": "pkg:maven/org.springframework/spring-context@5.2.24.RELEASE?type=jar", "hash": null, "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "spring-context", "classifier": "", "extension": "jar", "groupId": "org.springframework", "version": "5.2.24.RELEASE"}}, "displayName": "org.springframework : spring-context : 5.2.24.RELEASE"}}}, {"type": "next-non-failing-with-dependencies", "data": {"component": {"packageUrl": "pkg:maven/org.springframework/spring-context@3.2.4.RELEASE?type=jar", "hash": null, "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "spring-context", "classifier": "", "extension": "jar", "groupId": "org.springframework", "version": "3.2.4.RELEASE"}}, "displayName": "org.springframework : spring-context : 3.2.4.RELEASE"}}}]}}, {"packageUrl": "pkg:a-name/org.webjars%20respond@1.4.2", "hash": "4f5a70856355ed55fec1", "componentIdentifier": {"format": "a-name", "coordinates": {"name": "org.webjars respond", "qualifier": "", "version": "1.4.2"}}, "displayName": "org.webjars respond 1.4.2", "proprietary": false, "matchState": "exact", "pathnames": ["./newDesign/assets/js/respond.min.js", "./src/main/webapp/js/respond.min.js", "./target/WebGoatLegacy-6.0.1-war-exec.jar/WebGoat.war/js/respond.min.js", "./target/WebGoatLegacy-6.0.1/js/respond.min.js"], "identificationSource": "Sonatype", "licenseData": {"declaredLicenses": [{"licenseId": "MIT", "licenseName": "MIT"}], "observedLicenses": [{"licenseId": "Not-Supported", "licenseName": "Not Supported"}], "effectiveLicenses": [{"licenseId": "MIT", "licenseName": "MIT"}], "overriddenLicenses": [], "status": "Open", "effectiveLicenseThreats": [{"licenseThreatGroupName": "Liberal", "licenseThreatGroupLevel": 0, "licenseThreatGroupCategory": "no-threat"}, {"licenseThreatGroupName": "Sonatype Informational", "licenseThreatGroupLevel": 0, "licenseThreatGroupCategory": "no-threat"}]}, "securityData": {"securityIssues": []}, "remediation": {"versionChanges": [{"type": "next-no-violations", "data": {"component": {"packageUrl": "pkg:a-name/org.webjars%20respond@1.4.2", "hash": null, "componentIdentifier": {"format": "a-name", "coordinates": {"name": "org.webjars respond", "qualifier": "", "version": "1.4.2"}}, "displayName": "org.webjars respond 1.4.2"}}}, {"type": "next-non-failing", "data": {"component": {"packageUrl": "pkg:a-name/org.webjars%20respond@1.4.2", "hash": null, "componentIdentifier": {"format": "a-name", "coordinates": {"name": "org.webjars respond", "qualifier": "", "version": "1.4.2"}}, "displayName": "org.webjars respond 1.4.2"}}}]}}, {"packageUrl": "pkg:maven/commons-digester/commons-digester@1.4.1?type=jar", "hash": "51031e9c43ae47693c99", "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "commons-digester", "classifier": "", "extension": "jar", "groupId": "commons-digester", "version": "1.4.1"}}, "displayName": "commons-digester : commons-digester : 1.4.1", "proprietary": false, "matchState": "exact", "pathnames": ["./target/WebGoatLegacy-6.0.1-war-exec.jar/WebGoat.war/WEB-INF/lib/commons-digester-1.4.1.jar", "./target/WebGoatLegacy-6.0.1/WEB-INF/lib/commons-digester-1.4.1.jar", "WebGoat:WebGoatLegacy:war:6.0.1/commons-digester:commons-digester:jar:1.4.1"], "identificationSource": "Sonatype", "licenseData": {"declaredLicenses": [{"licenseId": "Not-Declared", "licenseName": "Not Declared"}], "observedLicenses": [{"licenseId": "Apache-1.1", "licenseName": "Apache-1.1"}], "effectiveLicenses": [{"licenseId": "Apache-1.1", "licenseName": "Apache-1.1"}], "overriddenLicenses": [], "status": "Open", "effectiveLicenseThreats": [{"licenseThreatGroupName": "Liberal", "licenseThreatGroupLevel": 0, "licenseThreatGroupCategory": "no-threat"}, {"licenseThreatGroupName": "Sonatype Special Licenses", "licenseThreatGroupLevel": 5, "licenseThreatGroupCategory": "severe"}]}, "securityData": {"securityIssues": []}, "dependencyData": {"directDependency": true, "innerSource": false}, "remediation": {"versionChanges": [{"type": "next-non-failing", "data": {"component": {"packageUrl": "pkg:maven/commons-digester/commons-digester@1.4.1?type=jar", "hash": null, "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "commons-digester", "classifier": "", "extension": "jar", "groupId": "commons-digester", "version": "1.4.1"}}, "displayName": "commons-digester : commons-digester : 1.4.1"}}}, {"type": "next-non-failing-with-dependencies", "data": {"component": {"packageUrl": "pkg:maven/commons-digester/commons-digester@1.4.1?type=jar", "hash": null, "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "commons-digester", "classifier": "", "extension": "jar", "groupId": "commons-digester", "version": "1.4.1"}}, "displayName": "commons-digester : commons-digester : 1.4.1"}}}]}}, {"packageUrl": "pkg:maven/org.slf4j/jcl-over-slf4j@1.7.7?type=jar", "hash": "56003dcd0a31deea6391", "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "jcl-over-slf4j", "classifier": "", "extension": "jar", "groupId": "org.slf4j", "version": "1.7.7"}}, "displayName": "org.slf4j : jcl-over-slf4j : 1.7.7", "proprietary": false, "matchState": "exact", "pathnames": ["./target/WebGoatLegacy-6.0.1-war-exec.jar/WebGoat.war/WEB-INF/lib/jcl-over-slf4j-1.7.7.jar", "./target/WebGoatLegacy-6.0.1/WEB-INF/lib/jcl-over-slf4j-1.7.7.jar", "WebGoat:WebGoatLegacy:war:6.0.1/org.slf4j:jcl-over-slf4j:jar:1.7.7"], "identificationSource": "Sonatype", "licenseData": {"declaredLicenses": [{"licenseId": "MIT", "licenseName": "MIT"}], "observedLicenses": [{"licenseId": "Apache-2.0", "licenseName": "Apache-2.0"}], "effectiveLicenses": [{"licenseId": "MIT", "licenseName": "MIT"}, {"licenseId": "Apache-2.0", "licenseName": "Apache-2.0"}], "overriddenLicenses": [], "status": "Open", "effectiveLicenseThreats": [{"licenseThreatGroupName": "Liberal", "licenseThreatGroupLevel": 0, "licenseThreatGroupCategory": "no-threat"}]}, "securityData": {"securityIssues": []}, "dependencyData": {"directDependency": true, "innerSource": false}, "remediation": {"versionChanges": [{"type": "next-no-violations", "data": {"component": {"packageUrl": "pkg:maven/org.slf4j/jcl-over-slf4j@1.7.26?type=jar", "hash": null, "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "jcl-over-slf4j", "classifier": "", "extension": "jar", "groupId": "org.slf4j", "version": "1.7.26"}}, "displayName": "org.slf4j : jcl-over-slf4j : 1.7.26"}}}, {"type": "next-non-failing", "data": {"component": {"packageUrl": "pkg:maven/org.slf4j/jcl-over-slf4j@1.7.7?type=jar", "hash": null, "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "jcl-over-slf4j", "classifier": "", "extension": "jar", "groupId": "org.slf4j", "version": "1.7.7"}}, "displayName": "org.slf4j : jcl-over-slf4j : 1.7.7"}}}, {"type": "next-no-violations-with-dependencies", "data": {"component": {"packageUrl": "pkg:maven/org.slf4j/jcl-over-slf4j@1.7.26?type=jar", "hash": null, "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "jcl-over-slf4j", "classifier": "", "extension": "jar", "groupId": "org.slf4j", "version": "1.7.26"}}, "displayName": "org.slf4j : jcl-over-slf4j : 1.7.26"}}}, {"type": "next-non-failing-with-dependencies", "data": {"component": {"packageUrl": "pkg:maven/org.slf4j/jcl-over-slf4j@1.7.7?type=jar", "hash": null, "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "jcl-over-slf4j", "classifier": "", "extension": "jar", "groupId": "org.slf4j", "version": "1.7.7"}}, "displayName": "org.slf4j : jcl-over-slf4j : 1.7.7"}}}]}}, {"packageUrl": "pkg:maven/axis/axis-jaxrpc@1.2?type=jar", "hash": "56b85e05daa39a9bb410", "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "axis-jaxrpc", "classifier": "", "extension": "jar", "groupId": "axis", "version": "1.2"}}, "displayName": "axis : axis-jaxrpc : 1.2", "proprietary": false, "matchState": "exact", "pathnames": ["./target/WebGoatLegacy-6.0.1-war-exec.jar/WebGoat.war/WEB-INF/lib/axis-jaxrpc-1.2.jar", "./target/WebGoatLegacy-6.0.1/WEB-INF/lib/axis-jaxrpc-1.2.jar", "WebGoat:WebGoatLegacy:war:6.0.1/axis:axis-jaxrpc:jar:1.2"], "identificationSource": "Sonatype", "licenseData": {"declaredLicenses": [{"licenseId": "Apache-2.0", "licenseName": "Apache-2.0"}], "observedLicenses": [{"licenseId": "Apache-2.0", "licenseName": "Apache-2.0"}], "effectiveLicenses": [{"licenseId": "Apache-2.0", "licenseName": "Apache-2.0"}], "overriddenLicenses": [], "status": "Open", "effectiveLicenseThreats": [{"licenseThreatGroupName": "Liberal", "licenseThreatGroupLevel": 0, "licenseThreatGroupCategory": "no-threat"}]}, "securityData": {"securityIssues": []}, "dependencyData": {"directDependency": true, "innerSource": false}, "remediation": {"versionChanges": [{"type": "next-non-failing", "data": {"component": {"packageUrl": "pkg:maven/axis/axis-jaxrpc@1.2?type=jar", "hash": null, "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "axis-jaxrpc", "classifier": "", "extension": "jar", "groupId": "axis", "version": "1.2"}}, "displayName": "axis : axis-jaxrpc : 1.2"}}}, {"type": "next-non-failing-with-dependencies", "data": {"component": {"packageUrl": "pkg:maven/axis/axis-jaxrpc@1.2?type=jar", "hash": null, "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "axis-jaxrpc", "classifier": "", "extension": "jar", "groupId": "axis", "version": "1.2"}}, "displayName": "axis : axis-jaxrpc : 1.2"}}}]}}, {"packageUrl": "pkg:maven/org.slf4j/slf4j-log4j12@1.7.7?type=jar", "hash": "58f588119ffd1702c77c", "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "slf4j-log4j12", "classifier": "", "extension": "jar", "groupId": "org.slf4j", "version": "1.7.7"}}, "displayName": "org.slf4j : slf4j-log4j12 : 1.7.7", "proprietary": false, "matchState": "exact", "pathnames": ["./target/WebGoatLegacy-6.0.1-war-exec.jar/WebGoat.war/WEB-INF/lib/slf4j-log4j12-1.7.7.jar", "./target/WebGoatLegacy-6.0.1/WEB-INF/lib/slf4j-log4j12-1.7.7.jar", "WebGoat:WebGoatLegacy:war:6.0.1/org.slf4j:slf4j-log4j12:jar:1.7.7"], "identificationSource": "Sonatype", "licenseData": {"declaredLicenses": [{"licenseId": "MIT", "licenseName": "MIT"}], "observedLicenses": [{"licenseId": "MIT", "licenseName": "MIT"}], "effectiveLicenses": [{"licenseId": "MIT", "licenseName": "MIT"}], "overriddenLicenses": [], "status": "Open", "effectiveLicenseThreats": [{"licenseThreatGroupName": "Liberal", "licenseThreatGroupLevel": 0, "licenseThreatGroupCategory": "no-threat"}]}, "securityData": {"securityIssues": []}, "dependencyData": {"directDependency": true, "innerSource": false}, "remediation": {"versionChanges": [{"type": "next-no-violations", "data": {"component": {"packageUrl": "pkg:maven/org.slf4j/slf4j-log4j12@1.7.26?type=jar", "hash": null, "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "slf4j-log4j12", "classifier": "", "extension": "jar", "groupId": "org.slf4j", "version": "1.7.26"}}, "displayName": "org.slf4j : slf4j-log4j12 : 1.7.26"}}}, {"type": "next-non-failing", "data": {"component": {"packageUrl": "pkg:maven/org.slf4j/slf4j-log4j12@1.7.7?type=jar", "hash": null, "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "slf4j-log4j12", "classifier": "", "extension": "jar", "groupId": "org.slf4j", "version": "1.7.7"}}, "displayName": "org.slf4j : slf4j-log4j12 : 1.7.7"}}}, {"type": "next-non-failing-with-dependencies", "data": {"component": {"packageUrl": "pkg:maven/org.slf4j/slf4j-log4j12@1.7.7?type=jar", "hash": null, "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "slf4j-log4j12", "classifier": "", "extension": "jar", "groupId": "org.slf4j", "version": "1.7.7"}}, "displayName": "org.slf4j : slf4j-log4j12 : 1.7.7"}}}]}}, {"packageUrl": "pkg:maven/log4j/log4j@1.2.17?type=jar", "hash": "5af35056b4d257e4b64b", "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "log4j", "classifier": "", "extension": "jar", "groupId": "log4j", "version": "1.2.17"}}, "displayName": "log4j : log4j : 1.2.17", "proprietary": false, "matchState": "exact", "pathnames": ["./target/WebGoatLegacy-6.0.1-war-exec.jar/WebGoat.war/WEB-INF/lib/log4j-1.2.17.jar", "./target/WebGoatLegacy-6.0.1/WEB-INF/lib/log4j-1.2.17.jar", "WebGoat:WebGoatLegacy:war:6.0.1/log4j:log4j:jar:1.2.17"], "identificationSource": "Sonatype", "licenseData": {"declaredLicenses": [{"licenseId": "Apache-2.0", "licenseName": "Apache-2.0"}], "observedLicenses": [{"licenseId": "Apache-2.0", "licenseName": "Apache-2.0"}], "effectiveLicenses": [{"licenseId": "Apache-2.0", "licenseName": "Apache-2.0"}], "overriddenLicenses": [], "status": "Open", "effectiveLicenseThreats": [{"licenseThreatGroupName": "Liberal", "licenseThreatGroupLevel": 0, "licenseThreatGroupCategory": "no-threat"}]}, "securityData": {"securityIssues": [{"source": "cve", "reference": "CVE-2019-17571", "severity": 9.8, "status": "Open", "url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-17571", "threatCategory": "critical", "cwe": "502", "cvssVector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H", "cvssVectorSource": "cve_cvss_3", "deeperData": {"identifier": "CVE-2019-17571", "vulnIds": ["CVE-2019-17571"], "vulnerabilityLink": "http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2019-17571", "source": {"shortName": "CVE", "longName": "National Vulnerability Database"}, "mainSeverity": {"source": "cve_cvss_3", "score": 9.8, "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"}, "severityScores": [{"source": "cve_cvss_2", "score": 7.5}, {"source": "sonatype_cvss_3", "score": 9.8}], "weakness": {"cweSource": "CVE", "cweIds": [{"id": "502", "uri": "https://cwe.mitre.org/data/definitions/502.html"}]}, "categories": ["data", "functional"], "description": "Included in Log4j 1.2 is a SocketServer class that is vulnerable to deserialization of untrusted data which can be exploited to remotely execute arbitrary code when combined with a deserialization gadget when listening to untrusted network traffic for log data. This affects Log4j versions up to 1.2 up to 1.2.17.", "explanationMarkdown": "The `log4j:log4j` package is vulnerable to Remote Code Execution (RCE) due to Deserialization of Untrusted Data. The `SocketNode` constructor in `SocketNode.class`, as referenced by the `SocketServer.class`, fails to properly verify if the objects being read from the `ObjectInputStream` belong to a list of classes which  are safe for deserialization. An attacker can exploit this vulnerability to deserialize objects of unsafe types, potentially resulting in Remote Code Execution (RCE).\n\nNOTE: Starting with version(s) 2.x, `log4j:log4j` was relocated to `org.apache.logging.log4j:log4j-core`. A variation of this vulnerability exists in `org.apache.logging.log4j:log4j-core` as CVE-2017-5645, in versions up to but excluding 2.8.2.\n\n*Advisory Deviation Notice:* The Sonatype security research team discovered that the vulnerability actually impacts the `SocketNode` class being referenced by `SocketServer` class and not the `SocketServer` class itself as indicated in the NVD advisory. ", "detectionMarkdown": "The application is vulnerable by using this component if socket server classes have been configured for use.", "recommendationMarkdown": "Starting with version(s) 2.x, `log4j:log4j` was relocated to `org.apache.logging.log4j:log4j-core`. A variation of this vulnerability exists in `org.apache.logging.log4j:log4j-core` as CVE-2017-5645, in versions up to but excluding 2.8.2. Therefore,  it is recommended to upgrade to `org.apache.logging.log4j:log4j-core` version(s) 2.8.2 and above. For `log4j:log4j` 1.x versions however, a fix does not exist.\n\n*NOTE:*\n> Apache Log4j 1.2 reached end of life in August 2015. Users should upgrade to Log4j 2.x which both addresses that vulnerability as well as numerous other issues in the previous versions.\n\nReference: [https://logging.apache.org/log4j/1.2/](https://logging.apache.org/log4j/1.2/)", "advisories": [{"referenceType": "PROJECT", "url": "https://issues.apache.org/jira/browse/LOG4J2-1863"}, {"referenceType": "PROJECT", "url": "https://lists.apache.org/thread.html/84cc4266238e057b95eb95dfd8b29d46a2592e7672c12c92f68b2917%40%3Cannounce.apache.org%3E"}, {"referenceType": "THIRD_PARTY", "url": "https://bugzilla.redhat.com/show_bug.cgi?id=1785616"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "cve", "reference": "CVE-2021-4104", "severity": 7.5, "status": "Open", "url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-4104", "threatCategory": "critical", "cwe": "502", "cvssVector": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:H/I:H/A:H", "cvssVectorSource": "cve_cvss_3", "deeperData": {"identifier": "CVE-2021-4104", "vulnIds": ["CVE-2021-4104"], "vulnerabilityLink": "http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2021-4104", "source": {"shortName": "CVE", "longName": "National Vulnerability Database"}, "mainSeverity": {"source": "cve_cvss_3", "score": 7.5, "vector": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:H/I:H/A:H"}, "severityScores": [{"source": "cve_cvss_2", "score": 6.0}, {"source": "sonatype_cvss_3", "score": 6.6}], "weakness": {"cweSource": "CVE", "cweIds": [{"id": "502", "uri": "https://cwe.mitre.org/data/definitions/502.html"}]}, "categories": ["data"], "description": "JMSAppender in Log4j 1.2 is vulnerable to deserialization of untrusted data when the attacker has write access to the Log4j configuration. The attacker can provide TopicBindingName and TopicConnectionFactoryBindingName configurations causing JMSAppender to perform JNDI requests that result in remote code execution in a similar fashion to CVE-2021-44228. Note this issue only affects Log4j 1.2 when specifically configured to use JMSAppender, which is not the default. Apache Log4j 1.2 reached end of life in August 2015. Users should upgrade to Log4j 2 as it addresses numerous other issues from the previous versions.", "explanationMarkdown": "The `log4j:log4j` package is vulnerable to Deserialization of Untrusted Data. The `lookup()` and `activateOptions()` methods in the `JMSAppender` class allow `JNDI` lookup requests to be made when the `TopicBindingName` and `TopicConnectionFactoryBindingName` specify a trusted host. Lookups made to this host may be used by attackers to request a serialized malicious Java Object that can be deserialized and executed, leading to Remote Code Execution (RCE). \n\nNote that this vulnerability is different from [CVE-2021-44228](https://nvd.nist.gov/vuln/detail/CVE-2021-44228) and requires the attacker to be in control of the third party host that is specified in the configuration, or write access to the Log4j configuration file in order to specify a malicious lookup host directly. This vulnerability also only affects the 1.x.x component of `Log4j` released under the `log4j:log4j` group and artifact IDs.\n\n*Advisory Deviation Notice:* The Sonatype security research team discovered that the root cause of the vulnerability is in all versions of log4j:log4j, not just in the 1.2.x branch as the advisory states. ", "detectionMarkdown": "The application is vulnerable by using this component under the following circumstances:\n\n- The configuration file specifies an allowed third-party `JNDI` lookup host for the `JMSAppender`\n- the `javax.jms.*` API is included in the application's `CLASSPATH`\n\nReference: [https://bugzilla.redhat.com/show_bug.cgi?id=2031667#c28](https://bugzilla.redhat.com/show_bug.cgi?id=2031667#c28)", "recommendationMarkdown": "There is no non-vulnerable upgrade path for `log4j:log4j`. We recommend investigating alternative components. The 1.x.x component has reach `End of Life`, and users should upgrade to a non-vulnerable version of `org.apache.logging.log4j:log4j-core` as this component includes other security vulnerabilities that are not fixed.\n\nReferences:\n- [https://github.com/apache/logging-log4j2/pull/608#issuecomment-990494126](https://github.com/apache/logging-log4j2/pull/608#issuecomment-990494126)\n- [https://logging.apache.org/log4j/1.2/](https://logging.apache.org/log4j/1.2/)\n\nThis vulnerability has been fixed in version `1.3.0.Final` of `org.jboss.logmanager:log4j-jboss-logmanager` by removing the vulnerable class.", "advisories": [{"referenceType": "PROJECT", "url": "https://github.com/apache/logging-log4j2/pull/608#issuecomment-990494126"}, {"referenceType": "THIRD_PARTY", "url": "https://bugzilla.redhat.com/show_bug.cgi?id=2031667"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "cve", "reference": "CVE-2022-23302", "severity": 8.8, "status": "Open", "url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-23302", "threatCategory": "critical", "cwe": "502", "cvssVector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H", "cvssVectorSource": "cve_cvss_3", "deeperData": {"identifier": "CVE-2022-23302", "vulnIds": ["CVE-2022-23302"], "vulnerabilityLink": "http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2022-23302", "source": {"shortName": "CVE", "longName": "National Vulnerability Database"}, "mainSeverity": {"source": "cve_cvss_3", "score": 8.8, "vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"}, "severityScores": [{"source": "cve_cvss_2", "score": 6.0}, {"source": "sonatype_cvss_3", "score": 7.2}], "weakness": {"cweSource": "CVE", "cweIds": [{"id": "502", "uri": "https://cwe.mitre.org/data/definitions/502.html"}]}, "categories": ["configuration", "data"], "description": "JMSSink in all versions of Log4j 1.x is vulnerable to deserialization of untrusted data when the attacker has write access to the Log4j configuration or if the configuration references an LDAP service the attacker has access to. The attacker can provide a TopicConnectionFactoryBindingName configuration causing JMSSink to perform JNDI requests that result in remote code execution in a similar fashion to CVE-2021-4104. Note this issue only affects Log4j 1.x when specifically configured to use JMSSink, which is not the default. Apache Log4j 1.2 reached end of life in August 2015. Users should upgrade to Log4j 2 as it addresses numerous other issues from the previous versions.", "explanationMarkdown": "The `log4j` package is vulnerable to Deserialization of Untrusted Data. The constructor in the `JMSSink` class allows for `JNDI` lookup requests via `TopicConnectionFactoryBindingName` configurations. An attacker with write access to the Log4j configuration, or control of an LDAP service that Log4j is configured to connect to, can exploit this vulnerability to request malicious serialized Java objects that, when deserialized, will result in Remote Code Execution (RCE).\n\n*Advisory Deviation Notice:*\n                        The Sonatype Security Research team has created a CVSS score that differs from the publicly available score that, based on our research, more accurately reflects the severity of the vulnerability.", "detectionMarkdown": "The application is vulnerable by using this component if it is configured to use the included `JMSSink` application. \n\nReference: [https://lists.apache.org/thread/bsr3l5qz4g0myrjhy9h67bcxodpkwj4w](https://lists.apache.org/thread/bsr3l5qz4g0myrjhy9h67bcxodpkwj4w)", "recommendationMarkdown": "There is no non-vulnerable upgrade path for `log4j:log4j`. We recommend investigating alternative components. Log4j 1.x has reached `End of Life`, and users should upgrade to a non-vulnerable version of `org.apache.logging.log4j:log4j-core` as `log4j:log4j` contains other security vulnerabilities that are not fixed.\n\nReference: [https://lists.apache.org/thread/bsr3l5qz4g0myrjhy9h67bcxodpkwj4w](https://lists.apache.org/thread/bsr3l5qz4g0myrjhy9h67bcxodpkwj4w)\n\nThis vulnerability has been fixed in version `1.3.0.Final` of `org.jboss.logmanager:log4j-jboss-logmanager` by removing the vulnerable class.", "advisories": [{"referenceType": "PROJECT", "url": "https://lists.apache.org/thread/bsr3l5qz4g0myrjhy9h67bcxodpkwj4w"}, {"referenceType": "PROJECT", "url": "https://logging.apache.org/log4j/1.2/index.html"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "cve", "reference": "CVE-2022-23305", "severity": 9.8, "status": "Open", "url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-23305", "threatCategory": "critical", "cwe": "89", "cvssVector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H", "cvssVectorSource": "cve_cvss_3", "deeperData": {"identifier": "CVE-2022-23305", "vulnIds": ["CVE-2022-23305"], "vulnerabilityLink": "http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2022-23305", "source": {"shortName": "CVE", "longName": "National Vulnerability Database"}, "mainSeverity": {"source": "cve_cvss_3", "score": 9.8, "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"}, "severityScores": [{"source": "cve_cvss_2", "score": 6.8}, {"source": "sonatype_cvss_3", "score": 9.8}], "weakness": {"cweSource": "CVE", "cweIds": [{"id": "89", "uri": "https://cwe.mitre.org/data/definitions/89.html"}]}, "categories": ["configuration", "data"], "description": "By design, the JDBCAppender in Log4j 1.2.x accepts an SQL statement as a configuration parameter where the values to be inserted are converters from PatternLayout. The message converter, %m, is likely to always be included. This allows attackers to manipulate the SQL by entering crafted strings into input fields or headers of an application that are logged allowing unintended SQL queries to be executed. Note this issue only affects Log4j 1.x when specifically configured to use the JDBCAppender, which is not the default. Beginning in version 2.0-beta8, the JDBCAppender was re-introduced with proper support for parameterized SQL queries and further customization over the columns written to in logs. Apache Log4j 1.2 reached end of life in August 2015. Users should upgrade to Log4j 2 as it addresses numerous other issues from the previous versions.", "explanationMarkdown": "The `log4j` package is vulnerable to SQL Injection. The `setSql()` method in the `JDBCAppender` class uses `PatternLayout`'s message converter (`%m`) to convert log strings into SQL statements without parameterization or other means of sanitization. A remote attacker who can provide input to be logged by an application can exploit this vulnerability to execute malicious SQL queries against a connected database.", "detectionMarkdown": "The application is vulnerable by using this component if it is configured to use the `JDBCAppender` with a `ConversionPattern` that includes the `%m` message converter.\n\nReference: [https://lists.apache.org/thread/pt6lh3pbsvxqlwlp4c5l798dv2hkc85y](https://lists.apache.org/thread/pt6lh3pbsvxqlwlp4c5l798dv2hkc85y)\n\n", "recommendationMarkdown": "There is no non-vulnerable upgrade path for `log4j:log4j` 1.x. We recommend upgrading to `log4j` 2.x, which introduced a `JDBCAppender` that makes use of prepared statements and parameterization to protect against SQL Injection. Alternatively, this vulnerability can be mitigated in `log4j` 1.x by removing all usages of the `JDBCAppender` from the application's configuration. \n\nReference: [https://lists.apache.org/thread/pt6lh3pbsvxqlwlp4c5l798dv2hkc85y](https://lists.apache.org/thread/pt6lh3pbsvxqlwlp4c5l798dv2hkc85y)\n\nThis vulnerability has been fixed in version `1.3.0.Final` of `org.jboss.logmanager:log4j-jboss-logmanager` by removing the vulnerable class from the project.", "advisories": [{"referenceType": "PROJECT", "url": "https://lists.apache.org/thread/pt6lh3pbsvxqlwlp4c5l798dv2hkc85y"}, {"referenceType": "PROJECT", "url": "https://logging.apache.org/log4j/1.2/index.html"}, {"referenceType": "PROJECT", "url": "https://logging.apache.org/log4j/2.x/security.html"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "cve", "reference": "CVE-2022-23307", "severity": 8.8, "status": "Open", "url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-23307", "threatCategory": "critical", "cwe": "502", "cvssVector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H", "cvssVectorSource": "cve_cvss_3", "deeperData": {"identifier": "CVE-2022-23307", "vulnIds": ["CVE-2022-23307", "CVE-2020-9493"], "vulnerabilityLink": "http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2022-23307", "source": {"shortName": "CVE", "longName": "National Vulnerability Database"}, "mainSeverity": {"source": "cve_cvss_3", "score": 8.8, "vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"}, "severityScores": [{"source": "cve_cvss_2", "score": 9.0}, {"source": "sonatype_cvss_3", "score": 9.8}], "weakness": {"cweSource": "CVE", "cweIds": [{"id": "502", "uri": "https://cwe.mitre.org/data/definitions/502.html"}]}, "categories": ["data"], "description": "CVE-2020-9493 identified a deserialization issue that was present in Apache Chainsaw. Prior to Chainsaw V2.0 Chainsaw was a component of Apache Log4j 1.2.x where the same issue exists.", "explanationMarkdown": "The `log4j` package is vulnerable due to Deserialization of Untrusted Data. The `run()` method in the `LoggingReceiver` class allows untrusted serialized log events to be deserialized. A remote attacker can exploit this behavior by supplying a malicious serialized object which, when deserialized by an application, will result in arbitrary code execution.\n\n*Note:* This vulnerability is the same as CVE-2020-9493 that was fixed in Chainsaw 2.1.0. Prior to Chainsaw V2.0, Chainsaw was a component of Apache Log4j 1.2.x where the same issue exists.\n\nReference: [https://www.mail-archive.com/announce@apache.org/msg07042.html]( https://www.mail-archive.com/announce@apache.org/msg07042.html)\n\n*Advisory Deviation Notice:*\n                        The Sonatype Security Research team has created a CVSS score that differs from the publicly available score that, based on our research, more accurately reflects the severity of the vulnerability.", "detectionMarkdown": "The application is vulnerable by using this component.", "recommendationMarkdown": "There is no non-vulnerable upgrade path for for `log4j:log4j` 1.x. We recommend upgrading to `log4j` 2.x and Apache Chainsaw 2.1.0. Alternatively, do not configure Chainsaw to read serialized log events. Use a different receiver, such as `XMLSocketReceiver`.\n\nReference:\n[https://www.mail-archive.com/announce@apache.org/msg07042.html](https://www.mail-archive.com/announce@apache.org/msg07042.html)\n[https://lists.apache.org/thread/rx0hpjow5csq05r93cyvntj9ry19tm9y](https://lists.apache.org/thread/rx0hpjow5csq05r93cyvntj9ry19tm9y)\n\nThis vulnerability has been fixed in version `1.3.0.Final` of `org.jboss.logmanager:log4j-jboss-logmanager` by removing Apache Chainsaw from the project.", "advisories": [{"referenceType": "PROJECT", "url": "https://lists.apache.org/thread/rg4yyc89vs3dw6kpy3r92xop9loywyhh"}, {"referenceType": "PROJECT", "url": "https://logging.apache.org/log4j/1.2/index.html"}, {"referenceType": "PROJECT", "url": "https://logging.apache.org/log4j/2.x/security.html"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "cve", "reference": "CVE-2023-26464", "severity": 7.5, "status": "Open", "url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-26464", "threatCategory": "critical", "cwe": "400", "cvssVector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H", "cvssVectorSource": "cve_cvss_3", "deeperData": {"identifier": "CVE-2023-26464", "vulnIds": ["CVE-2023-26464"], "vulnerabilityLink": "http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2023-26464", "source": {"shortName": "CVE", "longName": "National Vulnerability Database"}, "mainSeverity": {"source": "cve_cvss_3", "score": 7.5, "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}, "severityScores": [{"source": "cve_cvss_2", "score": 0.0}, {"source": "sonatype_cvss_3", "score": 7.5}], "weakness": {"cweSource": "CVE", "cweIds": [{"id": "502", "uri": "https://cwe.mitre.org/data/definitions/502.html"}]}, "categories": ["data", "functional"], "description": "** UNSUPPORTED WHEN ASSIGNED **\n\nWhen using the Chainsaw or SocketAppender components with Log4j 1.x on JRE less than 1.7, an attacker that manages to cause a logging entry involving a specially-crafted (ie, deeply nested) \nhashmap or hashtable (depending on which logging component is in use) to be processed could exhaust the available memory in the virtual machine and achieve Denial of Service when the object is deserialized.\n\nThis issue affects Apache Log4j before 2. Affected users are recommended to update to Log4j 2.x.\n\nNOTE: This vulnerability only affects products that are no longer supported by the maintainer.\n\n\n\n\n", "explanationMarkdown": "The `log4j` package is vulnerable to a Denial of Service (DoS) attack. The `run()` method in the `LoggingReceiver$Slurper` class and the `append()` method in the `SocketAppender` class fail to limit recursion when parsing certain properties of log events. Consequently, events processed by the `SocketAppender`, or `Chainsaw` via the `SocketAppender`, that contain deeply nested or self-referential data may cause the application to recurse until stack exhaustion. A remote attacker who can invoke a log event with arbitrary properties can exploit this vulnerability to cause the affected application to crash.", "detectionMarkdown": "The application is vulnerable by using the `Chainsaw` or `SocketAppender`  features of this component if running Java versions less than 1.7.\n\nReference: <https://lists.apache.org/thread/wkx6grrcjkh86crr49p4blc1v1nflj3t>", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue.\n\nNote: If this component is included as a bundled/transitive dependency of another component, there may not be an upgrade path. In this instance, we recommend contacting the maintainers who included the vulnerable package. Alternatively, we recommend investigating alternative components or a potential mitigating control.", "advisories": [{"referenceType": "PROJECT", "url": "https://lists.apache.org/thread/wkx6grrcjkh86crr49p4blc1v1nflj3t"}, {"referenceType": "THIRD_PARTY", "url": "https://github.com/advisories/GHSA-vp98-w2p3-mv35"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "sonatype", "reference": "sonatype-2010-0053", "severity": 7.8, "status": "Open", "url": "http://localhost:8070/ui/links/vln/sonatype-2010-0053", "threatCategory": "critical", "cwe": "426", "cvssVector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H", "cvssVectorSource": "sonatype_cvss_3", "deeperData": {"identifier": "sonatype-2010-0053", "vulnIds": ["sonatype-2010-0053"], "source": {"shortName": "Sonatype", "longName": "Sonatype Data Research"}, "mainSeverity": {"source": "sonatype_cvss_3", "score": 7.8, "vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"}, "severityScores": [{"source": "cve_cvss_2", "score": 0.0}], "weakness": {"cweSource": "Sonatype", "cweIds": [{"id": "426", "uri": "https://cwe.mitre.org/data/definitions/426.html"}]}, "categories": ["data", "functional"], "description": null, "explanationMarkdown": "The `log4j` package is vulnerable to Dynamic-link Library (DLL) Preloading. The `NTEventLogAppender` class fails to instantiate the log appender DLL for Windows using a fully qualified path name, allowing for DLL Search Order Hijacking. An attacker on a compromised system has the ability to force log4j to load malicious DLLs and execute arbitrary code within the context of the application's process.", "detectionMarkdown": "The application is vulnerable by using this component.\n\nThis vulnerability only affects users on the Windows operating system. Reference: [https://bz.apache.org/bugzilla/show_bug.cgi?id=50323](https://bz.apache.org/bugzilla/show_bug.cgi?id=50323)", "recommendationMarkdown": "There is no non-vulnerable upgrade path for this component/package. We recommend investigating alternative components or a potential mitigating control.", "advisories": [{"referenceType": "PROJECT", "url": "https://bz.apache.org/bugzilla/show_bug.cgi?id=50323"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}]}, "dependencyData": {"directDependency": true, "innerSource": false}, "remediation": {"versionChanges": [{"type": "next-non-failing", "data": {"component": {"packageUrl": "pkg:maven/log4j/log4j@1.2.17?type=jar", "hash": null, "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "log4j", "classifier": "", "extension": "jar", "groupId": "log4j", "version": "1.2.17"}}, "displayName": "log4j : log4j : 1.2.17"}}}, {"type": "next-non-failing-with-dependencies", "data": {"component": {"packageUrl": "pkg:maven/log4j/log4j@1.2.17?type=jar", "hash": null, "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "log4j", "classifier": "", "extension": "jar", "groupId": "log4j", "version": "1.2.17"}}, "displayName": "log4j : log4j : 1.2.17"}}}]}}, {"packageUrl": "pkg:maven/javax.mail/mail@1.4.2?type=jar", "hash": "6a1d836b6a4c77ec11ac", "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "mail", "classifier": "", "extension": "jar", "groupId": "javax.mail", "version": "1.4.2"}}, "displayName": "javax.mail : mail : 1.4.2", "proprietary": false, "matchState": "exact", "pathnames": ["./target/WebGoatLegacy-6.0.1-war-exec.jar/WebGoat.war/WEB-INF/lib/mail-1.4.2.jar", "./target/WebGoatLegacy-6.0.1/WEB-INF/lib/mail-1.4.2.jar", "WebGoat:WebGoatLegacy:war:6.0.1/javax.mail:mail:jar:1.4.2"], "identificationSource": "Sonatype", "licenseData": {"declaredLicenses": [{"licenseId": "CDDL-1.1", "licenseName": "CDDL-1.1"}, {"licenseId": "Generic-Open-Source-Clause", "licenseName": "Generic-Open-Source-Clause"}, {"licenseId": "GPL-2.0-with-classpath-exception", "licenseName": "GPL-2.0-with-classpath-exception"}], "observedLicenses": [{"licenseId": "GPL-2.0-with-classpath-exception", "licenseName": "GPL-2.0-with-classpath-exception"}, {"licenseId": "CDDL-1.0", "licenseName": "CDDL-1.0"}, {"licenseId": "CDDL-1.0-GPL-2.0-CPE", "licenseName": "CDDL-1.0 or GPL-2.0-CPE"}], "effectiveLicenses": [{"licenseId": "CDDL-1.1", "licenseName": "CDDL-1.1"}, {"licenseId": "Generic-Open-Source-Clause", "licenseName": "Generic-Open-Source-Clause"}, {"licenseId": "GPL-2.0-with-classpath-exception", "licenseName": "GPL-2.0-with-classpath-exception"}, {"licenseId": "CDDL-1.0", "licenseName": "CDDL-1.0"}, {"licenseId": "CDDL-1.0-GPL-2.0-CPE", "licenseName": "CDDL-1.0 or GPL-2.0-CPE"}], "overriddenLicenses": [], "status": "Open", "effectiveLicenseThreats": [{"licenseThreatGroupName": "Copyleft", "licenseThreatGroupLevel": 9, "licenseThreatGroupCategory": "critical"}, {"licenseThreatGroupName": "Liberal", "licenseThreatGroupLevel": 0, "licenseThreatGroupCategory": "no-threat"}, {"licenseThreatGroupName": "Weak Copyleft", "licenseThreatGroupLevel": 2, "licenseThreatGroupCategory": "moderate"}]}, "securityData": {"securityIssues": [{"source": "sonatype", "reference": "sonatype-2017-0492", "severity": 4.3, "status": "Open", "url": "http://localhost:8070/ui/links/vln/sonatype-2017-0492", "threatCategory": "severe", "cwe": "200", "cvssVector": "CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:N/A:N", "cvssVectorSource": "sonatype_cvss_3", "deeperData": {"identifier": "sonatype-2017-0492", "vulnIds": ["sonatype-2017-0492"], "source": {"shortName": "Sonatype", "longName": "Sonatype Data Research"}, "mainSeverity": {"source": "sonatype_cvss_3", "score": 4.3, "vector": "CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:N/A:N"}, "severityScores": [{"source": "cve_cvss_2", "score": 0.0}], "weakness": {"cweSource": "Sonatype", "cweIds": [{"id": "200", "uri": "https://cwe.mitre.org/data/definitions/200.html"}]}, "categories": ["data"], "description": null, "explanationMarkdown": "JavaMail is vulnerable to Information Exposure. The `getUniqueMessageIDValue()` method in the `UniqueValue` class file appends the username and the hostname of the Java process when generating the `Message-Id` for an email. This can lead to unintended information leakage in the email headers and potentially lead to security issues.", "detectionMarkdown": "The application is vulnerable by using this component.", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue.\nNOTE: A fixed version has not yet been released for the following components:\n\n`javax.mail:mailapi`\n\n`org.apache.servicemix.bundles:org.apache.servicemix.bundles.javax.mail`\n\n`javax.mail:mail`", "advisories": [{"referenceType": "PROJECT", "url": "https://github.com/javaee/javamail/issues/127"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}]}, "dependencyData": {"directDependency": true, "innerSource": false}, "remediation": {"versionChanges": [{"type": "next-non-failing", "data": {"component": {"packageUrl": "pkg:maven/javax.mail/mail@1.4.2?type=jar", "hash": null, "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "mail", "classifier": "", "extension": "jar", "groupId": "javax.mail", "version": "1.4.2"}}, "displayName": "javax.mail : mail : 1.4.2"}}}, {"type": "next-non-failing-with-dependencies", "data": {"component": {"packageUrl": "pkg:maven/javax.mail/mail@1.4.2?type=jar", "hash": null, "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "mail", "classifier": "", "extension": "jar", "groupId": "javax.mail", "version": "1.4.2"}}, "displayName": "javax.mail : mail : 1.4.2"}}}]}}, {"packageUrl": "pkg:maven/javax.servlet/jstl@1.2?type=jar", "hash": "74aca283cd4f4b4f3e42", "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "jstl", "classifier": "", "extension": "jar", "groupId": "javax.servlet", "version": "1.2"}}, "displayName": "javax.servlet : jstl : 1.2", "proprietary": false, "matchState": "exact", "pathnames": ["./target/WebGoatLegacy-6.0.1-war-exec.jar/WebGoat.war/WEB-INF/lib/jstl-1.2.jar", "./target/WebGoatLegacy-6.0.1/WEB-INF/lib/jstl-1.2.jar", "WebGoat:WebGoatLegacy:war:6.0.1/javax.servlet:jstl:jar:1.2"], "identificationSource": "Sonatype", "licenseData": {"declaredLicenses": [{"licenseId": "Not-Declared", "licenseName": "Not Declared"}], "observedLicenses": [{"licenseId": "CDDL-1.0", "licenseName": "CDDL-1.0"}], "effectiveLicenses": [{"licenseId": "CDDL-1.0", "licenseName": "CDDL-1.0"}], "overriddenLicenses": [], "status": "Open", "effectiveLicenseThreats": [{"licenseThreatGroupName": "Sonatype Special Licenses", "licenseThreatGroupLevel": 5, "licenseThreatGroupCategory": "severe"}, {"licenseThreatGroupName": "Weak Copyleft", "licenseThreatGroupLevel": 2, "licenseThreatGroupCategory": "moderate"}]}, "securityData": {"securityIssues": [{"source": "cve", "reference": "CVE-2015-0254", "severity": 7.5, "status": "Open", "url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2015-0254", "threatCategory": "critical", "cwe": "611", "cvssVector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "cvssVectorSource": "cve_cvss_2", "deeperData": {"identifier": "CVE-2015-0254", "vulnIds": ["CVE-2015-0254"], "vulnerabilityLink": "http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2015-0254", "source": {"shortName": "CVE", "longName": "National Vulnerability Database"}, "mainSeverity": {"source": "cve_cvss_2", "score": 7.5, "vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P"}, "severityScores": [{"source": "sonatype_cvss_3", "score": 7.3}], "weakness": {"cweSource": "Sonatype", "cweIds": [{"id": "611", "uri": "https://cwe.mitre.org/data/definitions/611.html"}]}, "categories": ["data", "functional"], "description": "Apache Standard Taglibs before 1.2.3 allows remote attackers to execute arbitrary code or conduct external XML entity (XXE) attacks via a crafted XSLT extension in a (1) <x:parse> or (2) <x:transform> JSTL XML tag.", "explanationMarkdown": "Various implementations of JSTL are vulnerable to XML eXternal Entity (XXE) injection. These JSTL implementations do not check the validity of user-supplied data when processing XML. An attacker can exploit this vulnerability by submitting a crafted XML document containing a malicious XSLT extension within an `<x:parse>` or `<x:transform>` JSTL XML tag. The attacker can leverage this vulnerability to obtain sensitive information, create a Denial of Service (DoS) condition, or perform various other attacks within the context of the application.", "detectionMarkdown": "The application is vulnerable by passing untrusted input to this component.", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue.\n\nNote for the fixed version(s):\n```\nThis version uses JAXP's FEATURE_SECURE_PROCESSING to restrict XML processing. Depending on the Java runtime version in use, additional configuration may be required:\nJava8: External entity access is automatically disabled if a SecurityManager is active.\nJava7: JAXP properties may need to be used to disable external access. See http://docs.oracle.com/javase/tutorial/jaxp/properties/properties.html\nJava6 and earlier: A new system property org.apache.taglibs.standard.xml.accessExternalEntity\nmay be used to specify the protocols that can be used to access external entities. This defaults\nto \"all\" if no SecurityManager is present and to \"\" (thereby disabling access) if\na SecurityManager is detected.\n```\nReference: [http://mail-archives.apache.org/mod_mbox/tomcat-taglibs-user/201502.mbox/%3C82207A16-6348-4DEE-877E-F7B87292576A%40apache.org%3E](http://mail-archives.apache.org/mod_mbox/tomcat-taglibs-user/201502.mbox/%3C82207A16-6348-4DEE-877E-F7B87292576A%40apache.org%3E)", "advisories": [{"referenceType": "PROJECT", "url": "http://mail-archives.apache.org/mod_mbox/tomcat-taglibs-user/201502.mbox/%3C82207A16-6348-4DEE-877E-F7B87292576A%40apache.org%3E"}, {"referenceType": "THIRD_PARTY", "url": "http://www.securityfocus.com/archive/1/534772"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}]}, "dependencyData": {"directDependency": true, "innerSource": false}, "remediation": {"versionChanges": [{"type": "next-non-failing", "data": {"component": {"packageUrl": "pkg:maven/javax.servlet/jstl@1.2?type=jar", "hash": null, "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "jstl", "classifier": "", "extension": "jar", "groupId": "javax.servlet", "version": "1.2"}}, "displayName": "javax.servlet : jstl : 1.2"}}}, {"type": "next-non-failing-with-dependencies", "data": {"component": {"packageUrl": "pkg:maven/javax.servlet/jstl@1.2?type=jar", "hash": null, "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "jstl", "classifier": "", "extension": "jar", "groupId": "javax.servlet", "version": "1.2"}}, "displayName": "javax.servlet : jstl : 1.2"}}}]}}, {"packageUrl": "pkg:maven/commons-discovery/commons-discovery@0.2?type=jar", "hash": "7773ac7a7248f08ed2b8", "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "commons-discovery", "classifier": "", "extension": "jar", "groupId": "commons-discovery", "version": "0.2"}}, "displayName": "commons-discovery : commons-discovery : 0.2", "proprietary": false, "matchState": "exact", "pathnames": ["./target/WebGoatLegacy-6.0.1-war-exec.jar/WebGoat.war/WEB-INF/lib/commons-discovery-0.2.jar", "./target/WebGoatLegacy-6.0.1/WEB-INF/lib/commons-discovery-0.2.jar", "WebGoat:WebGoatLegacy:war:6.0.1/commons-discovery:commons-discovery:jar:0.2"], "identificationSource": "Sonatype", "licenseData": {"declaredLicenses": [{"licenseId": "Not-Declared", "licenseName": "Not Declared"}], "observedLicenses": [{"licenseId": "Apache-1.1", "licenseName": "Apache-1.1"}], "effectiveLicenses": [{"licenseId": "Apache-1.1", "licenseName": "Apache-1.1"}], "overriddenLicenses": [], "status": "Open", "effectiveLicenseThreats": [{"licenseThreatGroupName": "Liberal", "licenseThreatGroupLevel": 0, "licenseThreatGroupCategory": "no-threat"}, {"licenseThreatGroupName": "Sonatype Special Licenses", "licenseThreatGroupLevel": 5, "licenseThreatGroupCategory": "severe"}]}, "securityData": {"securityIssues": []}, "dependencyData": {"directDependency": true, "innerSource": false}, "remediation": {"versionChanges": [{"type": "next-non-failing", "data": {"component": {"packageUrl": "pkg:maven/commons-discovery/commons-discovery@0.2?type=jar", "hash": null, "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "commons-discovery", "classifier": "", "extension": "jar", "groupId": "commons-discovery", "version": "0.2"}}, "displayName": "commons-discovery : commons-discovery : 0.2"}}}, {"type": "next-non-failing-with-dependencies", "data": {"component": {"packageUrl": "pkg:maven/commons-discovery/commons-discovery@0.2?type=jar", "hash": null, "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "commons-discovery", "classifier": "", "extension": "jar", "groupId": "commons-discovery", "version": "0.2"}}, "displayName": "commons-discovery : commons-discovery : 0.2"}}}]}}, {"packageUrl": "pkg:maven/org.apache.tiles/tiles-api@2.2.2?type=jar", "hash": "7c4a643772ad37664ae0", "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "tiles-api", "classifier": "", "extension": "jar", "groupId": "org.apache.tiles", "version": "2.2.2"}}, "displayName": "org.apache.tiles : tiles-api : 2.2.2", "proprietary": false, "matchState": "exact", "pathnames": ["./target/WebGoatLegacy-6.0.1-war-exec.jar/WebGoat.war/WEB-INF/lib/tiles-api-2.2.2.jar", "./target/WebGoatLegacy-6.0.1/WEB-INF/lib/tiles-api-2.2.2.jar", "WebGoat:WebGoatLegacy:war:6.0.1/org.apache.tiles:tiles-api:jar:2.2.2"], "identificationSource": "Sonatype", "licenseData": {"declaredLicenses": [{"licenseId": "Apache-2.0", "licenseName": "Apache-2.0"}], "observedLicenses": [{"licenseId": "Apache-2.0", "licenseName": "Apache-2.0"}], "effectiveLicenses": [{"licenseId": "Apache-2.0", "licenseName": "Apache-2.0"}], "overriddenLicenses": [], "status": "Open", "effectiveLicenseThreats": [{"licenseThreatGroupName": "Liberal", "licenseThreatGroupLevel": 0, "licenseThreatGroupCategory": "no-threat"}]}, "securityData": {"securityIssues": []}, "dependencyData": {"directDependency": false, "innerSource": false, "parentComponentPurls": ["pkg:maven/org.apache.tiles/tiles-core@2.2.2?type=jar"]}, "remediation": {"versionChanges": [{"type": "next-non-failing", "data": {"component": {"packageUrl": "pkg:maven/org.apache.tiles/tiles-api@2.2.2?type=jar", "hash": null, "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "tiles-api", "classifier": "", "extension": "jar", "groupId": "org.apache.tiles", "version": "2.2.2"}}, "displayName": "org.apache.tiles : tiles-api : 2.2.2"}}}, {"type": "next-non-failing-with-dependencies", "data": {"component": {"packageUrl": "pkg:maven/org.apache.tiles/tiles-api@2.2.2?type=jar", "hash": null, "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "tiles-api", "classifier": "", "extension": "jar", "groupId": "org.apache.tiles", "version": "2.2.2"}}, "displayName": "org.apache.tiles : tiles-api : 2.2.2"}}}]}}, {"packageUrl": "pkg:a-name/org.webjars%20angular-ui-bootstrap@0.11.0", "hash": "7ed83d6b9c78bf0880d4", "componentIdentifier": {"format": "a-name", "coordinates": {"name": "org.webjars angular-ui-bootstrap", "qualifier": "", "version": "0.11.0"}}, "displayName": "org.webjars angular-ui-bootstrap 0.11.0", "proprietary": false, "matchState": "exact", "pathnames": ["./src/main/webapp/js/angular/ui-bootstrap-tpls-0.11.0.min.js", "./target/WebGoatLegacy-6.0.1-war-exec.jar/WebGoat.war/js/angular/ui-bootstrap-tpls-0.11.0.min.js", "./target/WebGoatLegacy-6.0.1/js/angular/ui-bootstrap-tpls-0.11.0.min.js"], "identificationSource": "Sonatype", "licenseData": {"declaredLicenses": [{"licenseId": "MIT", "licenseName": "MIT"}], "observedLicenses": [{"licenseId": "Not-Supported", "licenseName": "Not Supported"}], "effectiveLicenses": [{"licenseId": "MIT", "licenseName": "MIT"}], "overriddenLicenses": [], "status": "Open", "effectiveLicenseThreats": [{"licenseThreatGroupName": "Liberal", "licenseThreatGroupLevel": 0, "licenseThreatGroupCategory": "no-threat"}, {"licenseThreatGroupName": "Sonatype Informational", "licenseThreatGroupLevel": 0, "licenseThreatGroupCategory": "no-threat"}]}, "securityData": {"securityIssues": [{"source": "sonatype", "reference": "sonatype-2015-0115", "severity": 6.5, "status": "Open", "url": "http://localhost:8070/ui/links/vln/sonatype-2015-0115", "threatCategory": "severe", "cwe": "79", "cvssVector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:N", "cvssVectorSource": "sonatype_cvss_3", "deeperData": {"identifier": "sonatype-2015-0115", "vulnIds": ["sonatype-2015-0115"], "source": {"shortName": "Sonatype", "longName": "Sonatype Data Research"}, "mainSeverity": {"source": "sonatype_cvss_3", "score": 6.5, "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:N"}, "severityScores": [{"source": "cve_cvss_2", "score": 0.0}], "weakness": {"cweSource": "Sonatype", "cweIds": [{"id": "79", "uri": "https://cwe.mitre.org/data/definitions/79.html"}]}, "categories": ["data"], "description": null, "explanationMarkdown": "The `angular-ui-bootstrap` package is vulnerable to Cross-Site Scripting (XSS). The `filter()` function in the `typeahead.js` file uses the `bind-html-unsafe` directive to bind the HTML object to the input data and allows JavaScript code in the `typeahead` search query values. The package makes use of AJAX for suggesting search keywords. The embedded JavaScript code can be returned in the AJAX callback object along with the search suggestions and cause XSS.", "detectionMarkdown": "The application is vulnerable by using this component.", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue.", "advisories": [{"referenceType": "EVIDENCE", "url": "http://plnkr.co/edit/STR8SfgvtUdNopDS5Lam?p=preview"}, {"referenceType": "PROJECT", "url": "https://github.com/angular-ui/bootstrap/issues/3175"}, {"referenceType": "PROJECT", "url": "https://github.com/angular-ui/bootstrap/issues/4181"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}]}, "remediation": {"versionChanges": [{"type": "next-non-failing", "data": {"component": {"packageUrl": "pkg:a-name/org.webjars%20angular-ui-bootstrap@0.11.0", "hash": null, "componentIdentifier": {"format": "a-name", "coordinates": {"name": "org.webjars angular-ui-bootstrap", "qualifier": "", "version": "0.11.0"}}, "displayName": "org.webjars angular-ui-bootstrap 0.11.0"}}}]}}, {"packageUrl": "pkg:a-name/house@0.0.46259", "hash": "80f28c99098f2d5c72a4", "componentIdentifier": {"format": "a-name", "coordinates": {"name": "house", "qualifier": "", "version": "0.0.46259"}}, "displayName": "house 0.0.46259", "proprietary": false, "matchState": "exact", "pathnames": ["./src/main/webapp/js/ace/theme-terminal.js", "./target/WebGoatLegacy-6.0.1-war-exec.jar/WebGoat.war/js/ace/theme-terminal.js", "./target/WebGoatLegacy-6.0.1/js/ace/theme-terminal.js"], "identificationSource": "Sonatype", "licenseData": {"declaredLicenses": [{"licenseId": "Not-Declared", "licenseName": "Not Declared"}], "observedLicenses": [{"licenseId": "Not-Supported", "licenseName": "Not Supported"}], "effectiveLicenses": [{"licenseId": "Not-Declared", "licenseName": "Not Declared"}, {"licenseId": "Not-Supported", "licenseName": "Not Supported"}], "overriddenLicenses": [], "status": "Open", "effectiveLicenseThreats": [{"licenseThreatGroupName": "Sonatype Special Licenses", "licenseThreatGroupLevel": 5, "licenseThreatGroupCategory": "severe"}, {"licenseThreatGroupName": "Sonatype Informational", "licenseThreatGroupLevel": 0, "licenseThreatGroupCategory": "no-threat"}]}, "securityData": {"securityIssues": []}, "remediation": {"versionChanges": [{"type": "next-non-failing", "data": {"component": {"packageUrl": "pkg:a-name/house@0.0.46259", "hash": null, "componentIdentifier": {"format": "a-name", "coordinates": {"name": "house", "qualifier": "", "version": "0.0.46259"}}, "displayName": "house 0.0.46259"}}}]}}, {"packageUrl": "pkg:a-name/mded@0.0.0", "hash": "845c35888693fffb3bba", "componentIdentifier": {"format": "a-name", "coordinates": {"name": "mded", "qualifier": "", "version": "0.0.0"}}, "displayName": "mded 0.0.0", "proprietary": false, "matchState": "exact", "pathnames": ["./src/main/webapp/js/ace/mode-eiffel.js", "./src/main/webapp/js/ace/mode-jsoniq.js", "./target/WebGoatLegacy-6.0.1-war-exec.jar/WebGoat.war/js/ace/mode-eiffel.js", "./target/WebGoatLegacy-6.0.1-war-exec.jar/WebGoat.war/js/ace/mode-jsoniq.js", "./target/WebGoatLegacy-6.0.1/js/ace/mode-eiffel.js", "./target/WebGoatLegacy-6.0.1/js/ace/mode-jsoniq.js"], "identificationSource": "Sonatype", "licenseData": {"declaredLicenses": [{"licenseId": "ISC", "licenseName": "ISC"}], "observedLicenses": [{"licenseId": "Not-Supported", "licenseName": "Not Supported"}], "effectiveLicenses": [{"licenseId": "ISC", "licenseName": "ISC"}], "overriddenLicenses": [], "status": "Open", "effectiveLicenseThreats": [{"licenseThreatGroupName": "Liberal", "licenseThreatGroupLevel": 0, "licenseThreatGroupCategory": "no-threat"}, {"licenseThreatGroupName": "Sonatype Informational", "licenseThreatGroupLevel": 0, "licenseThreatGroupCategory": "no-threat"}]}, "securityData": {"securityIssues": []}, "remediation": {"versionChanges": [{"type": "next-no-violations", "data": {"component": {"packageUrl": "pkg:a-name/mded@0.0.0", "hash": null, "componentIdentifier": {"format": "a-name", "coordinates": {"name": "mded", "qualifier": "", "version": "0.0.0"}}, "displayName": "mded 0.0.0"}}}, {"type": "next-non-failing", "data": {"component": {"packageUrl": "pkg:a-name/mded@0.0.0", "hash": null, "componentIdentifier": {"format": "a-name", "coordinates": {"name": "mded", "qualifier": "", "version": "0.0.0"}}, "displayName": "mded 0.0.0"}}}]}}, {"packageUrl": "pkg:maven/axis/axis@1.2?type=jar", "hash": "892c772f7c486b3c09d2", "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "axis", "classifier": "", "extension": "jar", "groupId": "axis", "version": "1.2"}}, "displayName": "axis : axis : 1.2", "proprietary": false, "matchState": "exact", "pathnames": ["./target/WebGoatLegacy-6.0.1-war-exec.jar/WebGoat.war/WEB-INF/lib/axis-1.2.jar", "./target/WebGoatLegacy-6.0.1/WEB-INF/lib/axis-1.2.jar", "WebGoat:WebGoatLegacy:war:6.0.1/axis:axis:jar:1.2"], "identificationSource": "Sonatype", "licenseData": {"declaredLicenses": [{"licenseId": "Not-Declared", "licenseName": "Not Declared"}], "observedLicenses": [{"licenseId": "Apache-1.1", "licenseName": "Apache-1.1"}, {"licenseId": "Apache-2.0", "licenseName": "Apache-2.0"}], "effectiveLicenses": [{"licenseId": "Apache-1.1", "licenseName": "Apache-1.1"}, {"licenseId": "Apache-2.0", "licenseName": "Apache-2.0"}], "overriddenLicenses": [], "status": "Open", "effectiveLicenseThreats": [{"licenseThreatGroupName": "Liberal", "licenseThreatGroupLevel": 0, "licenseThreatGroupCategory": "no-threat"}, {"licenseThreatGroupName": "Sonatype Special Licenses", "licenseThreatGroupLevel": 5, "licenseThreatGroupCategory": "severe"}]}, "securityData": {"securityIssues": [{"source": "cve", "reference": "CVE-2007-2353", "severity": 5.0, "status": "Open", "url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2007-2353", "threatCategory": "severe", "cwe": "200", "cvssVector": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "cvssVectorSource": "cve_cvss_2", "deeperData": {"identifier": "CVE-2007-2353", "vulnIds": ["CVE-2007-2353"], "vulnerabilityLink": "http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2007-2353", "source": {"shortName": "CVE", "longName": "National Vulnerability Database"}, "mainSeverity": {"source": "cve_cvss_2", "score": 5.0, "vector": "AV:N/AC:L/Au:N/C:P/I:N/A:N"}, "severityScores": [{"source": "sonatype_cvss_3", "score": 7.5}], "weakness": {"cweSource": "CVE", "cweIds": [{"id": "200", "uri": "https://cwe.mitre.org/data/definitions/200.html"}]}, "categories": ["data"], "description": "Apache Axis 1.0 allows remote attackers to obtain sensitive information by requesting a non-existent WSDL file, which reveals the installation path in the resulting exception message.", "explanationMarkdown": "Apache Axis returns the complete installation path as part of the error information when the user requests for nonexistent WSDL. A remote attacker can use this information to conduct further attacks. \n\nExample:\n\nRequesting the below URL will generate an error message as shown below:\n```\nhttp://[target]/axis/tt_pm4l.jws?wsdl\n```\n```\nAXIS error\nSorry, something seems to have gone wrong... here are the details:\n\nFault - java.io.FileNotFoundException:\nc:\\inetpub\\wwwroot\\axis\\tt_pm4l.jws (No such file or directory)\n\nAxisFault\n  faultCode: {http://xml.apache.org/axis/}Server.userException\n  faultString: java.io.FileNotFoundException:\nc:\\inetpub\\wwwroot\\axis\\tt_pm4l.jws (No such file or directory)\n  faultActor: null\n  faultDetail:\n         stackTrace: java.io.FileNotFoundException:\nc:\\inetpub\\wwwroot\\axis\\tt_pm4l.jws (No such file or directory)\n```\nReference link: http://attrition.org/pipermail/vim/2007-April/001562.html", "detectionMarkdown": "The application is vulnerable by using this component.", "recommendationMarkdown": "There is no non-vulnerable version of this component. We recommend investigating alternative components or potential mitigating control.", "advisories": [{"referenceType": "ATTACK", "url": "http://attrition.org/pipermail/vim/2007-April/001562.html"}, {"referenceType": "ATTACK", "url": "https://www.exploit-db.com/exploits/29930/"}, {"referenceType": "THIRD_PARTY", "url": "https://access.redhat.com/security/cve/cve-2007-2353"}, {"referenceType": "THIRD_PARTY", "url": "https://www.securityfocus.com/bid/23687/info"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "cve", "reference": "CVE-2012-5784", "severity": 5.8, "status": "Open", "url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2012-5784", "threatCategory": "severe", "cwe": "20", "cvssVector": "AV:N/AC:M/Au:N/C:P/I:P/A:N", "cvssVectorSource": "cve_cvss_2", "deeperData": {"identifier": "CVE-2012-5784", "vulnIds": ["CVE-2012-5784"], "vulnerabilityLink": "http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2012-5784", "source": {"shortName": "CVE", "longName": "National Vulnerability Database"}, "mainSeverity": {"source": "cve_cvss_2", "score": 5.8, "vector": "AV:N/AC:M/Au:N/C:P/I:P/A:N"}, "severityScores": [{"source": "sonatype_cvss_3", "score": 4.2}], "weakness": {"cweSource": "CVE", "cweIds": [{"id": "20", "uri": "https://cwe.mitre.org/data/definitions/20.html"}]}, "categories": ["data", "functional", "operational"], "description": "Apache Axis 1.4 and earlier, as used in PayPal Payments Pro, PayPal Mass Pay, PayPal Transactional Information SOAP, the Java Message Service implementation in Apache ActiveMQ, and other products, does not verify that the server hostname matches a domain name in the subject's Common Name (CN) or subjectAltName field of the X.509 certificate, which allows man-in-the-middle attackers to spoof SSL servers via an arbitrary valid certificate.", "explanationMarkdown": "Apache Axis is prone to a security-bypass vulnerability as it fails to verify if the server hostname matches the domain name in the subject's Common Name (CN) or subjectAltName field of the X.509 certificate, which allows a man-in-the middle attacker to spoof SSL servers through an arbitrary SSL certificate that are valid for any other domain.", "detectionMarkdown": "You are vulnerable by using this component.", "recommendationMarkdown": "The project `axis:axis` has been retired and replaced by `org.apache.axis2:axis2`. We recommend investigating an upgrade to a non vulnerable version of `org.apache.axis2:axis2`.", "advisories": [{"referenceType": "THIRD_PARTY", "url": "https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2012-5784"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "cve", "reference": "CVE-2014-3596", "severity": 5.8, "status": "Open", "url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2014-3596", "threatCategory": "severe", "cwe": "297", "cvssVector": "AV:N/AC:M/Au:N/C:P/I:P/A:N", "cvssVectorSource": "cve_cvss_2", "deeperData": {"identifier": "CVE-2014-3596", "vulnIds": ["CVE-2014-3596"], "vulnerabilityLink": "http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2014-3596", "source": {"shortName": "CVE", "longName": "National Vulnerability Database"}, "mainSeverity": {"source": "cve_cvss_2", "score": 5.8, "vector": "AV:N/AC:M/Au:N/C:P/I:P/A:N"}, "severityScores": [{"source": "sonatype_cvss_3", "score": 5.9}], "weakness": {"cweSource": "CVE", "cweIds": [{"id": "Other", "uri": "https://cwe.mitre.org/data/definitions/Other.html"}]}, "categories": ["configuration", "data", "functional"], "description": "The getCN function in Apache Axis 1.4 and earlier does not properly verify that the server hostname matches a domain name in the subject's Common Name (CN) or subjectAltName field of the X.509 certificate, which allows man-in-the-middle attackers to spoof SSL servers via a certificate with a subject that specifies a common name in a field that is not the CN field. NOTE: this issue exists because of an incomplete fix for CVE-2012-5784.", "explanationMarkdown": "Apache Axis is vulnerable to Improper Validation of Certificate with Host Mismatch. The `getCN` function in the `JSSESocketFactory` class does not properly verify that the server hostname matches a domain name in the subject's Common Name (CN) or `subjectAltName` field of the X.509 certificate, which allows Man-in-the-Middle (MitM) attackers to spoof SSL servers via a certificate with a subject that specifies a common name in a field that is not the CN field.\n\nNOTE: This issue exists because of an incomplete fix for CVE-2012-5784.", "detectionMarkdown": "The application is vulnerable by using this component.", "recommendationMarkdown": "The project `axis:axis` has been retired and replaced by `org.apache.axis2:axis2`. We recommend investigating an upgrade to a non vulnerable version of `org.apache.axis2:axis2`.", "advisories": [{"referenceType": "PROJECT", "url": "https://issues.apache.org/jira/browse/AXIS-2905"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "cve", "reference": "CVE-2019-0227", "severity": 7.5, "status": "Open", "url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0227", "threatCategory": "critical", "cwe": "918", "cvssVector": "CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H", "cvssVectorSource": "cve_cvss_3", "deeperData": {"identifier": "CVE-2019-0227", "vulnIds": ["CVE-2019-0227"], "vulnerabilityLink": "http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2019-0227", "source": {"shortName": "CVE", "longName": "National Vulnerability Database"}, "mainSeverity": {"source": "cve_cvss_3", "score": 7.5, "vector": "CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H"}, "severityScores": [{"source": "cve_cvss_2", "score": 5.4}, {"source": "sonatype_cvss_3", "score": 7.5}], "weakness": {"cweSource": "CVE", "cweIds": [{"id": "918", "uri": "https://cwe.mitre.org/data/definitions/918.html"}]}, "categories": ["data"], "description": "A Server Side Request Forgery (SSRF) vulnerability affected the Apache Axis 1.4 distribution that was last released in 2006. Security and bug commits commits continue in the projects Axis 1.x Subversion repository, legacy users are encouraged to build from source. The successor to Axis 1.x is Axis2, the latest version is 1.7.9 and is not vulnerable to this issue.", "explanationMarkdown": "The axis package is vulnerable to Xml eXternal Entity injection. The `getInputSourceFromURI` method in `XMLUtils.class` follows redirects when attempting to retrieve XML data. An attacker could potentially leverage this behavior to execute XXE related attacks such as Server Side Request Forgery (SSRF). In the context of Apache Axis, SSRF can be leveraged to get Remote Code Execution (RCE) on an effected server.", "detectionMarkdown": "The application is vulnerable by using this component. The published attack used a demo web service called `StockQuoteService.jws` to exploit this behavior, so the vulnerability as written is not exploitable if that file is not present. It is important to note that theoretically any insecure HTTP requests to untrusted servers for XML could result in exploitation.", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue.", "advisories": [{"referenceType": "THIRD_PARTY", "url": "https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=929266"}, {"referenceType": "THIRD_PARTY", "url": "https://github.com/RhinoSecurityLabs/CVEs/issues/1"}, {"referenceType": "THIRD_PARTY", "url": "https://rhinosecuritylabs.com/application-security/cve-2019-0227-expired-domain-rce-apache-axis/"}, {"referenceType": "THIRD_PARTY", "url": "https://www.ambionics.io/blog/oracle-peoplesoft-xxe-to-rce"}, {"referenceType": "THIRD_PARTY", "url": "https://www.exploit-db.com/exploits/46682"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}]}, "dependencyData": {"directDependency": true, "innerSource": false}, "remediation": {"versionChanges": [{"type": "next-non-failing", "data": {"component": {"packageUrl": "pkg:maven/axis/axis@1.2?type=jar", "hash": null, "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "axis", "classifier": "", "extension": "jar", "groupId": "axis", "version": "1.2"}}, "displayName": "axis : axis : 1.2"}}}, {"type": "next-non-failing-with-dependencies", "data": {"component": {"packageUrl": "pkg:maven/axis/axis@1.2?type=jar", "hash": null, "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "axis", "classifier": "", "extension": "jar", "groupId": "axis", "version": "1.2"}}, "displayName": "axis : axis : 1.2"}}}]}}, {"packageUrl": "pkg:maven/org.springframework/spring-web@3.2.4.RELEASE?type=jar", "hash": "8daf0bd1172cb253d936", "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "spring-web", "classifier": "", "extension": "jar", "groupId": "org.springframework", "version": "3.2.4.RELEASE"}}, "displayName": "org.springframework : spring-web : 3.2.4.RELEASE", "proprietary": false, "matchState": "exact", "pathnames": ["./target/WebGoatLegacy-6.0.1-war-exec.jar/WebGoat.war/WEB-INF/lib/spring-web-3.2.4.RELEASE.jar", "./target/WebGoatLegacy-6.0.1/WEB-INF/lib/spring-web-3.2.4.RELEASE.jar", "WebGoat:WebGoatLegacy:war:6.0.1/org.springframework:spring-web:jar:3.2.4.RELEASE"], "identificationSource": "Sonatype", "licenseData": {"declaredLicenses": [{"licenseId": "Apache-2.0", "licenseName": "Apache-2.0"}], "observedLicenses": [{"licenseId": "Apache-2.0", "licenseName": "Apache-2.0"}], "effectiveLicenses": [{"licenseId": "Apache-2.0", "licenseName": "Apache-2.0"}], "overriddenLicenses": [], "status": "Open", "effectiveLicenseThreats": [{"licenseThreatGroupName": "Liberal", "licenseThreatGroupLevel": 0, "licenseThreatGroupCategory": "no-threat"}]}, "securityData": {"securityIssues": [{"source": "cve", "reference": "CVE-2013-6429", "severity": 6.8, "status": "Open", "url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2013-6429", "threatCategory": "severe", "cwe": "352", "cvssVector": "AV:N/AC:M/Au:N/C:P/I:P/A:P", "cvssVectorSource": "cve_cvss_2", "deeperData": {"identifier": "CVE-2013-6429", "vulnIds": ["CVE-2013-6429"], "vulnerabilityLink": "http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2013-6429", "source": {"shortName": "CVE", "longName": "National Vulnerability Database"}, "mainSeverity": {"source": "cve_cvss_2", "score": 6.8, "vector": "AV:N/AC:M/Au:N/C:P/I:P/A:P"}, "severityScores": [{"source": "sonatype_cvss_3", "score": 9.1}], "weakness": {"cweSource": "CVE", "cweIds": [{"id": "352", "uri": "https://cwe.mitre.org/data/definitions/352.html"}, {"id": "611", "uri": "https://cwe.mitre.org/data/definitions/611.html"}]}, "categories": ["data", "operational"], "description": "The SourceHttpMessageConverter in Spring MVC in Spring Framework before 3.2.5 and 4.0.0.M1 through 4.0.0.RC1 does not disable external entity resolution, which allows remote attackers to read arbitrary files, cause a denial of service, and conduct CSRF attacks via crafted XML, aka an XML External Entity (XXE) issue, and a different vulnerability than CVE-2013-4152 and CVE-2013-7315.", "explanationMarkdown": "Spring Framework is vulnerable to XML eXternal Entity attacks (XXE) due to an incomplete fix for CVE-2013-7315. The 'readFromSource()` method in the `SourceHttpMessageConverter` class continues to allow the SourceHttpMessageConverter class to process XML External Entities which can be leveraged to cause a Denial of Service (DoS), access arbitrary files, or conduct Server-Side Request Forgery (SSRF) attacks.", "detectionMarkdown": "The application is vulnerable by using this component.", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue.", "advisories": [{"referenceType": "PROJECT", "url": "https://jira.spring.io/browse/SPR-11078"}, {"referenceType": "THIRD_PARTY", "url": "https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2013-6429"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "cve", "reference": "CVE-2014-0054", "severity": 6.8, "status": "Open", "url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2014-0054", "threatCategory": "severe", "cwe": "352", "cvssVector": "AV:N/AC:M/Au:N/C:P/I:P/A:P", "cvssVectorSource": "cve_cvss_2", "deeperData": {"identifier": "CVE-2014-0054", "vulnIds": ["CVE-2014-0054"], "vulnerabilityLink": "http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2014-0054", "source": {"shortName": "CVE", "longName": "National Vulnerability Database"}, "mainSeverity": {"source": "cve_cvss_2", "score": 6.8, "vector": "AV:N/AC:M/Au:N/C:P/I:P/A:P"}, "severityScores": [{"source": "sonatype_cvss_3", "score": 6.3}], "weakness": {"cweSource": "CVE", "cweIds": [{"id": "352", "uri": "https://cwe.mitre.org/data/definitions/352.html"}]}, "categories": ["data", "functional"], "description": "The Jaxb2RootElementHttpMessageConverter in Spring MVC in Spring Framework before 3.2.8 and 4.0.0 before 4.0.2 does not disable external entity resolution, which allows remote attackers to read arbitrary files, cause a denial of service, and conduct CSRF attacks via crafted XML, aka an XML External Entity (XXE) issue.  NOTE: this vulnerability exists because of an incomplete fix for CVE-2013-4152, CVE-2013-7315, and CVE-2013-6429.", "explanationMarkdown": "The Spring Framework is vulnerable to XML eXternal Entity (XXE) expansion attacks.  The `Jaxb2RootElementHttpMessageConverter` class allows external DTDs to define arbitrary XML entities.  A malicious user can exploit this with an XML file to conduct Server-Side Request Forgery (SSRF) and other XXE related exploits.\n\nPlease note that this vulnerability is due to an incomplete fix for  CVE-2013-4152, CVE-2013-7315, and CVE-2013-6429.", "detectionMarkdown": "The application is vulnerable if using this component to process untrusted or user supplied XML data using the `Jaxb2RootElementHttpMessageConverter` class in combination with the `XmlRootElemenent` or `XmlType` annotations.", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue.", "advisories": [{"referenceType": "PROJECT", "url": "https://jira.spring.io/browse/SPR-11376"}, {"referenceType": "PROJECT", "url": "https://pivotal.io/security/cve-2014-0054"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "cve", "reference": "CVE-2014-0225", "severity": 8.8, "status": "Open", "url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2014-0225", "threatCategory": "critical", "cwe": "611", "cvssVector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H", "cvssVectorSource": "cve_cvss_3", "deeperData": {"identifier": "CVE-2014-0225", "vulnIds": ["CVE-2014-0225"], "vulnerabilityLink": "http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2014-0225", "source": {"shortName": "CVE", "longName": "National Vulnerability Database"}, "mainSeverity": {"source": "cve_cvss_3", "score": 8.8, "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H"}, "severityScores": [{"source": "cve_cvss_2", "score": 6.8}, {"source": "sonatype_cvss_3", "score": 4.3}], "weakness": {"cweSource": "CVE", "cweIds": [{"id": "611", "uri": "https://cwe.mitre.org/data/definitions/611.html"}]}, "categories": ["operational"], "description": "When processing user provided XML documents, the Spring Framework 4.0.0 to 4.0.4, 3.0.0 to 3.2.8, and possibly earlier unsupported versions did not disable by default the resolution of URI references in a DTD declaration. This enabled an XXE attack.", "explanationMarkdown": "The Spring Framework does not disable XML external entities by default, which a remote attacker can leverage to gather information on the internal network to further future attacks.", "detectionMarkdown": "You are vulnerable if using this component with untrusted network traffic.", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue.", "advisories": [{"referenceType": "PROJECT", "url": "https://jira.spring.io/browse/SPR-11768"}, {"referenceType": "PROJECT", "url": "https://pivotal.io/security/cve-2014-0225"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "cve", "reference": "CVE-2015-3192", "severity": 5.5, "status": "Open", "url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2015-3192", "threatCategory": "severe", "cwe": "119", "cvssVector": "CVSS:3.0/AV:L/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H", "cvssVectorSource": "cve_cvss_3", "deeperData": {"identifier": "CVE-2015-3192", "vulnIds": ["CVE-2015-3192"], "vulnerabilityLink": "http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2015-3192", "source": {"shortName": "CVE", "longName": "National Vulnerability Database"}, "mainSeverity": {"source": "cve_cvss_3", "score": 5.5, "vector": "CVSS:3.0/AV:L/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H"}, "severityScores": [{"source": "cve_cvss_2", "score": 4.3}, {"source": "sonatype_cvss_3", "score": 5.5}], "weakness": {"cweSource": "CVE", "cweIds": [{"id": "119", "uri": "https://cwe.mitre.org/data/definitions/119.html"}]}, "categories": ["data"], "description": "Pivotal Spring Framework before 3.2.14 and 4.x before 4.1.7 do not properly process inline DTD declarations when DTD is not entirely disabled, which allows remote attackers to cause a denial of service (memory consumption and out-of-memory errors) via a crafted XML file.", "explanationMarkdown": "The Spring framework is vulnerable to a Denial of Service (DoS) attack, as it allows parsing of inline Document Type Definition (DTD) declarations within external XML files. Internally, when the Spring framework sets up the parser for processing XML data from external sources, it does so in an insecure pattern by default, allowing processing of malicious DTDs. A remote attacker can exploit the vulnerability by crafting an XML file with nested DTD declarations which form an XML bomb attack and cause Denial of Service (DoS) when processed by the XML parser.\n\nThe link [https://www.soapui.org/security-testing/security-scans/xml-bomb.html](https://www.soapui.org/security-testing/security-scans/xml-bomb.html) contains an example payload for an XML Bomb.", "detectionMarkdown": "The application is vulnerable by using this component to process untrusted XML input with DTDs and DTD support has not been completely disabled by setting all of the following:\n\n`disallow-doctype-dec` feature to `true` in the DOM API\n`disallow-doctype-dec` feature to `true` in the SAX API\n`supportDTD` property to `false` in the StAX API\n\n\n\"Note that further actions may need to be taken by applications in particular where use of StAX is concerned. For example IBM JDK 1.6 and 1.7 require an environment variable in addition to setting supportDTD=false (see IBM JDK reference). Moreover we've found that supportDTD alone does not protect against all kinds of DoS attacks with JDK JAXP implementations. Hence we recommend using the Woodstox open source library for StAX parsing.\"\nReference: [https://pivotal.io/security/cve-2015-3192](https://pivotal.io/security/cve-2015-3192)", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue.\n\n\"In addition, applications that consume XML input via StAX from external sources should also use and/or upgrade to a recent version of the Woodstox library, e.g. version 4.2+ (4.2.1 is the currently curated version in the Spring IO Platform).\"\nReference: [https://pivotal.io/security/cve-2015-3192](https://pivotal.io/security/cve-2015-3192)", "advisories": [{"referenceType": "PROJECT", "url": "http://pivotal.io/security/cve-2015-3192"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "cve", "reference": "CVE-2016-1000027", "severity": 9.8, "status": "Open", "url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2016-1000027", "threatCategory": "critical", "cwe": "502", "cvssVector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H", "cvssVectorSource": "cve_cvss_3", "deeperData": {"identifier": "CVE-2016-1000027", "vulnIds": ["CVE-2016-1000027"], "vulnerabilityLink": "http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2016-1000027", "source": {"shortName": "CVE", "longName": "National Vulnerability Database"}, "mainSeverity": {"source": "cve_cvss_3", "score": 9.8, "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"}, "severityScores": [{"source": "cve_cvss_2", "score": 7.5}, {"source": "sonatype_cvss_3", "score": 9.8}], "weakness": {"cweSource": "CVE", "cweIds": [{"id": "502", "uri": "https://cwe.mitre.org/data/definitions/502.html"}]}, "categories": ["data", "functional"], "description": "Pivotal Spring Framework through 5.3.16 suffers from a potential remote code execution (RCE) issue if used for Java deserialization of untrusted data. Depending on how the library is implemented within a product, this issue may or not occur, and authentication may be required. NOTE: the vendor's position is that untrusted data is not an intended use case. The product's behavior will not be changed because some users rely on deserialization of trusted data.", "explanationMarkdown": "The `org.springframework:spring-web` package is vulnerable to deserialization of untrusted data leading to Remote Code Execution (RCE). The `readRemoteInvocation()` method in `HttpInvokerServiceExporter.class` does not properly verify or restrict untrusted objects prior to deserializing them. An attacker can exploit this vulnerability by sending malicious requests containing crafted objects, which when deserialized, execute arbitrary code on the vulnerable system.\n\n*NOTE:* This vulnerability is related to a previously reported deserialization vulnerability (CVE-2011-2894) within the package, impacting a different class.", "detectionMarkdown": "The application is vulnerable by using this component under specific scenarios as listed out in the [advisory](https://www.tenable.com/security/research/tra-2016-20).", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue.\n\nA warning has been provided in the official [Javadocs](https://docs.spring.io/spring-framework/docs/5.3.x/javadoc-api/org/springframework/remoting/httpinvoker/HttpInvokerServiceExporter.html) of the `HttpInvokerServiceExporter` class and support for several serialization-based remoting technologies including this class has been deprecated from 5.3.0 onwards and completely removed from 6.0.0 and onwards:\n\n>WARNING: Be aware of vulnerabilities due to unsafe Java deserialization: Manipulated input streams could lead to unwanted code execution on the server during the deserialization step. As a consequence, do not expose HTTP invoker endpoints to untrusted clients but rather just between your own services. In general, we strongly recommend any other message format (e.g. JSON) instead.\n\nThe developer's general advice also states:\n>Do not use Java serialization for external endpoints, in particular not for unauthorized ones. HTTP invoker is not a well-kept secret (or an \"oversight\") but rather the typical case of how a Spring application would expose serialization endpoints to begin with... he has a point that we should make this case all across our documentation, including the javadoc. But I don't really see a CVE case here, just a documentation improvement.\n>\n>Pivotal will enhance their documentation for the 4.2.6 and 3.2.17 releases.\n\nReference: [https://www.tenable.com/security/research/tra-2016-20](https://www.tenable.com/security/research/tra-2016-20)\n\nNote: If this component is included as a bundled/transitive dependency of another component, there may not be an upgrade path. In this instance, we recommend contacting the maintainers who included the vulnerable package. Alternatively, we recommend investigating alternative components or a potential mitigating control.", "advisories": [{"referenceType": "PROJECT", "url": "https://github.com/spring-projects/spring-framework/issues/24434"}, {"referenceType": "THIRD_PARTY", "url": "https://blog.gypsyengineer.com/en/security/detecting-dangerous-spring-exporters-with-codeql.html"}, {"referenceType": "THIRD_PARTY", "url": "https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2016-1000027"}, {"referenceType": "THIRD_PARTY", "url": "https://www.tenable.com/security/research/tra-2016-20"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "cve", "reference": "CVE-2018-11039", "severity": 5.9, "status": "Open", "url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-11039", "threatCategory": "severe", "cwe": "79", "cvssVector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N", "cvssVectorSource": "cve_cvss_3", "deeperData": {"identifier": "CVE-2018-11039", "vulnIds": ["CVE-2018-11039"], "vulnerabilityLink": "http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2018-11039", "source": {"shortName": "CVE", "longName": "National Vulnerability Database"}, "mainSeverity": {"source": "cve_cvss_3", "score": 5.9, "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N"}, "severityScores": [{"source": "cve_cvss_2", "score": 4.3}, {"source": "sonatype_cvss_3", "score": 5.3}], "weakness": {"cweSource": "Sonatype", "cweIds": [{"id": "79", "uri": "https://cwe.mitre.org/data/definitions/79.html"}]}, "categories": ["data", "functional"], "description": "Spring Framework (versions 5.0.x prior to 5.0.7, versions 4.3.x prior to 4.3.18, and older unsupported versions) allow web applications to change the HTTP request method to any HTTP method (including TRACE) using the HiddenHttpMethodFilter in Spring MVC. If an application has a pre-existing XSS vulnerability, a malicious user (or attacker) can use this filter to escalate to an XST (Cross Site Tracing) attack.", "explanationMarkdown": "Spring Framework is vulnerable to Cross-Site Tracing (XST) attacks. The `HiddenHttpMethodFilter` class lets an attacker change the HTTP request method to `TRACE`. An attacker can exploit this behavior with an Cross-Site Scripting (XSS) attack by sending a TRACE request and recovering information that would not normally be accessible, such as Cookies with the HTTPOnly flag.", "detectionMarkdown": "The application is vulnerable by using this component if the application:\n\"[Uses] the HiddenHttpMethodFilter (it is enabled by default in Spring Boot), [and]\n [Allows] HTTP TRACE requests to be handled by the application server\n This attack is not exploitable directly because an attacker would have to make a cross-domain request via HTTP POST, which is forbidden by the Same Origin Policy. This is why a pre-existing XSS (Cross Site Scripting) vulnerability in the web application \n itself is necessary to enable an escalation to XST.\"\n\nReference: https://pivotal.io/security/cve-2018-11039", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue. If upgrading is not possible, it is recommended that the use of `HiddenHttpMethodFilter` be disabled and that HTTP TRACE requests are not allowed.", "advisories": [{"referenceType": "PROJECT", "url": "https://jira.spring.io/browse/SPR-16836"}, {"referenceType": "PROJECT", "url": "https://pivotal.io/security/cve-2018-11039"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "cve", "reference": "CVE-2018-1272", "severity": 7.5, "status": "Open", "url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-1272", "threatCategory": "critical", "cwe": "264", "cvssVector": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:H/I:H/A:H", "cvssVectorSource": "cve_cvss_3", "deeperData": {"identifier": "CVE-2018-1272", "vulnIds": ["CVE-2018-1272"], "vulnerabilityLink": "http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2018-1272", "source": {"shortName": "CVE", "longName": "National Vulnerability Database"}, "mainSeverity": {"source": "cve_cvss_3", "score": 7.5, "vector": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:H/I:H/A:H"}, "severityScores": [{"source": "cve_cvss_2", "score": 6.0}, {"source": "sonatype_cvss_3", "score": 5.3}], "weakness": {"cweSource": "Sonatype", "cweIds": [{"id": "264", "uri": "https://cwe.mitre.org/data/definitions/264.html"}]}, "categories": ["data"], "description": "Spring Framework, versions 5.0 prior to 5.0.5 and versions 4.3 prior to 4.3.15 and older unsupported versions, provide client-side support for multipart requests. When Spring MVC or Spring WebFlux server application (server A) receives input from a remote client, and then uses that input to make a multipart request to another server (server B), it can be exposed to an attack, where an extra multipart is inserted in the content of the request from server A, causing server B to use the wrong value for a part it expects. This could to lead privilege escalation, for example, if the part content represents a username or user roles.", "explanationMarkdown": "The `spring-core` and `spring-web` modules of Spring Framework are vulnerable to a multipart content pollution vulnerability.  The `generateMultipartBoundary()` method in the `MimeTypeUtils` class uses a predictable method of generating random values to use as boundary values for multipart requests to other servers.  This means that an attacker may be able to predict the boundary values and inject them into requests at unexpected locations, causing the recipient server to incorrectly interpret the multipart request.  This will result in unexpected behavior depending on the requests being processed, including privilege escalation if authorization data is sent in the multipart request.\r\n\r\nNote:\r\n> In order for the attacker to succeed, they would have to be able to guess the multipart boundary value chosen by server A for the multipart request to server B, which requires the attacker to also have control of the server or the ability to see the HTTP log of server A through a separate attack vector.\r\n\r\nReference: [https://pivotal.io/security/cve-2018-1272](https://pivotal.io/security/cve-2018-1272)", "detectionMarkdown": "The application is vulnerable by using this component.", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue.", "advisories": [{"referenceType": "PROJECT", "url": "https://access.redhat.com/security/cve/cve-2018-1272"}, {"referenceType": "PROJECT", "url": "https://jira.spring.io/browse/SPR-16635"}, {"referenceType": "PROJECT", "url": "https://pivotal.io/security/cve-2018-1272"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "cve", "reference": "CVE-2020-5421", "severity": 6.5, "status": "Open", "url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-5421", "threatCategory": "severe", "cwe": "20", "cvssVector": "CVSS:3.1/AV:N/AC:H/PR:L/UI:R/S:C/C:L/I:H/A:N", "cvssVectorSource": "cve_cvss_3", "deeperData": {"identifier": "CVE-2020-5421", "vulnIds": ["CVE-2020-5421"], "vulnerabilityLink": "http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2020-5421", "source": {"shortName": "CVE", "longName": "National Vulnerability Database"}, "mainSeverity": {"source": "cve_cvss_3", "score": 6.5, "vector": "CVSS:3.1/AV:N/AC:H/PR:L/UI:R/S:C/C:L/I:H/A:N"}, "severityScores": [{"source": "cve_cvss_2", "score": 3.6}, {"source": "sonatype_cvss_3", "score": 8.7}], "weakness": {"cweSource": "CVE", "cweIds": [{"id": "noinfo", "uri": "https://cwe.mitre.org/data/definitions/noinfo.html"}]}, "categories": ["data", "operational"], "description": "In Spring Framework versions 5.2.0 - 5.2.8, 5.1.0 - 5.1.17, 5.0.0 - 5.0.18, 4.3.0 - 4.3.28, and older unsupported versions, the protections against RFD attacks from CVE-2015-5211 may be bypassed depending on the browser used through the use of a jsessionid path parameter.", "explanationMarkdown": "The `spring-web` package is vulnerable to Improper Input Validation. The `parseMatrixVariables()` method in the `WebUtils` class and the `removeJsessionid()` method in the `UrlPathHelper` class process the `jsessionid` path parameter in a manner that allows for Reflected File Download (RFD) via certain browsers. A remote attacker can exploit this vulnerability by crafting a URL that leverages the `jsessionid` path parameter to embed malicious script content or commands into the response to be downloaded. The attacker can then entice a victim into submitting the request. Upon submitting the request, the victim's browser will download the response to a file generated on-the-fly by their browser, with an attacker-specified name and extension (if the `Content-Disposition` header in the response is derived from the URL), and injected malicious contents.\n\nNote: This vulnerability exists, in part, due to an insufficient fix for CVE-2015-5211.", "detectionMarkdown": "The application is vulnerable by using this component.", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue.\n\nNote: If this component is included as a bundled/transitive dependency of another component, there may not be an upgrade path. In this instance, we recommend contacting the maintainers who included the vulnerable package. Alternatively, we recommend investigating alternative components or a potential mitigating control.", "advisories": [{"referenceType": "THIRD_PARTY", "url": "https://tanzu.vmware.com/security/cve-2020-5421"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}]}, "dependencyData": {"directDependency": false, "innerSource": false, "parentComponentPurls": ["pkg:maven/org.springframework/spring-webmvc@3.2.4.RELEASE?type=jar"]}, "remediation": {"versionChanges": [{"type": "next-no-violations", "data": {"component": {"packageUrl": "pkg:maven/org.springframework/spring-web@6.0.0?type=jar", "hash": null, "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "spring-web", "classifier": "", "extension": "jar", "groupId": "org.springframework", "version": "6.0.0"}}, "displayName": "org.springframework : spring-web : 6.0.0"}}}, {"type": "next-non-failing", "data": {"component": {"packageUrl": "pkg:maven/org.springframework/spring-web@3.2.4.RELEASE?type=jar", "hash": null, "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "spring-web", "classifier": "", "extension": "jar", "groupId": "org.springframework", "version": "3.2.4.RELEASE"}}, "displayName": "org.springframework : spring-web : 3.2.4.RELEASE"}}}, {"type": "next-no-violations-with-dependencies", "data": {"component": {"packageUrl": "pkg:maven/org.springframework/spring-web@6.0.0?type=jar", "hash": null, "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "spring-web", "classifier": "", "extension": "jar", "groupId": "org.springframework", "version": "6.0.0"}}, "displayName": "org.springframework : spring-web : 6.0.0"}}}, {"type": "next-non-failing-with-dependencies", "data": {"component": {"packageUrl": "pkg:maven/org.springframework/spring-web@3.2.4.RELEASE?type=jar", "hash": null, "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "spring-web", "classifier": "", "extension": "jar", "groupId": "org.springframework", "version": "3.2.4.RELEASE"}}, "displayName": "org.springframework : spring-web : 3.2.4.RELEASE"}}}]}}, {"packageUrl": "pkg:maven/org.apache.commons/commons-lang3@3.3.2?type=jar", "hash": "90a3822c38ec8c996e84", "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "commons-lang3", "classifier": "", "extension": "jar", "groupId": "org.apache.commons", "version": "3.3.2"}}, "displayName": "org.apache.commons : commons-lang3 : 3.3.2", "proprietary": false, "matchState": "exact", "pathnames": ["./target/WebGoatLegacy-6.0.1-war-exec.jar/WebGoat.war/WEB-INF/lib/commons-lang3-3.3.2.jar", "./target/WebGoatLegacy-6.0.1/WEB-INF/lib/commons-lang3-3.3.2.jar", "WebGoat:WebGoatLegacy:war:6.0.1/org.apache.commons:commons-lang3:jar:3.3.2"], "identificationSource": "Sonatype", "licenseData": {"declaredLicenses": [{"licenseId": "Apache-2.0", "licenseName": "Apache-2.0"}], "observedLicenses": [{"licenseId": "Apache-2.0", "licenseName": "Apache-2.0"}], "effectiveLicenses": [{"licenseId": "Apache-2.0", "licenseName": "Apache-2.0"}], "overriddenLicenses": [], "status": "Open", "effectiveLicenseThreats": [{"licenseThreatGroupName": "Liberal", "licenseThreatGroupLevel": 0, "licenseThreatGroupCategory": "no-threat"}]}, "securityData": {"securityIssues": []}, "dependencyData": {"directDependency": true, "innerSource": false}, "remediation": {"versionChanges": [{"type": "next-no-violations", "data": {"component": {"packageUrl": "pkg:maven/org.apache.commons/commons-lang3@3.8?type=jar", "hash": null, "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "commons-lang3", "classifier": "", "extension": "jar", "groupId": "org.apache.commons", "version": "3.8"}}, "displayName": "org.apache.commons : commons-lang3 : 3.8"}}}, {"type": "next-non-failing", "data": {"component": {"packageUrl": "pkg:maven/org.apache.commons/commons-lang3@3.3.2?type=jar", "hash": null, "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "commons-lang3", "classifier": "", "extension": "jar", "groupId": "org.apache.commons", "version": "3.3.2"}}, "displayName": "org.apache.commons : commons-lang3 : 3.3.2"}}}, {"type": "next-no-violations-with-dependencies", "data": {"component": {"packageUrl": "pkg:maven/org.apache.commons/commons-lang3@3.8?type=jar", "hash": null, "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "commons-lang3", "classifier": "", "extension": "jar", "groupId": "org.apache.commons", "version": "3.8"}}, "displayName": "org.apache.commons : commons-lang3 : 3.8"}}}, {"type": "next-non-failing-with-dependencies", "data": {"component": {"packageUrl": "pkg:maven/org.apache.commons/commons-lang3@3.3.2?type=jar", "hash": null, "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "commons-lang3", "classifier": "", "extension": "jar", "groupId": "org.apache.commons", "version": "3.3.2"}}, "displayName": "org.apache.commons : commons-lang3 : 3.3.2"}}}]}}, {"packageUrl": "pkg:maven/org.springframework/spring-aop@3.2.8.RELEASE?type=jar", "hash": "90e7924ef58621a4c07c", "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "spring-aop", "classifier": "", "extension": "jar", "groupId": "org.springframework", "version": "3.2.8.RELEASE"}}, "displayName": "org.springframework : spring-aop : 3.2.8.RELEASE", "proprietary": false, "matchState": "exact", "pathnames": ["./target/WebGoatLegacy-6.0.1-war-exec.jar/WebGoat.war/WEB-INF/lib/spring-aop-3.2.8.RELEASE.jar", "./target/WebGoatLegacy-6.0.1/WEB-INF/lib/spring-aop-3.2.8.RELEASE.jar", "WebGoat:WebGoatLegacy:war:6.0.1/org.springframework:spring-aop:jar:3.2.8.RELEASE"], "identificationSource": "Sonatype", "licenseData": {"declaredLicenses": [{"licenseId": "Apache-2.0", "licenseName": "Apache-2.0"}], "observedLicenses": [{"licenseId": "Apache-2.0", "licenseName": "Apache-2.0"}], "effectiveLicenses": [{"licenseId": "Apache-2.0", "licenseName": "Apache-2.0"}], "overriddenLicenses": [], "status": "Open", "effectiveLicenseThreats": [{"licenseThreatGroupName": "Liberal", "licenseThreatGroupLevel": 0, "licenseThreatGroupCategory": "no-threat"}]}, "securityData": {"securityIssues": []}, "dependencyData": {"directDependency": false, "innerSource": false, "parentComponentPurls": ["pkg:maven/org.springframework.security/spring-security-core@3.2.4.RELEASE?type=jar"]}, "remediation": {"versionChanges": [{"type": "next-no-violations", "data": {"component": {"packageUrl": "pkg:maven/org.springframework/spring-aop@4.3.19.RELEASE?type=jar", "hash": null, "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "spring-aop", "classifier": "", "extension": "jar", "groupId": "org.springframework", "version": "4.3.19.RELEASE"}}, "displayName": "org.springframework : spring-aop : 4.3.19.RELEASE"}}}, {"type": "next-non-failing", "data": {"component": {"packageUrl": "pkg:maven/org.springframework/spring-aop@3.2.8.RELEASE?type=jar", "hash": null, "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "spring-aop", "classifier": "", "extension": "jar", "groupId": "org.springframework", "version": "3.2.8.RELEASE"}}, "displayName": "org.springframework : spring-aop : 3.2.8.RELEASE"}}}, {"type": "next-no-violations-with-dependencies", "data": {"component": {"packageUrl": "pkg:maven/org.springframework/spring-aop@5.2.22.RELEASE?type=jar", "hash": null, "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "spring-aop", "classifier": "", "extension": "jar", "groupId": "org.springframework", "version": "5.2.22.RELEASE"}}, "displayName": "org.springframework : spring-aop : 5.2.22.RELEASE"}}}, {"type": "next-non-failing-with-dependencies", "data": {"component": {"packageUrl": "pkg:maven/org.springframework/spring-aop@3.2.8.RELEASE?type=jar", "hash": null, "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "spring-aop", "classifier": "", "extension": "jar", "groupId": "org.springframework", "version": "3.2.8.RELEASE"}}, "displayName": "org.springframework : spring-aop : 3.2.8.RELEASE"}}}]}}, {"packageUrl": "pkg:maven/org.springframework.security/spring-security-config@3.2.4.RELEASE?type=jar", "hash": "952da051fc959b215c8e", "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "spring-security-config", "classifier": "", "extension": "jar", "groupId": "org.springframework.security", "version": "3.2.4.RELEASE"}}, "displayName": "org.springframework.security : spring-security-config : 3.2.4.RELEASE", "proprietary": false, "matchState": "exact", "pathnames": ["./target/WebGoatLegacy-6.0.1-war-exec.jar/WebGoat.war/WEB-INF/lib/spring-security-config-3.2.4.RELEASE.jar", "./target/WebGoatLegacy-6.0.1/WEB-INF/lib/spring-security-config-3.2.4.RELEASE.jar", "WebGoat:WebGoatLegacy:war:6.0.1/org.springframework.security:spring-security-config:jar:3.2.4.RELEASE"], "identificationSource": "Sonatype", "licenseData": {"declaredLicenses": [{"licenseId": "Apache-2.0", "licenseName": "Apache-2.0"}], "observedLicenses": [{"licenseId": "Apache-2.0", "licenseName": "Apache-2.0"}], "effectiveLicenses": [{"licenseId": "Apache-2.0", "licenseName": "Apache-2.0"}], "overriddenLicenses": [], "status": "Open", "effectiveLicenseThreats": [{"licenseThreatGroupName": "Liberal", "licenseThreatGroupLevel": 0, "licenseThreatGroupCategory": "no-threat"}]}, "securityData": {"securityIssues": [{"source": "cve", "reference": "CVE-2016-5007", "severity": 7.5, "status": "Open", "url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2016-5007", "threatCategory": "critical", "cwe": "264", "cvssVector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N", "cvssVectorSource": "cve_cvss_3", "deeperData": {"identifier": "CVE-2016-5007", "vulnIds": ["CVE-2016-5007"], "vulnerabilityLink": "http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2016-5007", "source": {"shortName": "CVE", "longName": "National Vulnerability Database"}, "mainSeverity": {"source": "cve_cvss_3", "score": 7.5, "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N"}, "severityScores": [{"source": "cve_cvss_2", "score": 5.0}, {"source": "sonatype_cvss_3", "score": 6.3}], "weakness": {"cweSource": "CVE", "cweIds": [{"id": "264", "uri": "https://cwe.mitre.org/data/definitions/264.html"}]}, "categories": ["data"], "description": "Both Spring Security 3.2.x, 4.0.x, 4.1.0 and the Spring Framework 3.2.x, 4.0.x, 4.1.x, 4.2.x rely on URL pattern mappings for authorization and for mapping requests to controllers respectively. Differences in the strictness of the pattern matching mechanisms, for example with regards to space trimming in path segments, can lead Spring Security to not recognize certain paths as not protected that are in fact mapped to Spring MVC controllers that should be protected. The problem is compounded by the fact that the Spring Framework provides richer features with regards to pattern matching as well as by the fact that pattern matching in each Spring Security and the Spring Framework can easily be customized creating additional differences.", "explanationMarkdown": "The Spring Security Config package prior to version 4.1.1 is potentially vulnerable to an Authorization Bypass, caused by a path matching inconsistency between Spring Security and the the Spring Framework.  To allow for browser content negotiation, the Spring MVC `@RequestMapping` annotation will match paths such as `/foo` to `/foo.*`.  This  is less strict than the matching done by Spring Security, which matches `/foo` explicitly and will not match on other paths such as `foo.html`.  As a result of this inconsistency, a malicious attacker might craft a URL including an extension matched by Spring MVC (such as `.html`) but not matched by Spring Security, causing the Spring Security authorization to be bypassed and resulting in access to unauthorized resources and/or functionality.", "detectionMarkdown": "The application is vulnerable by using this component.", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue.  This issue also requires making use of the MvcRequestMatcher functionality introduced in version 4.1.1\n\n> To address these issues comprehensively Spring Security provides URL authorization that can delegate pattern matching to the Spring Framework. To take advantage of this option applications should upgrade to Spring Security 4.1.1+ and Spring Framework 4.3.1+ and use the MvcRequestMatcher.\n\nReference: [https://pivotal.io/security/cve-2016-5007](https://pivotal.io/security/cve-2016-5007)\n\nWorkarounds:\n\n* >Starting with Spring Framework 4.3.0+ the AntPathMatcher is configured with trimTokens set to \"false\" which aligns with Spring Security. Therefore simply using Spring Framework 4.3.0+ can eliminate some causes of path matching inconsistencies.\n* >Users of Spring Framework 3.2.x, 4.0.x, 4.1.x, 4.2.x can use the MVC Java config or the MVC namespace to set trimTokens property of AntPathMatcher to \"false\".\n* >In addition, applications should always complement URL-based authorization with additional authorization at the business layer of the application using one of Spring Security's mechanisms such as adding @Secured annotations.\n\nReference: [https://pivotal.io/security/cve-2016-5007](https://pivotal.io/security/cve-2016-5007)", "advisories": [{"referenceType": "PROJECT", "url": "https://jira.spring.io/browse/SEC-2534"}, {"referenceType": "PROJECT", "url": "https://spring.io/blog/2016/07/08/cve-2016-5007-spring-security-mvc-path-matching-inconsistency"}, {"referenceType": "THIRD_PARTY", "url": "https://pivotal.io/security/cve-2016-5007"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "cve", "reference": "CVE-2018-1199", "severity": 5.3, "status": "Open", "url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-1199", "threatCategory": "severe", "cwe": "20", "cvssVector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N", "cvssVectorSource": "cve_cvss_3", "deeperData": {"identifier": "CVE-2018-1199", "vulnIds": ["CVE-2018-1199"], "vulnerabilityLink": "http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2018-1199", "source": {"shortName": "CVE", "longName": "National Vulnerability Database"}, "mainSeverity": {"source": "cve_cvss_3", "score": 5.3, "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N"}, "severityScores": [{"source": "cve_cvss_2", "score": 5.0}, {"source": "sonatype_cvss_3", "score": 5.3}], "weakness": {"cweSource": "CVE", "cweIds": [{"id": "20", "uri": "https://cwe.mitre.org/data/definitions/20.html"}]}, "categories": ["data"], "description": "Spring Security (Spring Security 4.1.x before 4.1.5, 4.2.x before 4.2.4, and 5.0.x before 5.0.1; and Spring Framework 4.3.x before 4.3.14 and 5.0.x before 5.0.3) does not consider URL path parameters when processing security constraints. By adding a URL path parameter with special encodings, an attacker may be able to bypass a security constraint. The root cause of this issue is a lack of clarity regarding the handling of path parameters in the Servlet Specification. Some Servlet containers include path parameters in the value returned for getPathInfo() and some do not. Spring Security uses the value returned by getPathInfo() as part of the process of mapping requests to security constraints. In this particular attack, different character encodings used in path parameters allows secured Spring MVC static resource URLs to be bypassed.", "explanationMarkdown": "Certain Spring Security sub-packages are vulnerable to Improper Input Validation.  Using special character encodings, it is possible to bypass predefined application security boundaries.  An attacker can exploit this vulnerability to access static resources, which are meant to be private, over HTTP.", "detectionMarkdown": "The application is vulnerable by using this component.", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue.", "advisories": [{"referenceType": "PROJECT", "url": "https://pivotal.io/security/cve-2018-1199"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "cve", "reference": "CVE-2023-20862", "severity": 9.8, "status": "Open", "url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-20862", "threatCategory": "critical", "cwe": "613", "cvssVector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H", "cvssVectorSource": "cve_cvss_3", "deeperData": {"identifier": "CVE-2023-20862", "vulnIds": ["CVE-2023-20862"], "vulnerabilityLink": "http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2023-20862", "source": {"shortName": "CVE", "longName": "National Vulnerability Database"}, "mainSeverity": {"source": "cve_cvss_3", "score": 9.8, "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"}, "severityScores": [{"source": "cve_cvss_2", "score": 0.0}, {"source": "sonatype_cvss_3", "score": 8.8}], "weakness": {"cweSource": "CVE", "cweIds": [{"id": "459", "uri": "https://cwe.mitre.org/data/definitions/459.html"}]}, "categories": ["data"], "description": "In Spring Security, versions 5.7.x prior to 5.7.8, versions 5.8.x prior to 5.8.3, and versions 6.0.x prior to 6.0.3, the logout support does not properly clean the security context if using serialized versions. Additionally, it is not possible to explicitly save an empty security context to the HttpSessionSecurityContextRepository. This vulnerability can keep users authenticated even after they performed logout. Users of affected versions should apply the following mitigation. 5.7.x users should upgrade to 5.7.8. 5.8.x users should upgrade to 5.8.3. 6.0.x users should upgrade to 6.0.3.", "explanationMarkdown": "The `spring-security-config` and `spring-security-web` packages are vulnerable to Insufficient Session Expiration. Multiple methods in multiple classes, stated below, fail to properly clean up the security context when serialized versions are in use. This flaw can keep leave users authenticated even after they have logged out, therefore putting their sessions and data at risk.\n\n**Advisory Deviation Notice:** The Sonatype Security Research team has identified that Spring Security Config/Web versions prior to 5.7.0 may also be vulnerable to the flaw (i.e. when cases described in **Detection** not related to `HttpSessionSecurityContextRepository` apply) contrary to what is implied by the [advisory](https://spring.io/security/cve-2023-20862).\n\n*Vulnerable File(s) and Function(s)*:\n\norg/springframework/security/config/annotation/web/configurers/LogoutConfigurer.class\n- createLogoutFilter()\n\ncreateLogoutFilter()org/springframework/security/web/authentication/logout/SecurityContextLogoutHandler.class\n- logout()\n- setClearAuthentication()\n\norg/springframework/security/web/context/HttpSessionSecurityContextRepository.class\n- saveContext()", "detectionMarkdown": "The application is vulnerable by using this component when **any** of the following applies:\n\n- You are using the `SecurityContextHolderFilter` or `requireExplicitSave(true)` and you are using Spring Security's logout support with serialized sessions (e.g. Spring Session) and `invalidateHttpSession(false)`\n- You are logging users out manually by saving an empty `SecurityContext` into the `HttpSessionSecurityContextRepository`\n- You have a custom `SecurityContextRepository` that does not rely on the `HttpSession`\n\nYou are **not** vulnerable if **any** of the following applies:\n- You are still using the deprecated `SecurityContextPersistenceFilter` or `requireExplicitSave(false)`\n- You are using Spring Security's logout support with in-memory sessions.\n- You are not saving an empty `SecurityContext` into the `HttpSessionSecurityContextRepository`\n\n[Source](https://spring.io/security/cve-2023-20862)", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue.\n\nNote: If this component is included as a bundled/transitive dependency of another component, there may not be an upgrade path. In this instance, we recommend contacting the maintainers who included the vulnerable package. Alternatively, we recommend investigating alternative components or a potential mitigating control.", "advisories": [{"referenceType": "PROJECT", "url": "https://spring.io/security/cve-2023-20862"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}]}, "dependencyData": {"directDependency": true, "innerSource": false}, "remediation": {"versionChanges": [{"type": "next-no-violations", "data": {"component": {"packageUrl": "pkg:maven/org.springframework.security/spring-security-config@6.1.0?type=jar", "hash": null, "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "spring-security-config", "classifier": "", "extension": "jar", "groupId": "org.springframework.security", "version": "6.1.0"}}, "displayName": "org.springframework.security : spring-security-config : 6.1.0"}}}, {"type": "next-non-failing", "data": {"component": {"packageUrl": "pkg:maven/org.springframework.security/spring-security-config@3.2.4.RELEASE?type=jar", "hash": null, "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "spring-security-config", "classifier": "", "extension": "jar", "groupId": "org.springframework.security", "version": "3.2.4.RELEASE"}}, "displayName": "org.springframework.security : spring-security-config : 3.2.4.RELEASE"}}}, {"type": "next-no-violations-with-dependencies", "data": {"component": {"packageUrl": "pkg:maven/org.springframework.security/spring-security-config@6.1.0?type=jar", "hash": null, "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "spring-security-config", "classifier": "", "extension": "jar", "groupId": "org.springframework.security", "version": "6.1.0"}}, "displayName": "org.springframework.security : spring-security-config : 6.1.0"}}}, {"type": "next-non-failing-with-dependencies", "data": {"component": {"packageUrl": "pkg:maven/org.springframework.security/spring-security-config@3.2.4.RELEASE?type=jar", "hash": null, "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "spring-security-config", "classifier": "", "extension": "jar", "groupId": "org.springframework.security", "version": "3.2.4.RELEASE"}}, "displayName": "org.springframework.security : spring-security-config : 3.2.4.RELEASE"}}}]}}, {"packageUrl": "pkg:maven/org.springframework/spring-webmvc@3.2.4.RELEASE?type=jar", "hash": "99c0303b36c421b3c43d", "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "spring-webmvc", "classifier": "", "extension": "jar", "groupId": "org.springframework", "version": "3.2.4.RELEASE"}}, "displayName": "org.springframework : spring-webmvc : 3.2.4.RELEASE", "proprietary": false, "matchState": "exact", "pathnames": ["./target/WebGoatLegacy-6.0.1-war-exec.jar/WebGoat.war/WEB-INF/lib/spring-webmvc-3.2.4.RELEASE.jar", "./target/WebGoatLegacy-6.0.1/WEB-INF/lib/spring-webmvc-3.2.4.RELEASE.jar", "WebGoat:WebGoatLegacy:war:6.0.1/org.springframework:spring-webmvc:jar:3.2.4.RELEASE"], "identificationSource": "Sonatype", "licenseData": {"declaredLicenses": [{"licenseId": "Apache-2.0", "licenseName": "Apache-2.0"}], "observedLicenses": [{"licenseId": "Apache-2.0", "licenseName": "Apache-2.0"}], "effectiveLicenses": [{"licenseId": "Apache-2.0", "licenseName": "Apache-2.0"}], "overriddenLicenses": [], "status": "Open", "effectiveLicenseThreats": [{"licenseThreatGroupName": "Liberal", "licenseThreatGroupLevel": 0, "licenseThreatGroupCategory": "no-threat"}]}, "securityData": {"securityIssues": [{"source": "cve", "reference": "CVE-2014-1904", "severity": 4.3, "status": "Open", "url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2014-1904", "threatCategory": "severe", "cwe": "79", "cvssVector": "AV:N/AC:M/Au:N/C:N/I:P/A:N", "cvssVectorSource": "cve_cvss_2", "deeperData": {"identifier": "CVE-2014-1904", "vulnIds": ["CVE-2014-1904"], "vulnerabilityLink": "http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2014-1904", "source": {"shortName": "CVE", "longName": "National Vulnerability Database"}, "mainSeverity": {"source": "cve_cvss_2", "score": 4.3, "vector": "AV:N/AC:M/Au:N/C:N/I:P/A:N"}, "severityScores": [{"source": "sonatype_cvss_3", "score": 6.1}], "weakness": {"cweSource": "CVE", "cweIds": [{"id": "79", "uri": "https://cwe.mitre.org/data/definitions/79.html"}]}, "categories": ["configuration", "functional"], "description": "Cross-site scripting (XSS) vulnerability in web/servlet/tags/form/FormTag.java in Spring MVC in Spring Framework 3.0.0 before 3.2.8 and 4.0.0 before 4.0.2 allows remote attackers to inject arbitrary web script or HTML via the requested URI in a default action.", "explanationMarkdown": "Spring Framework is vulnerable to Cross-site Scripting (XSS).  In the case of a missing action field in a Spring form, Spring Framework automatically populates the action field with the requested URI.  This allows the attacker to conduct reflected XSS attacks.", "detectionMarkdown": "The application is vulnerable if any Spring form contains an unspecified action field.", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue.  A potential workaround is to ensure every Spring form has a specified action parameter.", "advisories": [{"referenceType": "PROJECT", "url": "http://pivotal.io/security/cve-2014-1904"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "cve", "reference": "CVE-2014-3625", "severity": 5.0, "status": "Open", "url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2014-3625", "threatCategory": "severe", "cwe": "22", "cvssVector": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "cvssVectorSource": "cve_cvss_2", "deeperData": {"identifier": "CVE-2014-3625", "vulnIds": ["CVE-2014-3625"], "vulnerabilityLink": "http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2014-3625", "source": {"shortName": "CVE", "longName": "National Vulnerability Database"}, "mainSeverity": {"source": "cve_cvss_2", "score": 5.0, "vector": "AV:N/AC:L/Au:N/C:P/I:N/A:N"}, "severityScores": [{"source": "sonatype_cvss_3", "score": 5.9}], "weakness": {"cweSource": "CVE", "cweIds": [{"id": "22", "uri": "https://cwe.mitre.org/data/definitions/22.html"}]}, "categories": ["data", "operational"], "description": "Directory traversal vulnerability in Pivotal Spring Framework 3.0.4 through 3.2.x before 3.2.12, 4.0.x before 4.0.8, and 4.1.x before 4.1.2 allows remote attackers to read arbitrary files via unspecified vectors, related to static resource handling.", "explanationMarkdown": "Spring Framework is vulnerable to directory traversal. The ResourceHttpRequestHandler functionality does not properly enforce checks on directory traversal characters. Remote attackers can exploit this flaw to access arbitrary files through URLs containing relative file paths.", "detectionMarkdown": "The application is vulnerable by using this component.", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue.", "advisories": [{"referenceType": "PROJECT", "url": "https://pivotal.io/security/cve-2014-3625"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "cve", "reference": "CVE-2015-5211", "severity": 9.6, "status": "Open", "url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2015-5211", "threatCategory": "critical", "cwe": "552", "cvssVector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:H", "cvssVectorSource": "cve_cvss_3", "deeperData": {"identifier": "CVE-2015-5211", "vulnIds": ["CVE-2015-5211"], "vulnerabilityLink": "http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2015-5211", "source": {"shortName": "CVE", "longName": "National Vulnerability Database"}, "mainSeverity": {"source": "cve_cvss_3", "score": 9.6, "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:H"}, "severityScores": [{"source": "cve_cvss_2", "score": 9.3}, {"source": "sonatype_cvss_3", "score": 7.1}], "weakness": {"cweSource": "CVE", "cweIds": [{"id": "552", "uri": "https://cwe.mitre.org/data/definitions/552.html"}]}, "categories": ["data"], "description": "Under some situations, the Spring Framework 4.2.0 to 4.2.1, 4.0.0 to 4.1.7, 3.2.0 to 3.2.14 and older unsupported versions is vulnerable to a Reflected File Download (RFD) attack. The attack involves a malicious user crafting a URL with a batch script extension that results in the response being downloaded rather than rendered and also includes some input reflected in the response.", "explanationMarkdown": "The `spring-webmvc` module of Spring Framework is vulnerable to a Reflected File Download (RFD) attack.  It allows:\n\n1. Malicious content to be reflected back to the HTTP response body (which allows OS scripting content to be included in the downloaded file)\n2. Malicious HTTP response content disposition header to be injected (tricking the browser into triggering a file download instead of rendering the content)\n3. Control of the filename in the HTTP response (which allows for a script extension to be included in downloaded file, causing potential execution).\n\nConsequently, a remote attacker can craft a URL which contains embedded script content and have this script downloaded and potentially executed on victim machines.", "detectionMarkdown": "The application is vulnerable by using this component.", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue.", "advisories": [{"referenceType": "PROJECT", "url": "http://docs.spring.io/spring-framework/docs/4.2.3.BUILD-SNAPSHOT/spring-framework-reference/html/mvc.html#mvc-ann-requestmapping-rfd"}, {"referenceType": "PROJECT", "url": "https://jira.spring.io/browse/SPR-13548"}, {"referenceType": "THIRD_PARTY", "url": "http://pivotal.io/security/cve-2015-5211"}, {"referenceType": "THIRD_PARTY", "url": "https://www.trustwave.com/Resources/SpiderLabs-Blog/Reflected-File-Download---A-New-Web-Attack-Vector/"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "cve", "reference": "CVE-2016-9878", "severity": 7.5, "status": "Open", "url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2016-9878", "threatCategory": "critical", "cwe": "22", "cvssVector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N", "cvssVectorSource": "cve_cvss_3", "deeperData": {"identifier": "CVE-2016-9878", "vulnIds": ["CVE-2016-9878"], "vulnerabilityLink": "http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2016-9878", "source": {"shortName": "CVE", "longName": "National Vulnerability Database"}, "mainSeverity": {"source": "cve_cvss_3", "score": 7.5, "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N"}, "severityScores": [{"source": "cve_cvss_2", "score": 5.0}, {"source": "sonatype_cvss_3", "score": 5.8}], "weakness": {"cweSource": "CVE", "cweIds": [{"id": "22", "uri": "https://cwe.mitre.org/data/definitions/22.html"}]}, "categories": ["data"], "description": "An issue was discovered in Pivotal Spring Framework before 3.2.18, 4.2.x before 4.2.9, and 4.3.x before 4.3.5. Paths provided to the ResourceServlet were not properly sanitized and as a result exposed to directory traversal attacks.", "explanationMarkdown": "Spring Framework is vulnerable to a Directory Traversal attack. The `doInclude()` method in `ResourceServlet.class` allows `../` (dot dot slash) in the resource path in the request URI.  A remote attacker can exploit this vulnerability by crafting the resource path with the `../` character sequence resulting in Directory Traversal.\nNote:\n\"\nNote that few applications are likely to use the ResourceServlet. It has been generally superseded since version 3.0 (circa 2009) by the ResourceHttpRequestHandler and related classes that have been in use by default and provide much more advanced capabilities, see \"http://docs.spring.io/spring/docs/current/spring-framework-reference/html/mvc.html#mvc-config-static-resources\" in the reference documentation. The ResourceServlet is now deprecated in 3.2.x and 4.x and is removed altogether starting with version 5.\n\"\nReference: [https://pivotal.io/security/cve-2016-9878](https://pivotal.io/security/cve-2016-9878)\n\n*Advisory Deviation Notice:*\n\nThe Sonatype Security Research team has created a CVSS score that differs from the publicly available score that, based on our research, more accurately reflects the severity of the vulnerability.", "detectionMarkdown": "The application is vulnerable by using this component and using the `ResourceServlet` class.", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue.\n\nNote: If this component is included as a bundled/transitive dependency of another component, there may not be an upgrade path. In this instance, we recommend contacting the maintainers who included the vulnerable package. Alternatively, we recommend investigating alternative components or a potential mitigating control.", "advisories": [{"referenceType": "PROJECT", "url": "https://pivotal.io/security/cve-2016-9878"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "cve", "reference": "CVE-2018-1271", "severity": 5.9, "status": "Open", "url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-1271", "threatCategory": "severe", "cwe": "22", "cvssVector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N", "cvssVectorSource": "cve_cvss_3", "deeperData": {"identifier": "CVE-2018-1271", "vulnIds": ["CVE-2018-1271"], "vulnerabilityLink": "http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2018-1271", "source": {"shortName": "CVE", "longName": "National Vulnerability Database"}, "mainSeverity": {"source": "cve_cvss_3", "score": 5.9, "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N"}, "severityScores": [{"source": "cve_cvss_2", "score": 4.3}, {"source": "sonatype_cvss_3", "score": 7.5}], "weakness": {"cweSource": "CVE", "cweIds": [{"id": "22", "uri": "https://cwe.mitre.org/data/definitions/22.html"}]}, "categories": ["data"], "description": "Spring Framework, versions 5.0 prior to 5.0.5 and versions 4.3 prior to 4.3.15 and older unsupported versions, allow applications to configure Spring MVC to serve static resources (e.g. CSS, JS, images). When static resources are served from a file system on Windows (as opposed to the classpath, or the ServletContext), a malicious user can send a request using a specially crafted URL that can lead a directory traversal attack.", "explanationMarkdown": "Spring WebMVC is vulnerable to Path Traversal when configured to serve static resources from a Windows file system.  The `getResource()` method in the `ResourceHttpRequestHandler` class, the `isResourceUnderLocation()` method in the `PathResourceResolver` class, and the `processPath()` method in the `ResourceWebHandler` class allow directory traversal characters via the URL path.  A remote attacker can exploit this vulnerability by crafting a request containing traversal characters, such as `..\\`, in the URL path.  This can lead to the disclosure of sensitive information, as the attacker is able to traverse beyond the root folder and view any information stored in files therein.", "detectionMarkdown": "The application is vulnerable by using this component if it serves static resources from a Windows file system.", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue.", "advisories": [{"referenceType": "PROJECT", "url": "https://pivotal.io/security/cve-2018-1271"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "cve", "reference": "CVE-2021-22060", "severity": 4.3, "status": "Open", "url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-22060", "threatCategory": "severe", "cwe": "117", "cvssVector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:L/A:N", "cvssVectorSource": "cve_cvss_3", "deeperData": {"identifier": "CVE-2021-22060", "vulnIds": ["CVE-2021-22060"], "vulnerabilityLink": "http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2021-22060", "source": {"shortName": "CVE", "longName": "National Vulnerability Database"}, "mainSeverity": {"source": "cve_cvss_3", "score": 4.3, "vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:L/A:N"}, "severityScores": [{"source": "cve_cvss_2", "score": 4.0}, {"source": "sonatype_cvss_3", "score": 5.3}], "weakness": {"cweSource": "Sonatype", "cweIds": [{"id": "117", "uri": "https://cwe.mitre.org/data/definitions/117.html"}]}, "categories": ["data"], "description": "In Spring Framework versions 5.3.0 - 5.3.13, 5.2.0 - 5.2.18, and older unsupported versions, it is possible for a user to provide malicious input to cause the insertion of additional log entries. This is a follow-up to CVE-2021-22096 that protects against additional types of input and in more places of the Spring Framework codebase.", "explanationMarkdown": "The `spring-webmvc`, `spring-webflux`, and `spring-websocket` packages are vulnerable due to Improper Output Neutralization for Logs. The methods in the files listed below allow users to inject arbitrary data into logs due to a lack of sanitization of control characters. A remote attacker can exploit this behavior to cause the application to log additional, arbitrary entries by submitting malicious data via certain request parameters.\n\n*Vulnerable File(s) and Function(s)*:\n\norg/springframework/web/servlet/resource/PathResourceResolver.class\n* getResource()\n* isInvalidEncodedPath()\n\norg/springframework/web/servlet/resource/ResourceHttpRequestHandler.class\n* isInvalidPath()\n\norg/springframework/web/reactive/resource/PathResourceResolver.class\n* getResource()\n* isInvalidEncodedPath()\n\norg/springframework/web/reactive/resource/ResourceWebHandler.class\n* isInvalidPath()\n\norg/springframework/web/socket/server/support/AbstractHandshakeHandler.class\n* handleInvalidUpgradeHeader()\n* handleInvalidConnectHeader()\n* handleWebSocketVersionNotSupported()\n\norg/springframework/web/socket/sockjs/support/AbstractSockJsService.class\n* handleRequest()\n\norg/springframework/web/socket/sockjs/transport/TransportHandlingSockJsService.class\n* handleTransportRequest()", "detectionMarkdown": "The application is vulnerable by using this component.", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue.\n\nNote: If this component is included as a bundled/transitive dependency of another component, there may not be an upgrade path. In this instance, we recommend contacting the maintainers who included the vulnerable package. Alternatively, we recommend investigating alternative components or a potential mitigating control.", "advisories": [{"referenceType": "PROJECT", "url": "https://tanzu.vmware.com/security/cve-2021-22060"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "sonatype", "reference": "sonatype-2017-0651", "severity": 5.0, "status": "Open", "url": "http://localhost:8070/ui/links/vln/sonatype-2017-0651", "threatCategory": "severe", "cwe": "35", "cvssVector": "CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:C/C:L/I:N/A:N", "cvssVectorSource": "sonatype_cvss_3", "deeperData": {"identifier": "sonatype-2017-0651", "vulnIds": ["sonatype-2017-0651"], "source": {"shortName": "Sonatype", "longName": "Sonatype Data Research"}, "mainSeverity": {"source": "sonatype_cvss_3", "score": 5.0, "vector": "CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:C/C:L/I:N/A:N"}, "severityScores": [{"source": "cve_cvss_2", "score": 0.0}], "weakness": {"cweSource": "Sonatype", "cweIds": [{"id": "35", "uri": "https://cwe.mitre.org/data/definitions/35.html"}]}, "categories": ["data"], "description": null, "explanationMarkdown": "The `spring-webmvc` package is vulnerable to Path Traversal. The `getResource` method in `PathResourceResolver.java` does not check a path for `..\\` characters before returning the `Resource` at that path. An attacker can potentially exploit this via a crafted remote request to access sensitive files.", "detectionMarkdown": "The application is vulnerable by using this component.", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue.", "advisories": [{"referenceType": "PROJECT", "url": "https://github.com/spring-projects/spring-framework/issues/21157"}, {"referenceType": "PROJECT", "url": "https://github.com/spring-projects/spring-framework/pull/1604"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}]}, "dependencyData": {"directDependency": true, "innerSource": false}, "remediation": {"versionChanges": [{"type": "next-no-violations", "data": {"component": {"packageUrl": "pkg:maven/org.springframework/spring-webmvc@5.2.19.RELEASE?type=jar", "hash": null, "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "spring-webmvc", "classifier": "", "extension": "jar", "groupId": "org.springframework", "version": "5.2.19.RELEASE"}}, "displayName": "org.springframework : spring-webmvc : 5.2.19.RELEASE"}}}, {"type": "next-non-failing", "data": {"component": {"packageUrl": "pkg:maven/org.springframework/spring-webmvc@3.2.4.RELEASE?type=jar", "hash": null, "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "spring-webmvc", "classifier": "", "extension": "jar", "groupId": "org.springframework", "version": "3.2.4.RELEASE"}}, "displayName": "org.springframework : spring-webmvc : 3.2.4.RELEASE"}}}, {"type": "next-no-violations-with-dependencies", "data": {"component": {"packageUrl": "pkg:maven/org.springframework/spring-webmvc@6.0.8?type=jar", "hash": null, "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "spring-webmvc", "classifier": "", "extension": "jar", "groupId": "org.springframework", "version": "6.0.8"}}, "displayName": "org.springframework : spring-webmvc : 6.0.8"}}}, {"type": "next-non-failing-with-dependencies", "data": {"component": {"packageUrl": "pkg:maven/org.springframework/spring-webmvc@3.2.4.RELEASE?type=jar", "hash": null, "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "spring-webmvc", "classifier": "", "extension": "jar", "groupId": "org.springframework", "version": "3.2.4.RELEASE"}}, "displayName": "org.springframework : spring-webmvc : 3.2.4.RELEASE"}}}]}}, {"packageUrl": "pkg:a-name/jquery-form@3.50.0", "hash": "9c06887e03feb6c996ab", "componentIdentifier": {"format": "a-name", "coordinates": {"name": "jquery-form", "qualifier": "", "version": "3.50.0"}}, "displayName": "jquery-form 3.50.0", "proprietary": false, "matchState": "exact", "pathnames": ["./src/main/webapp/js/jquery_form/jquery.form.js", "./target/WebGoatLegacy-6.0.1-war-exec.jar/WebGoat.war/js/jquery_form/jquery.form.js", "./target/WebGoatLegacy-6.0.1/js/jquery_form/jquery.form.js"], "identificationSource": "Sonatype", "licenseData": {"declaredLicenses": [{"licenseId": "GPL-2.0", "licenseName": "GPL-2.0"}, {"licenseId": "MIT", "licenseName": "MIT"}], "observedLicenses": [{"licenseId": "Not-Supported", "licenseName": "Not Supported"}], "effectiveLicenses": [{"licenseId": "GPL-2.0", "licenseName": "GPL-2.0"}, {"licenseId": "MIT", "licenseName": "MIT"}], "overriddenLicenses": [], "status": "Open", "effectiveLicenseThreats": [{"licenseThreatGroupName": "Copyleft", "licenseThreatGroupLevel": 9, "licenseThreatGroupCategory": "critical"}, {"licenseThreatGroupName": "Liberal", "licenseThreatGroupLevel": 0, "licenseThreatGroupCategory": "no-threat"}, {"licenseThreatGroupName": "Sonatype Informational", "licenseThreatGroupLevel": 0, "licenseThreatGroupCategory": "no-threat"}]}, "securityData": {"securityIssues": [{"source": "sonatype", "reference": "sonatype-2015-0356", "severity": 6.1, "status": "Open", "url": "http://localhost:8070/ui/links/vln/sonatype-2015-0356", "threatCategory": "severe", "cwe": "79", "cvssVector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N", "cvssVectorSource": "sonatype_cvss_3", "deeperData": {"identifier": "sonatype-2015-0356", "vulnIds": ["sonatype-2015-0356"], "source": {"shortName": "Sonatype", "longName": "Sonatype Data Research"}, "mainSeverity": {"source": "sonatype_cvss_3", "score": 6.1, "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N"}, "severityScores": [{"source": "cve_cvss_2", "score": 0.0}], "weakness": {"cweSource": "Sonatype", "cweIds": [{"id": "79", "uri": "https://cwe.mitre.org/data/definitions/79.html"}]}, "categories": ["data"], "description": null, "explanationMarkdown": "The `jquery-form` package is vulnerable to Cross-Site Scripting (XSS) attacks. The `$.fn.ajaxSubmit()` function in the `jquery.form.js` file fails to sanitize server response data (`data`) prior to invoking `html()` on the data. A remote attacker can exploit this vulnerability by crafting a request containing malicious JavaScript in any parameter whose value is returned from the server as part of the form submission process. The attacker can then entice a victim into submitting the request. This will result in script execution when the resulting response is rendered by the victim's browser.", "detectionMarkdown": "The application is vulnerable by using this component.", "recommendationMarkdown": "There is no non-vulnerable upgrade path for this component/package. We recommend investigating alternative components or a potential mitigating control.", "advisories": [{"referenceType": "PROJECT", "url": "https://github.com/jquery-form/form/issues/464"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}]}, "remediation": {"versionChanges": [{"type": "next-non-failing", "data": {"component": {"packageUrl": "pkg:a-name/jquery-form@3.50.0", "hash": null, "componentIdentifier": {"format": "a-name", "coordinates": {"name": "jquery-form", "qualifier": "", "version": "3.50.0"}}, "displayName": "jquery-form 3.50.0"}}}]}}, {"packageUrl": "pkg:maven/taglibs/standard@1.1.2?type=jar", "hash": "a17e8a4d9a1f7fcc5eed", "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "standard", "classifier": "", "extension": "jar", "groupId": "taglibs", "version": "1.1.2"}}, "displayName": "taglibs : standard : 1.1.2", "proprietary": false, "matchState": "exact", "pathnames": ["./target/WebGoatLegacy-6.0.1-war-exec.jar/WebGoat.war/WEB-INF/lib/standard-1.1.2.jar", "./target/WebGoatLegacy-6.0.1/WEB-INF/lib/standard-1.1.2.jar", "WebGoat:WebGoatLegacy:war:6.0.1/taglibs:standard:jar:1.1.2"], "identificationSource": "Sonatype", "licenseData": {"declaredLicenses": [{"licenseId": "Not-Declared", "licenseName": "Not Declared"}], "observedLicenses": [{"licenseId": "Apache-2.0", "licenseName": "Apache-2.0"}], "effectiveLicenses": [{"licenseId": "Apache-2.0", "licenseName": "Apache-2.0"}], "overriddenLicenses": [], "status": "Open", "effectiveLicenseThreats": [{"licenseThreatGroupName": "Liberal", "licenseThreatGroupLevel": 0, "licenseThreatGroupCategory": "no-threat"}, {"licenseThreatGroupName": "Sonatype Special Licenses", "licenseThreatGroupLevel": 5, "licenseThreatGroupCategory": "severe"}]}, "securityData": {"securityIssues": [{"source": "cve", "reference": "CVE-2015-0254", "severity": 7.5, "status": "Open", "url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2015-0254", "threatCategory": "critical", "cwe": "611", "cvssVector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "cvssVectorSource": "cve_cvss_2", "deeperData": {"identifier": "CVE-2015-0254", "vulnIds": ["CVE-2015-0254"], "vulnerabilityLink": "http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2015-0254", "source": {"shortName": "CVE", "longName": "National Vulnerability Database"}, "mainSeverity": {"source": "cve_cvss_2", "score": 7.5, "vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P"}, "severityScores": [{"source": "sonatype_cvss_3", "score": 7.3}], "weakness": {"cweSource": "Sonatype", "cweIds": [{"id": "611", "uri": "https://cwe.mitre.org/data/definitions/611.html"}]}, "categories": ["data", "functional"], "description": "Apache Standard Taglibs before 1.2.3 allows remote attackers to execute arbitrary code or conduct external XML entity (XXE) attacks via a crafted XSLT extension in a (1) <x:parse> or (2) <x:transform> JSTL XML tag.", "explanationMarkdown": "Various implementations of JSTL are vulnerable to XML eXternal Entity (XXE) injection. These JSTL implementations do not check the validity of user-supplied data when processing XML. An attacker can exploit this vulnerability by submitting a crafted XML document containing a malicious XSLT extension within an `<x:parse>` or `<x:transform>` JSTL XML tag. The attacker can leverage this vulnerability to obtain sensitive information, create a Denial of Service (DoS) condition, or perform various other attacks within the context of the application.", "detectionMarkdown": "The application is vulnerable by passing untrusted input to this component.", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue.\n\nNote for the fixed version(s):\n```\nThis version uses JAXP's FEATURE_SECURE_PROCESSING to restrict XML processing. Depending on the Java runtime version in use, additional configuration may be required:\nJava8: External entity access is automatically disabled if a SecurityManager is active.\nJava7: JAXP properties may need to be used to disable external access. See http://docs.oracle.com/javase/tutorial/jaxp/properties/properties.html\nJava6 and earlier: A new system property org.apache.taglibs.standard.xml.accessExternalEntity\nmay be used to specify the protocols that can be used to access external entities. This defaults\nto \"all\" if no SecurityManager is present and to \"\" (thereby disabling access) if\na SecurityManager is detected.\n```\nReference: [http://mail-archives.apache.org/mod_mbox/tomcat-taglibs-user/201502.mbox/%3C82207A16-6348-4DEE-877E-F7B87292576A%40apache.org%3E](http://mail-archives.apache.org/mod_mbox/tomcat-taglibs-user/201502.mbox/%3C82207A16-6348-4DEE-877E-F7B87292576A%40apache.org%3E)", "advisories": [{"referenceType": "PROJECT", "url": "http://mail-archives.apache.org/mod_mbox/tomcat-taglibs-user/201502.mbox/%3C82207A16-6348-4DEE-877E-F7B87292576A%40apache.org%3E"}, {"referenceType": "THIRD_PARTY", "url": "http://www.securityfocus.com/archive/1/534772"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}]}, "dependencyData": {"directDependency": true, "innerSource": false}, "remediation": {"versionChanges": [{"type": "next-non-failing", "data": {"component": {"packageUrl": "pkg:maven/taglibs/standard@1.1.2?type=jar", "hash": null, "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "standard", "classifier": "", "extension": "jar", "groupId": "taglibs", "version": "1.1.2"}}, "displayName": "taglibs : standard : 1.1.2"}}}, {"type": "next-non-failing-with-dependencies", "data": {"component": {"packageUrl": "pkg:maven/taglibs/standard@1.1.2?type=jar", "hash": null, "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "standard", "classifier": "", "extension": "jar", "groupId": "taglibs", "version": "1.1.2"}}, "displayName": "taglibs : standard : 1.1.2"}}}]}}, {"packageUrl": "pkg:a-name/noide@0.0.4", "hash": "a728e83d4a4936a14f54", "componentIdentifier": {"format": "a-name", "coordinates": {"name": "noide", "qualifier": "", "version": "0.0.4"}}, "displayName": "noide 0.0.4", "proprietary": false, "matchState": "exact", "pathnames": ["./src/main/webapp/js/ace/theme-katzenmilch.js", "./target/WebGoatLegacy-6.0.1-war-exec.jar/WebGoat.war/js/ace/theme-katzenmilch.js", "./target/WebGoatLegacy-6.0.1/js/ace/theme-katzenmilch.js"], "identificationSource": "Sonatype", "licenseData": {"declaredLicenses": [{"licenseId": "Not-Declared", "licenseName": "Not Declared"}], "observedLicenses": [{"licenseId": "Not-Supported", "licenseName": "Not Supported"}], "effectiveLicenses": [{"licenseId": "Not-Declared", "licenseName": "Not Declared"}, {"licenseId": "Not-Supported", "licenseName": "Not Supported"}], "overriddenLicenses": [], "status": "Open", "effectiveLicenseThreats": [{"licenseThreatGroupName": "Sonatype Special Licenses", "licenseThreatGroupLevel": 5, "licenseThreatGroupCategory": "severe"}, {"licenseThreatGroupName": "Sonatype Informational", "licenseThreatGroupLevel": 0, "licenseThreatGroupCategory": "no-threat"}]}, "securityData": {"securityIssues": []}, "remediation": {"versionChanges": [{"type": "next-non-failing", "data": {"component": {"packageUrl": "pkg:a-name/noide@0.0.4", "hash": null, "componentIdentifier": {"format": "a-name", "coordinates": {"name": "noide", "qualifier": "", "version": "0.0.4"}}, "displayName": "noide 0.0.4"}}}]}}, {"packageUrl": "pkg:a-name/contao-components/ace@1.1.6", "hash": "b3195f02fbdac079d96a", "componentIdentifier": {"format": "a-name", "coordinates": {"name": "contao-components/ace", "qualifier": "", "version": "1.1.6"}}, "displayName": "contao-components/ace 1.1.6", "proprietary": false, "matchState": "exact", "pathnames": ["./src/main/webapp/js/ace/mode-xquery.js", "./src/main/webapp/js/ace/worker-css.js", "./target/WebGoatLegacy-6.0.1-war-exec.jar/WebGoat.war/js/ace/mode-xquery.js", "./target/WebGoatLegacy-6.0.1-war-exec.jar/WebGoat.war/js/ace/worker-css.js", "./target/WebGoatLegacy-6.0.1/js/ace/mode-xquery.js", "./target/WebGoatLegacy-6.0.1/js/ace/worker-css.js"], "identificationSource": "Sonatype", "licenseData": {"declaredLicenses": [{"licenseId": "UNSPECIFIED", "licenseName": "Not Provided"}], "observedLicenses": [{"licenseId": "UNSPECIFIED", "licenseName": "Not Provided"}], "effectiveLicenses": [{"licenseId": "UNSPECIFIED", "licenseName": "Not Provided"}], "overriddenLicenses": [], "status": "Open", "effectiveLicenseThreats": [{"licenseThreatGroupName": "Sonatype Special Licenses", "licenseThreatGroupLevel": 5, "licenseThreatGroupCategory": "severe"}]}, "securityData": {"securityIssues": []}, "remediation": {"versionChanges": [{"type": "next-no-violations", "data": {"component": {"packageUrl": "pkg:a-name/contao-components/ace@1.1.6", "hash": null, "componentIdentifier": {"format": "a-name", "coordinates": {"name": "contao-components/ace", "qualifier": "", "version": "1.1.6"}}, "displayName": "contao-components/ace 1.1.6"}}}, {"type": "next-non-failing", "data": {"component": {"packageUrl": "pkg:a-name/contao-components/ace@1.1.6", "hash": null, "componentIdentifier": {"format": "a-name", "coordinates": {"name": "contao-components/ace", "qualifier": "", "version": "1.1.6"}}, "displayName": "contao-components/ace 1.1.6"}}}]}}, {"packageUrl": "pkg:maven/commons-io/commons-io@1.3.2?type=jar", "hash": "b6dde38349ba9bb5e6ea", "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "commons-io", "classifier": "", "extension": "jar", "groupId": "commons-io", "version": "1.3.2"}}, "displayName": "commons-io : commons-io : 1.3.2", "proprietary": false, "matchState": "exact", "pathnames": ["./target/WebGoatLegacy-6.0.1-war-exec.jar/WebGoat.war/WEB-INF/lib/commons-io-1.3.2.jar", "./target/WebGoatLegacy-6.0.1/WEB-INF/lib/commons-io-1.3.2.jar", "WebGoat:WebGoatLegacy:war:6.0.1/commons-io:commons-io:jar:1.3.2"], "identificationSource": "Sonatype", "licenseData": {"declaredLicenses": [{"licenseId": "Apache-2.0", "licenseName": "Apache-2.0"}], "observedLicenses": [{"licenseId": "Apache-2.0", "licenseName": "Apache-2.0"}], "effectiveLicenses": [{"licenseId": "Apache-2.0", "licenseName": "Apache-2.0"}], "overriddenLicenses": [], "status": "Open", "effectiveLicenseThreats": [{"licenseThreatGroupName": "Liberal", "licenseThreatGroupLevel": 0, "licenseThreatGroupCategory": "no-threat"}]}, "securityData": {"securityIssues": [{"source": "sonatype", "reference": "sonatype-2018-0705", "severity": 5.3, "status": "Open", "url": "http://localhost:8070/ui/links/vln/sonatype-2018-0705", "threatCategory": "severe", "cwe": "22", "cvssVector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N", "cvssVectorSource": "sonatype_cvss_3", "deeperData": {"identifier": "sonatype-2018-0705", "vulnIds": ["sonatype-2018-0705", "CVE-2021-29425"], "source": {"shortName": "Sonatype", "longName": "Sonatype Data Research"}, "mainSeverity": {"source": "sonatype_cvss_3", "score": 5.3, "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N"}, "severityScores": [{"source": "cve_cvss_2", "score": 0.0}], "weakness": {"cweSource": "Sonatype", "cweIds": [{"id": "22", "uri": "https://cwe.mitre.org/data/definitions/22.html"}]}, "categories": ["data"], "description": null, "explanationMarkdown": "The `commons-io` package is vulnerable to Path Traversal. The `getPrefixLength` method in `FilenameUtils.class` improperly verifies the hostname value received from user input before processing client requests. An attacker could abuse this behavior by crafting a special payload containing unexpected characters that could allow the access to unintended resources.\n\nNote: This vulnerability has been assigned CVE-2021-29425.", "detectionMarkdown": "The application is vulnerable by using this component.", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue.\n\nNote: If this component is included as a bundled/transitive dependency of another component, there may not be an upgrade path. In this instance, we recommend contacting the maintainers who included the vulnerable package. Alternatively, we recommend investigating alternative components or a potential mitigating control.", "advisories": [{"referenceType": "PROJECT", "url": "https://github.com/apache/commons-io/pull/52"}, {"referenceType": "PROJECT", "url": "https://issues.apache.org/jira/browse/IO-556"}, {"referenceType": "PROJECT", "url": "https://issues.apache.org/jira/browse/IO-559"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}]}, "dependencyData": {"directDependency": true, "innerSource": false}, "remediation": {"versionChanges": [{"type": "next-no-violations", "data": {"component": {"packageUrl": "pkg:maven/commons-io/commons-io@2.7?type=jar", "hash": null, "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "commons-io", "classifier": "", "extension": "jar", "groupId": "commons-io", "version": "2.7"}}, "displayName": "commons-io : commons-io : 2.7"}}}, {"type": "next-non-failing", "data": {"component": {"packageUrl": "pkg:maven/commons-io/commons-io@1.3.2?type=jar", "hash": null, "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "commons-io", "classifier": "", "extension": "jar", "groupId": "commons-io", "version": "1.3.2"}}, "displayName": "commons-io : commons-io : 1.3.2"}}}, {"type": "next-no-violations-with-dependencies", "data": {"component": {"packageUrl": "pkg:maven/commons-io/commons-io@2.7?type=jar", "hash": null, "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "commons-io", "classifier": "", "extension": "jar", "groupId": "commons-io", "version": "2.7"}}, "displayName": "commons-io : commons-io : 2.7"}}}, {"type": "next-non-failing-with-dependencies", "data": {"component": {"packageUrl": "pkg:maven/commons-io/commons-io@1.3.2?type=jar", "hash": null, "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "commons-io", "classifier": "", "extension": "jar", "groupId": "commons-io", "version": "1.3.2"}}, "displayName": "commons-io : commons-io : 1.3.2"}}}]}}, {"packageUrl": "pkg:a-name/org.webjars%20bootstrap@3.1.1", "hash": "b72e6b076e32fb3a87f6", "componentIdentifier": {"format": "a-name", "coordinates": {"name": "org.webjars bootstrap", "qualifier": "", "version": "3.1.1"}}, "displayName": "org.webjars bootstrap 3.1.1", "proprietary": false, "matchState": "exact", "pathnames": ["./newDesign/assets/plugins/bootstrap/js/bootstrap.min.js", "./src/main/webapp/plugins/bootstrap/js/bootstrap.min.js", "./target/WebGoatLegacy-6.0.1-war-exec.jar/WebGoat.war/plugins/bootstrap/js/bootstrap.min.js", "./target/WebGoatLegacy-6.0.1/plugins/bootstrap/js/bootstrap.min.js"], "identificationSource": "Sonatype", "licenseData": {"declaredLicenses": [{"licenseId": "Apache-2.0", "licenseName": "Apache-2.0"}], "observedLicenses": [{"licenseId": "Not-Supported", "licenseName": "Not Supported"}], "effectiveLicenses": [{"licenseId": "Apache-2.0", "licenseName": "Apache-2.0"}], "overriddenLicenses": [], "status": "Open", "effectiveLicenseThreats": [{"licenseThreatGroupName": "Liberal", "licenseThreatGroupLevel": 0, "licenseThreatGroupCategory": "no-threat"}, {"licenseThreatGroupName": "Sonatype Informational", "licenseThreatGroupLevel": 0, "licenseThreatGroupCategory": "no-threat"}]}, "securityData": {"securityIssues": [{"source": "cve", "reference": "CVE-2018-14040", "severity": 6.1, "status": "Open", "url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-14040", "threatCategory": "severe", "cwe": "79", "cvssVector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N", "cvssVectorSource": "cve_cvss_3", "deeperData": {"identifier": "CVE-2018-14040", "vulnIds": ["CVE-2018-14040"], "vulnerabilityLink": "http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2018-14040", "source": {"shortName": "CVE", "longName": "National Vulnerability Database"}, "mainSeverity": {"source": "cve_cvss_3", "score": 6.1, "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N"}, "severityScores": [{"source": "cve_cvss_2", "score": 4.3}, {"source": "sonatype_cvss_3", "score": 6.1}], "weakness": {"cweSource": "CVE", "cweIds": [{"id": "79", "uri": "https://cwe.mitre.org/data/definitions/79.html"}]}, "categories": ["data"], "description": "In Bootstrap before 4.1.2, XSS is possible in the collapse data-parent attribute.", "explanationMarkdown": "Bootstrap is vulnerable to Cross-Site Scripting (XSS).  The `_getParent()` function in the `Collapse` widget does not validate that parent objects do not contain JavaScript before using them to construct an HTML tag.  The contents of the `parent` variable are included in the `data-parent` tag of the resulting HTML, and if it contains JavaScript code the code will be executed.  If user input is used as part of the parent objects in a `Collapse` widget, an attacker can exploit this vulnerability by supplying input containing malicious JavaScript.  When a victim views the resulting HTML the malicious JavaScript will be executed, resulting in Cross-Site Scripting.", "detectionMarkdown": "The application is vulnerable by using this component.", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue.\n\nNote: If this component is included as a bundled/transitive dependency of another component, there may not be an upgrade path. In this instance, we recommend contacting the maintainers who included the vulnerable package. Alternatively, we recommend investigating alternative components or a potential mitigating control.", "advisories": [{"referenceType": "PROJECT", "url": "https://github.com/twbs/bootstrap/issues/26423"}, {"referenceType": "PROJECT", "url": "https://github.com/twbs/bootstrap/issues/26625"}, {"referenceType": "PROJECT", "url": "https://github.com/twbs/bootstrap/pull/26630"}, {"referenceType": "THIRD_PARTY", "url": "https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2018-14040"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "cve", "reference": "CVE-2018-14042", "severity": 6.1, "status": "Open", "url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-14042", "threatCategory": "severe", "cwe": "79", "cvssVector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N", "cvssVectorSource": "cve_cvss_3", "deeperData": {"identifier": "CVE-2018-14042", "vulnIds": ["CVE-2018-14042"], "vulnerabilityLink": "http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2018-14042", "source": {"shortName": "CVE", "longName": "National Vulnerability Database"}, "mainSeverity": {"source": "cve_cvss_3", "score": 6.1, "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N"}, "severityScores": [{"source": "cve_cvss_2", "score": 4.3}, {"source": "sonatype_cvss_3", "score": 6.1}], "weakness": {"cweSource": "CVE", "cweIds": [{"id": "79", "uri": "https://cwe.mitre.org/data/definitions/79.html"}]}, "categories": ["data"], "description": "In Bootstrap before 4.1.2, XSS is possible in the data-container property of tooltip.", "explanationMarkdown": "The `bootstrap` package is vulnerable to Cross-Site Scripting (XSS). The `show()` function in the `tooltip.js` file allows HTML and scripts in the `data-container` tooltip attribute values in the DOM elements without proper sanitization. This can be misused to cause XSS.", "detectionMarkdown": "The application is vulnerable by using this component.", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue.\n\nNote: If this component is included as a bundled/transitive dependency of another component, there may not be an upgrade path. In this instance, we recommend contacting the maintainers who included the vulnerable package. Alternatively, we recommend investigating alternative components or a potential mitigating control.", "advisories": [{"referenceType": "PROJECT", "url": "https://github.com/twbs/bootstrap/issues/26423"}, {"referenceType": "PROJECT", "url": "https://github.com/twbs/bootstrap/issues/26628"}, {"referenceType": "PROJECT", "url": "https://github.com/twbs/bootstrap/pull/26630"}, {"referenceType": "THIRD_PARTY", "url": "https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2018-14042"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "cve", "reference": "CVE-2018-20676", "severity": 6.1, "status": "Open", "url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-20676", "threatCategory": "severe", "cwe": "79", "cvssVector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N", "cvssVectorSource": "cve_cvss_3", "deeperData": {"identifier": "CVE-2018-20676", "vulnIds": ["CVE-2018-20676"], "vulnerabilityLink": "http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2018-20676", "source": {"shortName": "CVE", "longName": "National Vulnerability Database"}, "mainSeverity": {"source": "cve_cvss_3", "score": 6.1, "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N"}, "severityScores": [{"source": "cve_cvss_2", "score": 4.3}, {"source": "sonatype_cvss_3", "score": 6.1}], "weakness": {"cweSource": "CVE", "cweIds": [{"id": "79", "uri": "https://cwe.mitre.org/data/definitions/79.html"}]}, "categories": ["data"], "description": "In Bootstrap before 3.4.0, XSS is possible in the tooltip data-viewport attribute.", "explanationMarkdown": "The `bootstrap` package is vulnerable to Cross-Site Scripting (XSS). The `Tooltip.prototype.init()` function in the `tooltip.js' file does not properly sanitize values for the `data-viewport` attribute, allowing for scripts/HTML. A remote attacker can exploit this by injecting malicious HTML/JavaScript in the `data-viewport` attribute of a tooltip that would then be executed upon hovering the mouse over the tooltip.\n\n*Advisory Deviation Notice:* The Sonatype security research team has discovered that the vulnerability is present beginning from version 3.2.0 and not all versions before 3.4.0 as the advisory states.", "detectionMarkdown": "The application is vulnerable by using this component.", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue.\n\nNote: If this component is included as a bundled/transitive dependency of another component, there may not be an upgrade path. In this instance, we recommend contacting the maintainers who included the vulnerable package. Alternatively, we recommend investigating alternative components or a potential mitigating control.", "advisories": [{"referenceType": "PROJECT", "url": "https://github.com/twbs/bootstrap/issues/26625"}, {"referenceType": "PROJECT", "url": "https://github.com/twbs/bootstrap/issues/26628"}, {"referenceType": "PROJECT", "url": "https://github.com/twbs/bootstrap/issues/27044"}, {"referenceType": "PROJECT", "url": "https://github.com/twbs/bootstrap/issues/27045"}, {"referenceType": "PROJECT", "url": "https://github.com/twbs/bootstrap/issues/27915#issuecomment-452140906"}, {"referenceType": "PROJECT", "url": "https://github.com/twbs/bootstrap/pull/27047"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "cve", "reference": "CVE-2019-8331", "severity": 6.1, "status": "Open", "url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-8331", "threatCategory": "severe", "cwe": "79", "cvssVector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N", "cvssVectorSource": "cve_cvss_3", "deeperData": {"identifier": "CVE-2019-8331", "vulnIds": ["CVE-2019-8331"], "vulnerabilityLink": "http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2019-8331", "source": {"shortName": "CVE", "longName": "National Vulnerability Database"}, "mainSeverity": {"source": "cve_cvss_3", "score": 6.1, "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N"}, "severityScores": [{"source": "cve_cvss_2", "score": 4.3}, {"source": "sonatype_cvss_3", "score": 6.1}], "weakness": {"cweSource": "CVE", "cweIds": [{"id": "79", "uri": "https://cwe.mitre.org/data/definitions/79.html"}]}, "categories": ["data"], "description": "In Bootstrap before 3.4.1 and 4.3.x before 4.3.1, XSS is possible in the tooltip or popover data-template attribute.", "explanationMarkdown": "The `bootstrap` package is vulnerable to Cross-Site Scripting (XSS). The `setElementContent` method in the `tooltip.js` file accepts JavaScript within the input parameters without properly sanitizing the data in the elements that are being rendered on the webpage. This could lead to Cross-Site Scripting (XSS).\n\n*Advisory Deviation Notice:* The Sonatype security research team discovered that the root cause of the vulnerability is in 4.0.0-alpha.2, not in 4.3.0 as the advisory states.\n", "detectionMarkdown": "The application is vulnerable by using this component.", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue.\n\nNote: If this component is included as a bundled/transitive dependency of another component, there may not be an upgrade path. In this instance, we recommend contacting the maintainers who included the vulnerable package. Alternatively, we recommend investigating alternative components or a potential mitigating control.", "advisories": [{"referenceType": "PROJECT", "url": "https://github.com/twbs/bootstrap/pull/28236"}, {"referenceType": "THIRD_PARTY", "url": "https://blog.getbootstrap.com/2019/02/13/bootstrap-4-3-1-and-3-4-1/"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "sonatype", "reference": "sonatype-2016-0129", "severity": 5.4, "status": "Open", "url": "http://localhost:8070/ui/links/vln/sonatype-2016-0129", "threatCategory": "severe", "cwe": "79", "cvssVector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:L/I:L/A:N", "cvssVectorSource": "sonatype_cvss_3", "deeperData": {"identifier": "sonatype-2016-0129", "vulnIds": ["sonatype-2016-0129"], "source": {"shortName": "Sonatype", "longName": "Sonatype Data Research"}, "mainSeverity": {"source": "sonatype_cvss_3", "score": 5.4, "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:L/I:L/A:N"}, "severityScores": [{"source": "cve_cvss_2", "score": 0.0}], "weakness": {"cweSource": "Sonatype", "cweIds": [{"id": "79", "uri": "https://cwe.mitre.org/data/definitions/79.html"}]}, "categories": ["data"], "description": null, "explanationMarkdown": "The `bootstrap` package is vulnerable to Cross-Site Scripting (XSS). The `data-target` attribute in `bootstrap.js` interprets encoded HTML entities as standard HTML entities when `data-target` is based on user supplied input. A remote attacker can exploit this vulnerability by crafting input containing malicious JavaScript, and injecting it into a `data-target` attribute, which results in Cross-Site Scripting (XSS).\n\nNOTE: This vulnerability is for the 3.x versions.  The 4.x versions are covered on CVE-2018-14041.", "detectionMarkdown": "The application is vulnerable by using this component.", "recommendationMarkdown": "There is no non vulnerable version of this package. We recommend investigating alternative components or a potential mitigating control.", "advisories": [{"referenceType": "PROJECT", "url": "https://github.com/twbs/bootstrap/issues/20184"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "sonatype", "reference": "sonatype-2017-0695", "severity": 6.1, "status": "Open", "url": "http://localhost:8070/ui/links/vln/sonatype-2017-0695", "threatCategory": "severe", "cwe": "79", "cvssVector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N", "cvssVectorSource": "sonatype_cvss_3", "deeperData": {"identifier": "sonatype-2017-0695", "vulnIds": ["sonatype-2017-0695", "CVE-2016-10735"], "source": {"shortName": "Sonatype", "longName": "Sonatype Data Research"}, "mainSeverity": {"source": "sonatype_cvss_3", "score": 6.1, "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N"}, "severityScores": [{"source": "cve_cvss_2", "score": 0.0}], "weakness": {"cweSource": "Sonatype", "cweIds": [{"id": "79", "uri": "https://cwe.mitre.org/data/definitions/79.html"}]}, "categories": ["data"], "description": null, "explanationMarkdown": "The `bootstrap` package is vulnerable to Cross-Site Scripting (XSS). Multiple methods in multiple files, as listed below, do not properly sanitize the `data-target` attribute in present in HTML tags. An attacker can exploit this vulnerability to cause Cross-Site Scripting (XSS) attacks.\n\nNOTE: This vulnerability has been assigned CVE-2016-10735.\n\n*Vulnerable File(s) and Function(s)*:\n\npackage/dist/js/bootstrap.js\n\npackage/js/alert.js\n\npackage/js/carousel.js\n\npackage/js/collapse.js\n\npackage/js/modal.js\n\npackage/js/dropdown.js", "detectionMarkdown": "The application is vulnerable by using this component.", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue.", "advisories": [{"referenceType": "PROJECT", "url": "https://github.com/twbs/bootstrap/issues/20184"}, {"referenceType": "PROJECT", "url": "https://github.com/twbs/bootstrap/pull/23687"}, {"referenceType": "THIRD_PARTY", "url": "https://bugzilla.redhat.com/show_bug.cgi?id=1668097"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "sonatype", "reference": "sonatype-2018-0607", "severity": 6.1, "status": "Open", "url": "http://localhost:8070/ui/links/vln/sonatype-2018-0607", "threatCategory": "severe", "cwe": "79", "cvssVector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N", "cvssVectorSource": "sonatype_cvss_3", "deeperData": {"identifier": "sonatype-2018-0607", "vulnIds": ["sonatype-2018-0607"], "source": {"shortName": "Sonatype", "longName": "Sonatype Data Research"}, "mainSeverity": {"source": "sonatype_cvss_3", "score": 6.1, "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N"}, "severityScores": [{"source": "cve_cvss_2", "score": 0.0}], "weakness": {"cweSource": "Sonatype", "cweIds": [{"id": "79", "uri": "https://cwe.mitre.org/data/definitions/79.html"}]}, "categories": ["data"], "description": null, "explanationMarkdown": "The `bootstrap` package is vulnerable to Cross-Site Scripting (XSS). The `show` and `_transitionComplete` functions in `tab.js` and `bootstrap.js` (along with its variants) do not properly sanitize the values prior to assigning them to elements. An attacker can exploit this flaw to cause XSS attacks by injecting malicious characters in the values of these elements.", "detectionMarkdown": "The application is vulnerable by using this component.", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue.\n\nNote: If this component is included as a bundled/transitive dependency of another component, there may not be an upgrade path. In this instance, we recommend contacting the maintainers who included the vulnerable package. Alternatively, we recommend investigating alternative components or a potential mitigating control.", "advisories": [{"referenceType": "PROJECT", "url": "https://github.com/twbs/bootstrap/pull/26460"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}]}, "remediation": {"versionChanges": [{"type": "next-no-violations", "data": {"component": {"packageUrl": "pkg:a-name/org.webjars%20bootstrap@5.3.0", "hash": null, "componentIdentifier": {"format": "a-name", "coordinates": {"name": "org.webjars bootstrap", "qualifier": "", "version": "5.3.0"}}, "displayName": "org.webjars bootstrap 5.3.0"}}}, {"type": "next-non-failing", "data": {"component": {"packageUrl": "pkg:a-name/org.webjars%20bootstrap@3.1.1", "hash": null, "componentIdentifier": {"format": "a-name", "coordinates": {"name": "org.webjars bootstrap", "qualifier": "", "version": "3.1.1"}}, "displayName": "org.webjars bootstrap 3.1.1"}}}]}}, {"packageUrl": "pkg:maven/wsdl4j/wsdl4j@1.5.1?type=jar", "hash": "bd804633b9c2cf062586", "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "wsdl4j", "classifier": "", "extension": "jar", "groupId": "wsdl4j", "version": "1.5.1"}}, "displayName": "wsdl4j : wsdl4j : 1.5.1", "proprietary": false, "matchState": "exact", "pathnames": ["./target/WebGoatLegacy-6.0.1-war-exec.jar/WebGoat.war/WEB-INF/lib/wsdl4j-1.5.1.jar", "./target/WebGoatLegacy-6.0.1/WEB-INF/lib/wsdl4j-1.5.1.jar", "WebGoat:WebGoatLegacy:war:6.0.1/wsdl4j:wsdl4j:jar:1.5.1"], "identificationSource": "Sonatype", "licenseData": {"declaredLicenses": [{"licenseId": "CPL-1.0", "licenseName": "CPL-1.0"}], "observedLicenses": [{"licenseId": "No-Source-License", "licenseName": "No Source License"}], "effectiveLicenses": [{"licenseId": "CPL-1.0", "licenseName": "CPL-1.0"}], "overriddenLicenses": [], "status": "Open", "effectiveLicenseThreats": [{"licenseThreatGroupName": "Sonatype Special Licenses", "licenseThreatGroupLevel": 5, "licenseThreatGroupCategory": "severe"}, {"licenseThreatGroupName": "Weak Copyleft", "licenseThreatGroupLevel": 2, "licenseThreatGroupCategory": "moderate"}]}, "securityData": {"securityIssues": []}, "dependencyData": {"directDependency": true, "innerSource": false}, "remediation": {"versionChanges": [{"type": "next-non-failing", "data": {"component": {"packageUrl": "pkg:maven/wsdl4j/wsdl4j@1.5.1?type=jar", "hash": null, "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "wsdl4j", "classifier": "", "extension": "jar", "groupId": "wsdl4j", "version": "1.5.1"}}, "displayName": "wsdl4j : wsdl4j : 1.5.1"}}}, {"type": "next-non-failing-with-dependencies", "data": {"component": {"packageUrl": "pkg:maven/wsdl4j/wsdl4j@1.5.1?type=jar", "hash": null, "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "wsdl4j", "classifier": "", "extension": "jar", "groupId": "wsdl4j", "version": "1.5.1"}}, "displayName": "wsdl4j : wsdl4j : 1.5.1"}}}]}}, {"packageUrl": "pkg:maven/com.fasterxml.jackson.core/jackson-annotations@2.0.4?type=jar", "hash": "bf8ae811948b74ada97f", "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "jackson-annotations", "classifier": "", "extension": "jar", "groupId": "com.fasterxml.jackson.core", "version": "2.0.4"}}, "displayName": "com.fasterxml.jackson.core : jackson-annotations : 2.0.4", "proprietary": false, "matchState": "exact", "pathnames": ["./target/WebGoatLegacy-6.0.1-war-exec.jar/WebGoat.war/WEB-INF/lib/jackson-annotations-2.0.4.jar", "./target/WebGoatLegacy-6.0.1/WEB-INF/lib/jackson-annotations-2.0.4.jar", "WebGoat:WebGoatLegacy:war:6.0.1/com.fasterxml.jackson.core:jackson-annotations:jar:2.0.4"], "identificationSource": "Sonatype", "licenseData": {"declaredLicenses": [{"licenseId": "Apache-2.0", "licenseName": "Apache-2.0"}], "observedLicenses": [{"licenseId": "No-Source-License", "licenseName": "No Source License"}], "effectiveLicenses": [{"licenseId": "Apache-2.0", "licenseName": "Apache-2.0"}], "overriddenLicenses": [], "status": "Open", "effectiveLicenseThreats": [{"licenseThreatGroupName": "Liberal", "licenseThreatGroupLevel": 0, "licenseThreatGroupCategory": "no-threat"}, {"licenseThreatGroupName": "Sonatype Special Licenses", "licenseThreatGroupLevel": 5, "licenseThreatGroupCategory": "severe"}]}, "securityData": {"securityIssues": []}, "dependencyData": {"directDependency": false, "innerSource": false, "parentComponentPurls": ["pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.0.4?type=jar"]}, "remediation": {"versionChanges": [{"type": "next-no-violations", "data": {"component": {"packageUrl": "pkg:maven/com.fasterxml.jackson.core/jackson-annotations@2.9.7?type=jar", "hash": null, "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "jackson-annotations", "classifier": "", "extension": "jar", "groupId": "com.fasterxml.jackson.core", "version": "2.9.7"}}, "displayName": "com.fasterxml.jackson.core : jackson-annotations : 2.9.7"}}}, {"type": "next-non-failing", "data": {"component": {"packageUrl": "pkg:maven/com.fasterxml.jackson.core/jackson-annotations@2.0.4?type=jar", "hash": null, "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "jackson-annotations", "classifier": "", "extension": "jar", "groupId": "com.fasterxml.jackson.core", "version": "2.0.4"}}, "displayName": "com.fasterxml.jackson.core : jackson-annotations : 2.0.4"}}}, {"type": "next-no-violations-with-dependencies", "data": {"component": {"packageUrl": "pkg:maven/com.fasterxml.jackson.core/jackson-annotations@2.9.7?type=jar", "hash": null, "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "jackson-annotations", "classifier": "", "extension": "jar", "groupId": "com.fasterxml.jackson.core", "version": "2.9.7"}}, "displayName": "com.fasterxml.jackson.core : jackson-annotations : 2.9.7"}}}, {"type": "next-non-failing-with-dependencies", "data": {"component": {"packageUrl": "pkg:maven/com.fasterxml.jackson.core/jackson-annotations@2.0.4?type=jar", "hash": null, "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "jackson-annotations", "classifier": "", "extension": "jar", "groupId": "com.fasterxml.jackson.core", "version": "2.0.4"}}, "displayName": "com.fasterxml.jackson.core : jackson-annotations : 2.0.4"}}}]}}, {"packageUrl": "pkg:a-name/angular-animate@1.2.16", "hash": "cdcfabcdb1617b1127f1", "componentIdentifier": {"format": "a-name", "coordinates": {"name": "angular-animate", "qualifier": "", "version": "1.2.16"}}, "displayName": "angular-animate 1.2.16", "proprietary": false, "matchState": "exact", "pathnames": ["./src/main/webapp/js/angular/angular-animate.min.js", "./target/WebGoatLegacy-6.0.1-war-exec.jar/WebGoat.war/js/angular/angular-animate.min.js", "./target/WebGoatLegacy-6.0.1/js/angular/angular-animate.min.js"], "identificationSource": "Sonatype", "licenseData": {"declaredLicenses": [{"licenseId": "Not-Declared", "licenseName": "Not Declared"}], "observedLicenses": [{"licenseId": "Not-Supported", "licenseName": "Not Supported"}], "effectiveLicenses": [{"licenseId": "Not-Declared", "licenseName": "Not Declared"}, {"licenseId": "Not-Supported", "licenseName": "Not Supported"}], "overriddenLicenses": [], "status": "Open", "effectiveLicenseThreats": [{"licenseThreatGroupName": "Sonatype Special Licenses", "licenseThreatGroupLevel": 5, "licenseThreatGroupCategory": "severe"}, {"licenseThreatGroupName": "Sonatype Informational", "licenseThreatGroupLevel": 0, "licenseThreatGroupCategory": "no-threat"}]}, "securityData": {"securityIssues": []}, "remediation": {"versionChanges": [{"type": "next-no-violations", "data": {"component": {"packageUrl": "pkg:a-name/angular-animate@1.2.19-build.256", "hash": null, "componentIdentifier": {"format": "a-name", "coordinates": {"name": "angular-animate", "qualifier": "", "version": "1.2.19-build.256"}}, "displayName": "angular-animate 1.2.19-build.256"}}}, {"type": "next-non-failing", "data": {"component": {"packageUrl": "pkg:a-name/angular-animate@1.2.16", "hash": null, "componentIdentifier": {"format": "a-name", "coordinates": {"name": "angular-animate", "qualifier": "", "version": "1.2.16"}}, "displayName": "angular-animate 1.2.16"}}}]}}, {"packageUrl": "pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.0.4?type=jar", "hash": "cf05e1449bccc5dae87b", "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "jackson-databind", "classifier": "", "extension": "jar", "groupId": "com.fasterxml.jackson.core", "version": "2.0.4"}}, "displayName": "com.fasterxml.jackson.core : jackson-databind : 2.0.4", "proprietary": false, "matchState": "exact", "pathnames": ["./target/WebGoatLegacy-6.0.1-war-exec.jar/WebGoat.war/WEB-INF/lib/jackson-databind-2.0.4.jar", "./target/WebGoatLegacy-6.0.1/WEB-INF/lib/jackson-databind-2.0.4.jar", "WebGoat:WebGoatLegacy:war:6.0.1/com.fasterxml.jackson.core:jackson-databind:jar:2.0.4"], "identificationSource": "Sonatype", "licenseData": {"declaredLicenses": [{"licenseId": "LGPL-2.1", "licenseName": "LGPL-2.1"}, {"licenseId": "Apache-2.0", "licenseName": "Apache-2.0"}], "observedLicenses": [{"licenseId": "See-License-Clause", "licenseName": "See-License-Clause"}], "effectiveLicenses": [{"licenseId": "LGPL-2.1", "licenseName": "LGPL-2.1"}, {"licenseId": "Apache-2.0", "licenseName": "Apache-2.0"}, {"licenseId": "See-License-Clause", "licenseName": "See-License-Clause"}], "overriddenLicenses": [], "status": "Open", "effectiveLicenseThreats": [{"licenseThreatGroupName": "Liberal", "licenseThreatGroupLevel": 0, "licenseThreatGroupCategory": "no-threat"}, {"licenseThreatGroupName": "Weak Copyleft", "licenseThreatGroupLevel": 2, "licenseThreatGroupCategory": "moderate"}, {"licenseThreatGroupName": "Non Standard", "licenseThreatGroupLevel": 6, "licenseThreatGroupCategory": "severe"}]}, "securityData": {"securityIssues": [{"source": "cve", "reference": "CVE-2017-7525", "severity": 9.8, "status": "Open", "url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-7525", "threatCategory": "critical", "cwe": "184", "cvssVector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H", "cvssVectorSource": "cve_cvss_3", "deeperData": {"identifier": "CVE-2017-7525", "vulnIds": ["CVE-2017-7525"], "vulnerabilityLink": "http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2017-7525", "source": {"shortName": "CVE", "longName": "National Vulnerability Database"}, "mainSeverity": {"source": "cve_cvss_3", "score": 9.8, "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"}, "severityScores": [{"source": "cve_cvss_2", "score": 7.5}, {"source": "sonatype_cvss_3", "score": 8.5}], "weakness": {"cweSource": "CVE", "cweIds": [{"id": "184", "uri": "https://cwe.mitre.org/data/definitions/184.html"}]}, "categories": ["data"], "description": "A deserialization flaw was discovered in the jackson-databind, versions before 2.6.7.1, 2.7.9.1 and 2.8.9, which could allow an unauthenticated user to perform code execution by sending the maliciously crafted input to the readValue method of the ObjectMapper.", "explanationMarkdown": "`jackson-databind` is vulnerable to Remote Code Execution (RCE). The `createBeanDeserializer()` function in the `BeanDeserializerFactory` class allows untrusted Java objects to be deserialized. A remote attacker can exploit this by uploading a malicious serialized object that will result in RCE if the application attempts to deserialize it.\n\nNOTE: This vulnerability is also tracked by the Apache Struts team as [S2-055](https://cwiki.apache.org/confluence/display/WW/S2-055).\n\nNOTE: This CVE is a part of the series of CVEs (e.g. CVE-2019-16943,  CVE-2017-15095, CVE-2017-17485, CVE-2018-5968, ...) that have been, and continue to be released by the Jackson Databind project, for the exact same deserialization vulnerability. To reduce unnecessary noise arising from duplicates and false positives, we have strategically implicated components so that they show the minimal number of CVEs necessary to represent the same vulnerability.", "detectionMarkdown": "The application is vulnerable by using this component, when default typing is enabled.\r\n\r\nNote: Spring Security has provided their own fix for this vulnerability ([CVE-2017-4995](https://pivotal.io/security/cve-2017-4995)). If this component is being used as part of Spring Security, then you are not vulnerable if you are running Spring Security 4.2.3.RELEASE or greater for 4.x or Spring Security 5.0.0.M2 or greater for 5.x.", "recommendationMarkdown": "*Update*: As of version 2.10.0, Jackson now provides a safe default typing solution that fully mitigates this vulnerability.\n\nReference: [https://medium.com/@cowtowncoder/jackson-2-10-features-cd880674d8a2](https://medium.com/@cowtowncoder/jackson-2-10-features-cd880674d8a2)\n\nIn order to mitigate this vulnerability, we recommend upgrading to at least version 2.10.0 and changing any usages of `enableDefaultTyping()` to `activateDefaultTyping()`.\n\nAlternatively, if upgrading is not a viable option, this vulnerability can be mitigated by disabling default typing. Instead, you will need to implement your own:\n\n>It is also possible to customize global defaulting, using ObjectMapper.setDefaultTyping(...) -- you just have to implement your own TypeResolverBuilder (which is not very difficult); and by doing so, can actually configure all aspects of type information. Builder itself is just a short-cut for building actual handlers.\n\nReference: [https://github.com/FasterXML/jackson-docs/wiki/JacksonPolymorphicDeserialization](https://github.com/FasterXML/jackson-docs/wiki/JacksonPolymorphicDeserialization)\n\nExamples of implementing your own typing can be found by looking at [Spring Security's fix](https://github.com/spring-projects/spring-security/commit/947d11f433b78294942cb5ea56e8aa5c3a0ca439) or [this Stack Overflow article](https://stackoverflow.com/questions/12353774/how-to-customize-jackson-type-information-mechanism).", "advisories": [{"referenceType": "PROJECT", "url": "https://github.com/FasterXML/jackson-databind/issues/1599"}, {"referenceType": "THIRD_PARTY", "url": "https://blog.sonatype.com/jackson-databind-remote-code-execution"}, {"referenceType": "THIRD_PARTY", "url": "https://blog.sonatype.com/jackson-databind-the-end-of-the-blacklist"}, {"referenceType": "THIRD_PARTY", "url": "https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2017-7525"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "cve", "reference": "CVE-2020-36518", "severity": 7.5, "status": "Open", "url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36518", "threatCategory": "critical", "cwe": "787", "cvssVector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H", "cvssVectorSource": "cve_cvss_3", "deeperData": {"identifier": "CVE-2020-36518", "vulnIds": ["CVE-2020-36518"], "vulnerabilityLink": "http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2020-36518", "source": {"shortName": "CVE", "longName": "National Vulnerability Database"}, "mainSeverity": {"source": "cve_cvss_3", "score": 7.5, "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}, "severityScores": [{"source": "cve_cvss_2", "score": 5.0}, {"source": "sonatype_cvss_3", "score": 7.5}], "weakness": {"cweSource": "CVE", "cweIds": [{"id": "787", "uri": "https://cwe.mitre.org/data/definitions/787.html"}]}, "categories": ["data"], "description": "jackson-databind before 2.13.0 allows a Java StackOverflow exception and denial of service via a large depth of nested objects.", "explanationMarkdown": "The `jackson-databind` package is vulnerable to a Denial of Service (DoS) attack. The `deserialize()` method in the `UntypedObjectDeserializer` and `UntypedObjectDeserializer$Vanilla` classes fails to restrict recursion when deserializing nested untyped or generic objects. A remote attacker who can supply data to be deserialized by an affected application can exploit this vulnerability to cause the JVM to consume all available memory, resulting in a `StackOverflow` exception and ultimately a DoS condition.\n\n*Advisory Deviation Notice*: The Sonatype security research team has discovered that this vulnerability was fixed in versions 2.13.2.1 and 2.12.6.1 and not 2.13.0 as stated in the advisory.", "detectionMarkdown": "The application is vulnerable by using this component to deserialize nested generic or untyped objects from untrusted sources.", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue.\n\nNote: If this component is included as a bundled/transitive dependency of another component, there may not be an upgrade path. In this instance, we recommend contacting the maintainers who included the vulnerable package. Alternatively, we recommend investigating alternative components or a potential mitigating control.", "advisories": [{"referenceType": "PROJECT", "url": "https://github.com/FasterXML/jackson-databind/issues/2816"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "cve", "reference": "CVE-2022-42004", "severity": 7.5, "status": "Open", "url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-42004", "threatCategory": "critical", "cwe": "502", "cvssVector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H", "cvssVectorSource": "cve_cvss_3", "deeperData": {"identifier": "CVE-2022-42004", "vulnIds": ["CVE-2022-42004"], "vulnerabilityLink": "http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2022-42004", "source": {"shortName": "CVE", "longName": "National Vulnerability Database"}, "mainSeverity": {"source": "cve_cvss_3", "score": 7.5, "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}, "severityScores": [{"source": "cve_cvss_2", "score": 0.0}, {"source": "sonatype_cvss_3", "score": 7.5}], "weakness": {"cweSource": "CVE", "cweIds": [{"id": "502", "uri": "https://cwe.mitre.org/data/definitions/502.html"}]}, "categories": ["configuration", "data"], "description": "In FasterXML jackson-databind before 2.13.4, resource exhaustion can occur because of a lack of a check in BeanDeserializer._deserializeFromArray to prevent use of deeply nested arrays. An application is vulnerable only with certain customized choices for deserialization.", "explanationMarkdown": "The `jackson-databind` package is vulnerable to Denial of Service (DoS) attacks. The `_deserializeFromArray()` method in the `BeanDeserializer` class fails to properly detect deeply-nested arrays, which might allow malicious actors to exhaust system resources. An attacker can exploit this vulnerability by supplying an affected instance with specially-crafted data to cause a DoS condition.", "detectionMarkdown": "The application is vulnerable by using this component with certain customized choices for deserialization.", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue.\n\nNote: If this component is included as a bundled/transitive dependency of another component, there may not be an upgrade path. In this instance, we recommend contacting the maintainers who included the vulnerable package. Alternatively, we recommend investigating alternative components or a potential mitigating control.", "advisories": [{"referenceType": "PROJECT", "url": "https://github.com/FasterXML/jackson-databind/issues/3582"}, {"referenceType": "THIRD_PARTY", "url": "https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=50490"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "sonatype", "reference": "sonatype-2016-0593", "severity": 6.3, "status": "Open", "url": "http://localhost:8070/ui/links/vln/sonatype-2016-0593", "threatCategory": "severe", "cwe": "611", "cvssVector": "CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:L", "cvssVectorSource": "sonatype_cvss_3", "deeperData": {"identifier": "sonatype-2016-0593", "vulnIds": ["sonatype-2016-0593"], "source": {"shortName": "Sonatype", "longName": "Sonatype Data Research"}, "mainSeverity": {"source": "sonatype_cvss_3", "score": 6.3, "vector": "CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:L"}, "severityScores": [{"source": "cve_cvss_2", "score": 0.0}], "weakness": {"cweSource": "Sonatype", "cweIds": [{"id": "611", "uri": "https://cwe.mitre.org/data/definitions/611.html"}]}, "categories": ["data"], "description": null, "explanationMarkdown": "The `jackson-databind` package is vulnerable to XML eXternal Entity Reference ('XXE') attacks. The `parserFactory` object, an instance of the `DocumentBuilderFactory` type in the `DOMDeserializer.class` file does not prevent expansion of external entities by default. An attacker can exploit this vulnerability by submitting crafted XML which when parsed by the application leads to XXE attacks and further security issues.", "detectionMarkdown": "The application is vulnerable by using this component.", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue.", "advisories": [{"referenceType": "PROJECT", "url": "https://github.com/FasterXML/jackson-databind/issues/1279"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}]}, "dependencyData": {"directDependency": true, "innerSource": false}, "remediation": {"versionChanges": [{"type": "next-no-violations", "data": {"component": {"packageUrl": "pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.12.7.1?type=jar", "hash": null, "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "jackson-databind", "classifier": "", "extension": "jar", "groupId": "com.fasterxml.jackson.core", "version": "2.12.7.1"}}, "displayName": "com.fasterxml.jackson.core : jackson-databind : 2.12.7.1"}}}, {"type": "next-non-failing", "data": {"component": {"packageUrl": "pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.0.4?type=jar", "hash": null, "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "jackson-databind", "classifier": "", "extension": "jar", "groupId": "com.fasterxml.jackson.core", "version": "2.0.4"}}, "displayName": "com.fasterxml.jackson.core : jackson-databind : 2.0.4"}}}, {"type": "next-no-violations-with-dependencies", "data": {"component": {"packageUrl": "pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.15.0-rc1?type=jar", "hash": null, "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "jackson-databind", "classifier": "", "extension": "jar", "groupId": "com.fasterxml.jackson.core", "version": "2.15.0-rc1"}}, "displayName": "com.fasterxml.jackson.core : jackson-databind : 2.15.0-rc1"}}}, {"type": "next-non-failing-with-dependencies", "data": {"component": {"packageUrl": "pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.0.4?type=jar", "hash": null, "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "jackson-databind", "classifier": "", "extension": "jar", "groupId": "com.fasterxml.jackson.core", "version": "2.0.4"}}, "displayName": "com.fasterxml.jackson.core : jackson-databind : 2.0.4"}}}]}}, {"packageUrl": "pkg:a-name/org.owasp.webgoat%20webgoat-container@7.0", "hash": "cf589d4746179e58dc8e", "componentIdentifier": {"format": "a-name", "coordinates": {"name": "org.owasp.webgoat webgoat-container", "qualifier": "", "version": "7.0"}}, "displayName": "org.owasp.webgoat webgoat-container 7.0", "proprietary": false, "matchState": "exact", "pathnames": ["./newDesign/assets/plugins/bootstrap-wysihtml5/js/wysihtml5-0.3.0.js", "./src/main/webapp/js/DOMXSS_backup.js", "./src/main/webapp/js/application.js", "./src/main/webapp/js/instructor/DOMXSS_i.js", "./src/main/webapp/js/makeWindow.js", "./src/main/webapp/js/toggle.js", "./src/main/webapp/lessonJS/DOMXSS.js", "./src/main/webapp/plugins/bootstrap-wysihtml5/js/wysihtml5-0.3.0.js", "./target/WebGoatLegacy-6.0.1-war-exec.jar/WebGoat.war/js/DOMXSS_backup.js", "./target/WebGoatLegacy-6.0.1-war-exec.jar/WebGoat.war/js/application.js", "./target/WebGoatLegacy-6.0.1-war-exec.jar/WebGoat.war/js/instructor/DOMXSS_i.js", "./target/WebGoatLegacy-6.0.1-war-exec.jar/WebGoat.war/js/makeWindow.js", "./target/WebGoatLegacy-6.0.1-war-exec.jar/WebGoat.war/js/toggle.js", "./target/WebGoatLegacy-6.0.1-war-exec.jar/WebGoat.war/lessonJS/DOMXSS.js", "./target/WebGoatLegacy-6.0.1-war-exec.jar/WebGoat.war/plugins/bootstrap-wysihtml5/js/wysihtml5-0.3.0.js", "./target/WebGoatLegacy-6.0.1/js/DOMXSS_backup.js", "./target/WebGoatLegacy-6.0.1/js/application.js", "./target/WebGoatLegacy-6.0.1/js/instructor/DOMXSS_i.js", "./target/WebGoatLegacy-6.0.1/js/makeWindow.js", "./target/WebGoatLegacy-6.0.1/js/toggle.js", "./target/WebGoatLegacy-6.0.1/lessonJS/DOMXSS.js", "./target/WebGoatLegacy-6.0.1/plugins/bootstrap-wysihtml5/js/wysihtml5-0.3.0.js"], "identificationSource": "Sonatype", "licenseData": {"declaredLicenses": [{"licenseId": "GPL-2.0", "licenseName": "GPL-2.0"}], "observedLicenses": [{"licenseId": "Not-Supported", "licenseName": "Not Supported"}], "effectiveLicenses": [{"licenseId": "GPL-2.0", "licenseName": "GPL-2.0"}], "overriddenLicenses": [], "status": "Open", "effectiveLicenseThreats": [{"licenseThreatGroupName": "Copyleft", "licenseThreatGroupLevel": 9, "licenseThreatGroupCategory": "critical"}, {"licenseThreatGroupName": "Sonatype Informational", "licenseThreatGroupLevel": 0, "licenseThreatGroupCategory": "no-threat"}]}, "securityData": {"securityIssues": []}, "remediation": {"versionChanges": [{"type": "next-non-failing", "data": {"component": {"packageUrl": "pkg:a-name/org.owasp.webgoat%20webgoat-container@7.0", "hash": null, "componentIdentifier": {"format": "a-name", "coordinates": {"name": "org.owasp.webgoat webgoat-container", "qualifier": "", "version": "7.0"}}, "displayName": "org.owasp.webgoat webgoat-container 7.0"}}}]}}, {"packageUrl": "pkg:maven/org.springframework/spring-core@3.2.4.RELEASE?type=jar", "hash": "d36bed1dbca3f725bb5a", "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "spring-core", "classifier": "", "extension": "jar", "groupId": "org.springframework", "version": "3.2.4.RELEASE"}}, "displayName": "org.springframework : spring-core : 3.2.4.RELEASE", "proprietary": false, "matchState": "exact", "pathnames": ["./target/WebGoatLegacy-6.0.1-war-exec.jar/WebGoat.war/WEB-INF/lib/spring-core-3.2.4.RELEASE.jar", "./target/WebGoatLegacy-6.0.1/WEB-INF/lib/spring-core-3.2.4.RELEASE.jar", "WebGoat:WebGoatLegacy:war:6.0.1/org.springframework:spring-core:jar:3.2.4.RELEASE"], "identificationSource": "Sonatype", "licenseData": {"declaredLicenses": [{"licenseId": "Apache-2.0", "licenseName": "Apache-2.0"}], "observedLicenses": [{"licenseId": "Apache-2.0", "licenseName": "Apache-2.0"}], "effectiveLicenses": [{"licenseId": "Apache-2.0", "licenseName": "Apache-2.0"}], "overriddenLicenses": [], "status": "Open", "effectiveLicenseThreats": [{"licenseThreatGroupName": "Liberal", "licenseThreatGroupLevel": 0, "licenseThreatGroupCategory": "no-threat"}]}, "securityData": {"securityIssues": [{"source": "cve", "reference": "CVE-2014-3578", "severity": 5.0, "status": "Open", "url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2014-3578", "threatCategory": "severe", "cwe": "22", "cvssVector": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "cvssVectorSource": "cve_cvss_2", "deeperData": {"identifier": "CVE-2014-3578", "vulnIds": ["CVE-2014-3578"], "vulnerabilityLink": "http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2014-3578", "source": {"shortName": "CVE", "longName": "National Vulnerability Database"}, "mainSeverity": {"source": "cve_cvss_2", "score": 5.0, "vector": "AV:N/AC:L/Au:N/C:P/I:N/A:N"}, "severityScores": [{"source": "sonatype_cvss_3", "score": 5.3}], "weakness": {"cweSource": "CVE", "cweIds": [{"id": "22", "uri": "https://cwe.mitre.org/data/definitions/22.html"}]}, "categories": ["data", "functional"], "description": "Directory traversal vulnerability in Pivotal Spring Framework 3.x before 3.2.9 and 4.0 before 4.0.5 allows remote attackers to read arbitrary files via a crafted URL.", "explanationMarkdown": "Spring Framework ResourceHttpRequestHandler functionality does not properly enforce checks for directory traversal. Use of `:` (colon) in static resource URLs can circumvent `isInvalidPath` check in ResourceHttpRequestHandler. Remote attackers can exploit this flaw to access arbitrary files.", "detectionMarkdown": "You are vulnerable by using this component.", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue.", "advisories": [{"referenceType": "PROJECT", "url": "https://jira.spring.io/browse/SPR-12354"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "sonatype", "reference": "sonatype-2015-0327", "severity": 3.7, "status": "Open", "url": "http://localhost:8070/ui/links/vln/sonatype-2015-0327", "threatCategory": "moderate", "cwe": "400", "cvssVector": "CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L", "cvssVectorSource": "sonatype_cvss_3", "deeperData": {"identifier": "sonatype-2015-0327", "vulnIds": ["sonatype-2015-0327"], "source": {"shortName": "Sonatype", "longName": "Sonatype Data Research"}, "mainSeverity": {"source": "sonatype_cvss_3", "score": 3.7, "vector": "CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L"}, "severityScores": [{"source": "cve_cvss_2", "score": 0.0}], "weakness": {"cweSource": "Sonatype", "cweIds": [{"id": "400", "uri": "https://cwe.mitre.org/data/definitions/400.html"}]}, "categories": ["data"], "description": null, "explanationMarkdown": "The `org.springframework:spring-core` package is vulnerable to Denial of Service (DoS). The `simpleMatch` method in `PatternMatchUtils.class` file performs string-pattern matches in a manner which may lead to an infinite loop for certain inputs. An attacker can exploit this vulnerability to cause application crashes, using crafted strings.", "detectionMarkdown": "The application is vulnerable by using this component.", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue.\n\nNote: If this component is included as a bundled/transitive dependency of another component, there may not be an upgrade path. In this instance, we recommend contacting the maintainers who included the vulnerable package. Alternatively, we recommend investigating alternative components or a potential mitigating control.", "advisories": [{"referenceType": "PROJECT", "url": "https://github.com/spring-projects/spring-framework/issues/17563"}, {"referenceType": "PROJECT", "url": "https://jira.spring.io/browse/SPR-12971?redirect=false"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}]}, "dependencyData": {"directDependency": true, "innerSource": false}, "remediation": {"versionChanges": [{"type": "next-no-violations", "data": {"component": {"packageUrl": "pkg:maven/org.springframework/spring-core@4.3.19.RELEASE?type=jar", "hash": null, "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "spring-core", "classifier": "", "extension": "jar", "groupId": "org.springframework", "version": "4.3.19.RELEASE"}}, "displayName": "org.springframework : spring-core : 4.3.19.RELEASE"}}}, {"type": "next-non-failing", "data": {"component": {"packageUrl": "pkg:maven/org.springframework/spring-core@3.2.4.RELEASE?type=jar", "hash": null, "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "spring-core", "classifier": "", "extension": "jar", "groupId": "org.springframework", "version": "3.2.4.RELEASE"}}, "displayName": "org.springframework : spring-core : 3.2.4.RELEASE"}}}, {"type": "next-no-violations-with-dependencies", "data": {"component": {"packageUrl": "pkg:maven/org.springframework/spring-core@5.0.8.RELEASE?type=jar", "hash": null, "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "spring-core", "classifier": "", "extension": "jar", "groupId": "org.springframework", "version": "5.0.8.RELEASE"}}, "displayName": "org.springframework : spring-core : 5.0.8.RELEASE"}}}, {"type": "next-non-failing-with-dependencies", "data": {"component": {"packageUrl": "pkg:maven/org.springframework/spring-core@3.2.4.RELEASE?type=jar", "hash": null, "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "spring-core", "classifier": "", "extension": "jar", "groupId": "org.springframework", "version": "3.2.4.RELEASE"}}, "displayName": "org.springframework : spring-core : 3.2.4.RELEASE"}}}]}}, {"packageUrl": "pkg:maven/javax.transaction/javax.transaction-api@1.2?type=jar", "hash": "d81aff979d603edd90dc", "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "javax.transaction-api", "classifier": "", "extension": "jar", "groupId": "javax.transaction", "version": "1.2"}}, "displayName": "javax.transaction : javax.transaction-api : 1.2", "proprietary": false, "matchState": "exact", "pathnames": ["./target/WebGoatLegacy-6.0.1-war-exec.jar/WebGoat.war/WEB-INF/lib/javax.transaction-api-1.2.jar", "./target/WebGoatLegacy-6.0.1/WEB-INF/lib/javax.transaction-api-1.2.jar", "WebGoat:WebGoatLegacy:war:6.0.1/javax.transaction:javax.transaction-api:jar:1.2"], "identificationSource": "Sonatype", "licenseData": {"declaredLicenses": [{"licenseId": "CDDL-1.1", "licenseName": "CDDL-1.1"}, {"licenseId": "Generic-Open-Source-Clause", "licenseName": "Generic-Open-Source-Clause"}, {"licenseId": "GPL-2.0-with-classpath-exception", "licenseName": "GPL-2.0-with-classpath-exception"}], "observedLicenses": [{"licenseId": "GPL-2.0-with-classpath-exception", "licenseName": "GPL-2.0-with-classpath-exception"}, {"licenseId": "CDDL-1.0", "licenseName": "CDDL-1.0"}, {"licenseId": "CDDL-1.0-GPL-2.0-CPE", "licenseName": "CDDL-1.0 or GPL-2.0-CPE"}], "effectiveLicenses": [{"licenseId": "CDDL-1.1", "licenseName": "CDDL-1.1"}, {"licenseId": "Generic-Open-Source-Clause", "licenseName": "Generic-Open-Source-Clause"}, {"licenseId": "GPL-2.0-with-classpath-exception", "licenseName": "GPL-2.0-with-classpath-exception"}, {"licenseId": "CDDL-1.0", "licenseName": "CDDL-1.0"}, {"licenseId": "CDDL-1.0-GPL-2.0-CPE", "licenseName": "CDDL-1.0 or GPL-2.0-CPE"}], "overriddenLicenses": [], "status": "Open", "effectiveLicenseThreats": [{"licenseThreatGroupName": "Copyleft", "licenseThreatGroupLevel": 9, "licenseThreatGroupCategory": "critical"}, {"licenseThreatGroupName": "Liberal", "licenseThreatGroupLevel": 0, "licenseThreatGroupCategory": "no-threat"}, {"licenseThreatGroupName": "Weak Copyleft", "licenseThreatGroupLevel": 2, "licenseThreatGroupCategory": "moderate"}]}, "securityData": {"securityIssues": []}, "dependencyData": {"directDependency": true, "innerSource": false}, "remediation": {"versionChanges": [{"type": "next-non-failing", "data": {"component": {"packageUrl": "pkg:maven/javax.transaction/javax.transaction-api@1.2?type=jar", "hash": null, "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "javax.transaction-api", "classifier": "", "extension": "jar", "groupId": "javax.transaction", "version": "1.2"}}, "displayName": "javax.transaction : javax.transaction-api : 1.2"}}}, {"type": "next-non-failing-with-dependencies", "data": {"component": {"packageUrl": "pkg:maven/javax.transaction/javax.transaction-api@1.2?type=jar", "hash": null, "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "javax.transaction-api", "classifier": "", "extension": "jar", "groupId": "javax.transaction", "version": "1.2"}}, "displayName": "javax.transaction : javax.transaction-api : 1.2"}}}]}}, {"packageUrl": "pkg:a-name/org.webjars%20ace@1.1.3", "hash": "dcbcd45a2e6101943bf3", "componentIdentifier": {"format": "a-name", "coordinates": {"name": "org.webjars ace", "qualifier": "", "version": "1.1.3"}}, "displayName": "org.webjars ace 1.1.3", "proprietary": false, "matchState": "exact", "pathnames": ["./src/main/webapp/js/ace/theme-tomorrow_night_bright.js", "./src/main/webapp/js/ace/theme-vibrant_ink.js", "./target/WebGoatLegacy-6.0.1-war-exec.jar/WebGoat.war/js/ace/theme-tomorrow_night_bright.js", "./target/WebGoatLegacy-6.0.1-war-exec.jar/WebGoat.war/js/ace/theme-vibrant_ink.js", "./target/WebGoatLegacy-6.0.1/js/ace/theme-tomorrow_night_bright.js", "./target/WebGoatLegacy-6.0.1/js/ace/theme-vibrant_ink.js"], "identificationSource": "Sonatype", "licenseData": {"declaredLicenses": [{"licenseId": "Apache-2.0", "licenseName": "Apache-2.0"}, {"licenseId": "MIT", "licenseName": "MIT"}], "observedLicenses": [{"licenseId": "Not-Supported", "licenseName": "Not Supported"}], "effectiveLicenses": [{"licenseId": "Apache-2.0", "licenseName": "Apache-2.0"}, {"licenseId": "MIT", "licenseName": "MIT"}], "overriddenLicenses": [], "status": "Open", "effectiveLicenseThreats": [{"licenseThreatGroupName": "Liberal", "licenseThreatGroupLevel": 0, "licenseThreatGroupCategory": "no-threat"}, {"licenseThreatGroupName": "Sonatype Informational", "licenseThreatGroupLevel": 0, "licenseThreatGroupCategory": "no-threat"}]}, "securityData": {"securityIssues": []}, "remediation": {"versionChanges": [{"type": "next-no-violations", "data": {"component": {"packageUrl": "pkg:a-name/org.webjars%20ace@1.1.3", "hash": null, "componentIdentifier": {"format": "a-name", "coordinates": {"name": "org.webjars ace", "qualifier": "", "version": "1.1.3"}}, "displayName": "org.webjars ace 1.1.3"}}}, {"type": "next-non-failing", "data": {"component": {"packageUrl": "pkg:a-name/org.webjars%20ace@1.1.3", "hash": null, "componentIdentifier": {"format": "a-name", "coordinates": {"name": "org.webjars ace", "qualifier": "", "version": "1.1.3"}}, "displayName": "org.webjars ace 1.1.3"}}}]}}, {"packageUrl": "pkg:maven/axis/axis-saaj@1.2?type=jar", "hash": "e5681df2b55d3e6f4795", "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "axis-saaj", "classifier": "", "extension": "jar", "groupId": "axis", "version": "1.2"}}, "displayName": "axis : axis-saaj : 1.2", "proprietary": false, "matchState": "exact", "pathnames": ["./target/WebGoatLegacy-6.0.1-war-exec.jar/WebGoat.war/WEB-INF/lib/axis-saaj-1.2.jar", "./target/WebGoatLegacy-6.0.1/WEB-INF/lib/axis-saaj-1.2.jar", "WebGoat:WebGoatLegacy:war:6.0.1/axis:axis-saaj:jar:1.2"], "identificationSource": "Sonatype", "licenseData": {"declaredLicenses": [{"licenseId": "Not-Declared", "licenseName": "Not Declared"}], "observedLicenses": [{"licenseId": "Apache-2.0", "licenseName": "Apache-2.0"}], "effectiveLicenses": [{"licenseId": "Apache-2.0", "licenseName": "Apache-2.0"}], "overriddenLicenses": [], "status": "Open", "effectiveLicenseThreats": [{"licenseThreatGroupName": "Liberal", "licenseThreatGroupLevel": 0, "licenseThreatGroupCategory": "no-threat"}, {"licenseThreatGroupName": "Sonatype Special Licenses", "licenseThreatGroupLevel": 5, "licenseThreatGroupCategory": "severe"}]}, "securityData": {"securityIssues": []}, "dependencyData": {"directDependency": true, "innerSource": false}, "remediation": {"versionChanges": [{"type": "next-non-failing", "data": {"component": {"packageUrl": "pkg:maven/axis/axis-saaj@1.2?type=jar", "hash": null, "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "axis-saaj", "classifier": "", "extension": "jar", "groupId": "axis", "version": "1.2"}}, "displayName": "axis : axis-saaj : 1.2"}}}, {"type": "next-non-failing-with-dependencies", "data": {"component": {"packageUrl": "pkg:maven/axis/axis-saaj@1.2?type=jar", "hash": null, "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "axis-saaj", "classifier": "", "extension": "jar", "groupId": "axis", "version": "1.2"}}, "displayName": "axis : axis-saaj : 1.2"}}}]}}, {"packageUrl": "pkg:maven/javax.activation/activation@1.1?type=jar", "hash": "e6cb541461c2834bdea3", "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "activation", "classifier": "", "extension": "jar", "groupId": "javax.activation", "version": "1.1"}}, "displayName": "javax.activation : activation : 1.1", "proprietary": false, "matchState": "exact", "pathnames": ["./target/WebGoatLegacy-6.0.1-war-exec.jar/WebGoat.war/WEB-INF/lib/activation-1.1.jar", "./target/WebGoatLegacy-6.0.1/WEB-INF/lib/activation-1.1.jar", "WebGoat:WebGoatLegacy:war:6.0.1/javax.activation:activation:jar:1.1"], "identificationSource": "Sonatype", "licenseData": {"declaredLicenses": [{"licenseId": "CDDL-1.1", "licenseName": "CDDL-1.1"}, {"licenseId": "GPL-2.0-with-classpath-exception", "licenseName": "GPL-2.0-with-classpath-exception"}, {"licenseId": "CDDL-1.0", "licenseName": "CDDL-1.0"}], "observedLicenses": [{"licenseId": "CDDL-1.0", "licenseName": "CDDL-1.0"}], "effectiveLicenses": [{"licenseId": "CDDL-1.1", "licenseName": "CDDL-1.1"}, {"licenseId": "GPL-2.0-with-classpath-exception", "licenseName": "GPL-2.0-with-classpath-exception"}, {"licenseId": "CDDL-1.0", "licenseName": "CDDL-1.0"}], "overriddenLicenses": [], "status": "Open", "effectiveLicenseThreats": [{"licenseThreatGroupName": "Copyleft", "licenseThreatGroupLevel": 9, "licenseThreatGroupCategory": "critical"}, {"licenseThreatGroupName": "Weak Copyleft", "licenseThreatGroupLevel": 2, "licenseThreatGroupCategory": "moderate"}]}, "securityData": {"securityIssues": []}, "dependencyData": {"directDependency": true, "innerSource": false}, "remediation": {"versionChanges": [{"type": "next-non-failing", "data": {"component": {"packageUrl": "pkg:maven/javax.activation/activation@1.1?type=jar", "hash": null, "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "activation", "classifier": "", "extension": "jar", "groupId": "javax.activation", "version": "1.1"}}, "displayName": "javax.activation : activation : 1.1"}}}, {"type": "next-non-failing-with-dependencies", "data": {"component": {"packageUrl": "pkg:maven/javax.activation/activation@1.1?type=jar", "hash": null, "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "activation", "classifier": "", "extension": "jar", "groupId": "javax.activation", "version": "1.1"}}, "displayName": "javax.activation : activation : 1.1"}}}]}}, {"packageUrl": "pkg:a-name/org.webjars%20nanoScrollerJS@0.7.6", "hash": "ea49bd4ebc00f2a6e7cd", "componentIdentifier": {"format": "a-name", "coordinates": {"name": "org.webjars nanoScrollerJS", "qualifier": "", "version": "0.7.6"}}, "displayName": "org.webjars nanoScrollerJS 0.7.6", "proprietary": false, "matchState": "exact", "pathnames": ["./newDesign/assets/plugins/nanoScroller/jquery.nanoscroller.min.js", "./src/main/webapp/plugins/nanoScroller/jquery.nanoscroller.min.js", "./target/WebGoatLegacy-6.0.1-war-exec.jar/WebGoat.war/plugins/nanoScroller/jquery.nanoscroller.min.js", "./target/WebGoatLegacy-6.0.1/plugins/nanoScroller/jquery.nanoscroller.min.js"], "identificationSource": "Sonatype", "licenseData": {"declaredLicenses": [{"licenseId": "MIT", "licenseName": "MIT"}], "observedLicenses": [{"licenseId": "Not-Supported", "licenseName": "Not Supported"}], "effectiveLicenses": [{"licenseId": "MIT", "licenseName": "MIT"}], "overriddenLicenses": [], "status": "Open", "effectiveLicenseThreats": [{"licenseThreatGroupName": "Liberal", "licenseThreatGroupLevel": 0, "licenseThreatGroupCategory": "no-threat"}, {"licenseThreatGroupName": "Sonatype Informational", "licenseThreatGroupLevel": 0, "licenseThreatGroupCategory": "no-threat"}]}, "securityData": {"securityIssues": []}, "remediation": {"versionChanges": [{"type": "next-no-violations", "data": {"component": {"packageUrl": "pkg:a-name/org.webjars%20nanoScrollerJS@0.7.6", "hash": null, "componentIdentifier": {"format": "a-name", "coordinates": {"name": "org.webjars nanoScrollerJS", "qualifier": "", "version": "0.7.6"}}, "displayName": "org.webjars nanoScrollerJS 0.7.6"}}}, {"type": "next-non-failing", "data": {"component": {"packageUrl": "pkg:a-name/org.webjars%20nanoScrollerJS@0.7.6", "hash": null, "componentIdentifier": {"format": "a-name", "coordinates": {"name": "org.webjars nanoScrollerJS", "qualifier": "", "version": "0.7.6"}}, "displayName": "org.webjars nanoScrollerJS 0.7.6"}}}]}}, {"packageUrl": "pkg:maven/commons-beanutils/commons-beanutils@1.6?type=jar", "hash": "ed3c2b07d1b16ec11440", "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "commons-beanutils", "classifier": "", "extension": "jar", "groupId": "commons-beanutils", "version": "1.6"}}, "displayName": "commons-beanutils : commons-beanutils : 1.6", "proprietary": false, "matchState": "exact", "pathnames": ["./target/WebGoatLegacy-6.0.1-war-exec.jar/WebGoat.war/WEB-INF/lib/commons-beanutils-1.6.jar", "./target/WebGoatLegacy-6.0.1/WEB-INF/lib/commons-beanutils-1.6.jar", "WebGoat:WebGoatLegacy:war:6.0.1/commons-beanutils:commons-beanutils:jar:1.6"], "identificationSource": "Sonatype", "licenseData": {"declaredLicenses": [{"licenseId": "Apache-2.0", "licenseName": "Apache-2.0"}], "observedLicenses": [{"licenseId": "No-Source-License", "licenseName": "No Source License"}], "effectiveLicenses": [{"licenseId": "Apache-2.0", "licenseName": "Apache-2.0"}], "overriddenLicenses": [], "status": "Open", "effectiveLicenseThreats": [{"licenseThreatGroupName": "Liberal", "licenseThreatGroupLevel": 0, "licenseThreatGroupCategory": "no-threat"}, {"licenseThreatGroupName": "Sonatype Special Licenses", "licenseThreatGroupLevel": 5, "licenseThreatGroupCategory": "severe"}]}, "securityData": {"securityIssues": [{"source": "cve", "reference": "CVE-2014-0114", "severity": 7.5, "status": "Open", "url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2014-0114", "threatCategory": "critical", "cwe": "20", "cvssVector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "cvssVectorSource": "cve_cvss_2", "deeperData": {"identifier": "CVE-2014-0114", "vulnIds": ["CVE-2014-0114"], "vulnerabilityLink": "http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2014-0114", "source": {"shortName": "CVE", "longName": "National Vulnerability Database"}, "mainSeverity": {"source": "cve_cvss_2", "score": 7.5, "vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P"}, "severityScores": [{"source": "sonatype_cvss_3", "score": 7.3}], "weakness": {"cweSource": "CVE", "cweIds": [{"id": "20", "uri": "https://cwe.mitre.org/data/definitions/20.html"}]}, "categories": ["data"], "description": "Apache Commons BeanUtils, as distributed in lib/commons-beanutils-1.8.0.jar in Apache Struts 1.x through 1.3.10 and in other products requiring commons-beanutils through 1.9.2, does not suppress the class property, which allows remote attackers to \"manipulate\" the ClassLoader and execute arbitrary code via the class parameter, as demonstrated by the passing of this parameter to the getClass method of the ActionForm object in Struts 1.", "explanationMarkdown": "Apache Commons BeanUtils is vulnerable to ClassLoader manipulation which can lead to Remote Code Execution (RCE).  The BeanUtils functionality does not suppress access to the `class` and, when used as part of Struts, `Class` properties, exposing them by default.  An attacker can construct malicious input using the `class` property in order to manipulate the `ClassLoader` potentially leading to arbitrary code execution.", "detectionMarkdown": "The application is vulnerable by using this component.", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue.\n\nNote: If this component is included as a bundled/transitive dependency of another component, there may not be an upgrade path. In this instance, we recommend contacting the maintainers who included the vulnerable package. Alternatively, we recommend investigating alternative components or a potential mitigating control.", "advisories": [{"referenceType": "ATTACK", "url": "http://www.rapid7.com/db/modules/exploit/multi/http/struts_code_exec_classloader"}, {"referenceType": "PROJECT", "url": "https://issues.apache.org/jira/browse/BEANUTILS-463"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}]}, "dependencyData": {"directDependency": false, "innerSource": false, "parentComponentPurls": ["pkg:maven/commons-digester/commons-digester@1.4.1?type=jar"]}, "remediation": {"versionChanges": [{"type": "next-no-violations", "data": {"component": {"packageUrl": "pkg:maven/commons-beanutils/commons-beanutils@1.9.4?type=jar", "hash": null, "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "commons-beanutils", "classifier": "", "extension": "jar", "groupId": "commons-beanutils", "version": "1.9.4"}}, "displayName": "commons-beanutils : commons-beanutils : 1.9.4"}}}, {"type": "next-non-failing", "data": {"component": {"packageUrl": "pkg:maven/commons-beanutils/commons-beanutils@1.6?type=jar", "hash": null, "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "commons-beanutils", "classifier": "", "extension": "jar", "groupId": "commons-beanutils", "version": "1.6"}}, "displayName": "commons-beanutils : commons-beanutils : 1.6"}}}, {"type": "next-non-failing-with-dependencies", "data": {"component": {"packageUrl": "pkg:maven/commons-beanutils/commons-beanutils@1.6?type=jar", "hash": null, "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "commons-beanutils", "classifier": "", "extension": "jar", "groupId": "commons-beanutils", "version": "1.6"}}, "displayName": "commons-beanutils : commons-beanutils : 1.6"}}}]}}, {"packageUrl": "pkg:maven/org.springframework/spring-expression@3.2.4.RELEASE?type=jar", "hash": "edde2efe828f5890f57a", "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "spring-expression", "classifier": "", "extension": "jar", "groupId": "org.springframework", "version": "3.2.4.RELEASE"}}, "displayName": "org.springframework : spring-expression : 3.2.4.RELEASE", "proprietary": false, "matchState": "exact", "pathnames": ["./target/WebGoatLegacy-6.0.1-war-exec.jar/WebGoat.war/WEB-INF/lib/spring-expression-3.2.4.RELEASE.jar", "./target/WebGoatLegacy-6.0.1/WEB-INF/lib/spring-expression-3.2.4.RELEASE.jar", "WebGoat:WebGoatLegacy:war:6.0.1/org.springframework:spring-expression:jar:3.2.4.RELEASE"], "identificationSource": "Sonatype", "licenseData": {"declaredLicenses": [{"licenseId": "Apache-2.0", "licenseName": "Apache-2.0"}], "observedLicenses": [{"licenseId": "Apache-2.0", "licenseName": "Apache-2.0"}], "effectiveLicenses": [{"licenseId": "Apache-2.0", "licenseName": "Apache-2.0"}], "overriddenLicenses": [], "status": "Open", "effectiveLicenseThreats": [{"licenseThreatGroupName": "Liberal", "licenseThreatGroupLevel": 0, "licenseThreatGroupCategory": "no-threat"}]}, "securityData": {"securityIssues": [{"source": "cve", "reference": "CVE-2018-1257", "severity": 6.5, "status": "Open", "url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-1257", "threatCategory": "severe", "cwe": "20", "cvssVector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H", "cvssVectorSource": "cve_cvss_3", "deeperData": {"identifier": "CVE-2018-1257", "vulnIds": ["CVE-2018-1257"], "vulnerabilityLink": "http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2018-1257", "source": {"shortName": "CVE", "longName": "National Vulnerability Database"}, "mainSeverity": {"source": "cve_cvss_3", "score": 6.5, "vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"}, "severityScores": [{"source": "cve_cvss_2", "score": 4.0}, {"source": "sonatype_cvss_3", "score": 5.9}], "weakness": {"cweSource": "Sonatype", "cweIds": [{"id": "20", "uri": "https://cwe.mitre.org/data/definitions/20.html"}]}, "categories": ["data", "functional"], "description": "Spring Framework, versions 5.0.x prior to 5.0.6, versions 4.3.x prior to 4.3.17, and older unsupported versions allows applications to expose STOMP over WebSocket endpoints with a simple, in-memory STOMP broker through the spring-messaging module. A malicious user (or attacker) can craft a message to the broker that can lead to a regular expression, denial of service attack.", "explanationMarkdown": "The `spring-expression` module of Spring Framework is vulnerable to a Regular Expression Denial of Service (ReDoS) attack. The `getValueInternal()` method in the `OperatorMatches` class lacks a threshold at which to limit regular expression evaluation. A remote attacker can exploit this vulnerability by sending a maliciously crafted message to the STOMP broker. This will result in a DoS when the application attempts to parse the message.", "detectionMarkdown": "The application is vulnerable by using this component if the application meets the following requirements:\n\n>* Depend[s] on spring-messaging and spring-websocket modules.\n>* Register[s] STOMP over WebSocket endpoints.\n>* Enable[s] the simple STOMP broker.\n\nReference: [https://pivotal.io/security/cve-2018-1257](https://pivotal.io/security/cve-2018-1257)", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue.", "advisories": [{"referenceType": "PROJECT", "url": "https://jira.spring.io/browse/SPR-16731"}, {"referenceType": "PROJECT", "url": "https://pivotal.io/security/cve-2018-1257"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "cve", "reference": "CVE-2018-1270", "severity": 9.8, "status": "Open", "url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-1270", "threatCategory": "critical", "cwe": "94", "cvssVector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H", "cvssVectorSource": "cve_cvss_3", "deeperData": {"identifier": "CVE-2018-1270", "vulnIds": ["CVE-2018-1270"], "vulnerabilityLink": "http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2018-1270", "source": {"shortName": "CVE", "longName": "National Vulnerability Database"}, "mainSeverity": {"source": "cve_cvss_3", "score": 9.8, "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"}, "severityScores": [{"source": "cve_cvss_2", "score": 7.5}, {"source": "sonatype_cvss_3", "score": 9.8}], "weakness": {"cweSource": "CVE", "cweIds": [{"id": "94", "uri": "https://cwe.mitre.org/data/definitions/94.html"}]}, "categories": ["data"], "description": "Spring Framework, versions 5.0 prior to 5.0.5 and versions 4.3 prior to 4.3.15 and older unsupported versions, allow applications to expose STOMP over WebSocket endpoints with a simple, in-memory STOMP broker through the spring-messaging module. A malicious user (or attacker) can craft a message to the broker that can lead to a remote code execution attack.", "explanationMarkdown": "The Spring Framework `spring-messaging` module is vulnerable to Remote Code Execution (RCE).  The `getMethods()` method in the `ReflectiveMethodResolver` class, the `canWrite` method in the `ReflectivePropertyAccessor` class, and the `filterSubscriptions()` method in the `DefaultSubscriptionRegistry` class do not properly restrict SpEL expression evaluation. A remote attacker can exploit this vulnerability by crafting a request to an exposed STOMP endpoint and injecting a malicious payload into the `selector` header.  The application would then execute the payload via a call to `expression.getValue()` whenever a new message is sent to the broker. \n\nNOTE: The Pivotal advisory mentioned that the vulnerability could be exploited via the `spring-messaging` module.  However, the fix that was applied to 4.3.15 was in the `spring-expression` module.  This fix was proven to be insufficient leading to CVE-2018-1275 where an additional fix was made to the `spring-messaging` module.", "detectionMarkdown": "", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue.", "advisories": [{"referenceType": "ATTACK", "url": "http://www.polaris-lab.com/index.php/archives/501/"}, {"referenceType": "ATTACK", "url": "https://chybeta.github.io/2018/04/07/spring-messaging-Remote-Code-Execution-%E5%88%86%E6%9E%90-%E3%80%90CVE-2018-1270%E3%80%91/"}, {"referenceType": "PROJECT", "url": "https://jira.spring.io/browse/SPR-16588"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "cve", "reference": "CVE-2022-22950", "severity": 6.5, "status": "Open", "url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-22950", "threatCategory": "severe", "cwe": "770", "cvssVector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H", "cvssVectorSource": "cve_cvss_3", "deeperData": {"identifier": "CVE-2022-22950", "vulnIds": ["CVE-2022-22950"], "vulnerabilityLink": "http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2022-22950", "source": {"shortName": "CVE", "longName": "National Vulnerability Database"}, "mainSeverity": {"source": "cve_cvss_3", "score": 6.5, "vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"}, "severityScores": [{"source": "cve_cvss_2", "score": 4.0}, {"source": "sonatype_cvss_3", "score": 5.3}], "weakness": {"cweSource": "CVE", "cweIds": [{"id": "770", "uri": "https://cwe.mitre.org/data/definitions/770.html"}]}, "categories": ["data"], "description": "n Spring Framework versions 5.3.0 - 5.3.16 and older unsupported versions, it is possible for a user to provide a specially crafted SpEL expression that may cause a denial of service condition.", "explanationMarkdown": "The `spring-expression` package is vulnerable to a Denial of Service (DoS) attack. The `createArray()` method in the `ConstructorReference` class fails to limit the number of elements in arrays constructed from SpEL expressions. A remote attacker who can supply a SpEL expression can exploit this vulnerability to cause an `OutOfMemoryError` and ultimately a DoS condition.", "detectionMarkdown": "The application is vulnerable by using this component.", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue.\n\nNote: If this component is included as a bundled/transitive dependency of another component, there may not be an upgrade path. In this instance, we recommend contacting the maintainers who included the vulnerable package. Alternatively, we recommend investigating alternative components or a potential mitigating control.", "advisories": [{"referenceType": "PROJECT", "url": "https://github.com/spring-projects/spring-framework/issues/28145"}, {"referenceType": "PROJECT", "url": "https://spring.io/blog/2022/03/17/spring-framework-6-0-0-m3-and-5-3-17-available-now"}, {"referenceType": "PROJECT", "url": "https://tanzu.vmware.com/security/cve-2022-22950"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "cve", "reference": "CVE-2023-20861", "severity": 6.5, "status": "Open", "url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-20861", "threatCategory": "severe", "cwe": "770", "cvssVector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H", "cvssVectorSource": "cve_cvss_3", "deeperData": {"identifier": "CVE-2023-20861", "vulnIds": ["CVE-2023-20861"], "vulnerabilityLink": "http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2023-20861", "source": {"shortName": "CVE", "longName": "National Vulnerability Database"}, "mainSeverity": {"source": "cve_cvss_3", "score": 6.5, "vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"}, "severityScores": [{"source": "cve_cvss_2", "score": 0.0}, {"source": "sonatype_cvss_3", "score": 5.3}], "weakness": {"cweSource": "CVE", "cweIds": [{"id": "noinfo", "uri": "https://cwe.mitre.org/data/definitions/noinfo.html"}]}, "categories": ["data", "operational"], "description": "In Spring Framework versions 6.0.0 - 6.0.6, 5.3.0 - 5.3.25, 5.2.0.RELEASE - 5.2.22.RELEASE, and older unsupported versions, it is possible for a user to provide a specially crafted SpEL expression that may cause a denial-of-service (DoS) condition.", "explanationMarkdown": "The `spring-expression` package is vulnerable to Denial of Service (DoS) attacks. The `getValueInternal()` methods in the `OperatorMatches` and `OpMultiply` classes fail to limit the input taken and results produced, respectively, by their SpEL operations. The `matches` operation does not restrict the length of user-supplied regular expressions,  while the `multiply` operation does not restrict its resulting text when provided with excessive repeats. A remote attacker who can supply crafted SpEL expressions can leverage these vulnerable operations to cause the application to exhaust its available system resources.", "detectionMarkdown": "The application is vulnerable by using this component.", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue.\n\nNote: If this component is included as a bundled/transitive dependency of another component, there may not be an upgrade path. In this instance, we recommend contacting the maintainers who included the vulnerable package. Alternatively, we recommend investigating alternative components or a potential mitigating control.", "advisories": [{"referenceType": "PROJECT", "url": "https://spring.io/blog/2023/03/20/spring-framework-5-2-23-fixes-cve-2023-20861"}, {"referenceType": "PROJECT", "url": "https://spring.io/security/cve-2023-20861"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "cve", "reference": "CVE-2023-20863", "severity": 6.5, "status": "Open", "url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-20863", "threatCategory": "severe", "cwe": "400", "cvssVector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H", "cvssVectorSource": "cve_cvss_3", "deeperData": {"identifier": "CVE-2023-20863", "vulnIds": ["CVE-2023-20863"], "vulnerabilityLink": "http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2023-20863", "source": {"shortName": "CVE", "longName": "National Vulnerability Database"}, "mainSeverity": {"source": "cve_cvss_3", "score": 6.5, "vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"}, "severityScores": [{"source": "cve_cvss_2", "score": 0.0}, {"source": "sonatype_cvss_3", "score": 7.5}], "weakness": {"cweSource": "CVE", "cweIds": [{"id": "917", "uri": "https://cwe.mitre.org/data/definitions/917.html"}]}, "categories": ["data", "operational"], "description": "In spring framework versions prior to 5.2.24 release+ ,5.3.27+ and 6.0.8+ , it is possible for a user to provide a specially crafted SpEL expression that may cause a denial-of-service (DoS) condition.", "explanationMarkdown": "The `spring-expression` package is vulnerable to Denial of Service (DoS) attacks. The `doParseExpression()` method in the `InternalSpelExpressionParser` class fails to limit the length of SpEL expressions before attempting to parse them. A remote attacker who can supply crafted SpEL expressions can leverage this behavior to cause the application to exhaust its available resources and ultimately induce a DoS condition.", "detectionMarkdown": "The application is vulnerable by using this component.", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue.\n\nNote: If this component is included as a bundled/transitive dependency of another component, there may not be an upgrade path. In this instance, we recommend contacting the maintainers who included the vulnerable package. Alternatively, we recommend investigating alternative components or a potential mitigating control.", "advisories": [{"referenceType": "PROJECT", "url": "https://github.com/spring-projects/spring-framework/issues/30325"}, {"referenceType": "PROJECT", "url": "https://spring.io/security/cve-2023-20863"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}]}, "dependencyData": {"directDependency": false, "innerSource": false, "parentComponentPurls": ["pkg:maven/org.springframework/spring-webmvc@3.2.4.RELEASE?type=jar"]}, "remediation": {"versionChanges": [{"type": "next-no-violations", "data": {"component": {"packageUrl": "pkg:maven/org.springframework/spring-expression@5.2.24.RELEASE?type=jar", "hash": null, "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "spring-expression", "classifier": "", "extension": "jar", "groupId": "org.springframework", "version": "5.2.24.RELEASE"}}, "displayName": "org.springframework : spring-expression : 5.2.24.RELEASE"}}}, {"type": "next-non-failing", "data": {"component": {"packageUrl": "pkg:maven/org.springframework/spring-expression@3.2.4.RELEASE?type=jar", "hash": null, "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "spring-expression", "classifier": "", "extension": "jar", "groupId": "org.springframework", "version": "3.2.4.RELEASE"}}, "displayName": "org.springframework : spring-expression : 3.2.4.RELEASE"}}}, {"type": "next-no-violations-with-dependencies", "data": {"component": {"packageUrl": "pkg:maven/org.springframework/spring-expression@5.2.24.RELEASE?type=jar", "hash": null, "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "spring-expression", "classifier": "", "extension": "jar", "groupId": "org.springframework", "version": "5.2.24.RELEASE"}}, "displayName": "org.springframework : spring-expression : 5.2.24.RELEASE"}}}, {"type": "next-non-failing-with-dependencies", "data": {"component": {"packageUrl": "pkg:maven/org.springframework/spring-expression@3.2.4.RELEASE?type=jar", "hash": null, "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "spring-expression", "classifier": "", "extension": "jar", "groupId": "org.springframework", "version": "3.2.4.RELEASE"}}, "displayName": "org.springframework : spring-expression : 3.2.4.RELEASE"}}}]}}, {"packageUrl": "pkg:a-name/html5shiv@3.7.3", "hash": "ef458e621aa17e32bc39", "componentIdentifier": {"format": "a-name", "coordinates": {"name": "html5shiv", "qualifier": "", "version": "3.7.3"}}, "displayName": "html5shiv 3.7.3", "proprietary": false, "matchState": "exact", "pathnames": ["./newDesign/assets/js/html5shiv.js", "./src/main/webapp/js/html5shiv.js", "./target/WebGoatLegacy-6.0.1-war-exec.jar/WebGoat.war/js/html5shiv.js", "./target/WebGoatLegacy-6.0.1/js/html5shiv.js"], "identificationSource": "Sonatype", "licenseData": {"declaredLicenses": [{"licenseId": "Not-Declared", "licenseName": "Not Declared"}], "observedLicenses": [{"licenseId": "Not-Supported", "licenseName": "Not Supported"}], "effectiveLicenses": [{"licenseId": "Not-Declared", "licenseName": "Not Declared"}, {"licenseId": "Not-Supported", "licenseName": "Not Supported"}], "overriddenLicenses": [], "status": "Open", "effectiveLicenseThreats": [{"licenseThreatGroupName": "Sonatype Special Licenses", "licenseThreatGroupLevel": 5, "licenseThreatGroupCategory": "severe"}, {"licenseThreatGroupName": "Sonatype Informational", "licenseThreatGroupLevel": 0, "licenseThreatGroupCategory": "no-threat"}]}, "securityData": {"securityIssues": []}, "remediation": {"versionChanges": [{"type": "next-non-failing", "data": {"component": {"packageUrl": "pkg:a-name/html5shiv@3.7.3", "hash": null, "componentIdentifier": {"format": "a-name", "coordinates": {"name": "html5shiv", "qualifier": "", "version": "3.7.3"}}, "displayName": "html5shiv 3.7.3"}}}]}}, {"packageUrl": "pkg:maven/axis/axis-ant@1.2?type=jar", "hash": "f07ed3d1d32434426a42", "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "axis-ant", "classifier": "", "extension": "jar", "groupId": "axis", "version": "1.2"}}, "displayName": "axis : axis-ant : 1.2", "proprietary": false, "matchState": "exact", "pathnames": ["./target/WebGoatLegacy-6.0.1-war-exec.jar/WebGoat.war/WEB-INF/lib/axis-ant-1.2.jar", "./target/WebGoatLegacy-6.0.1/WEB-INF/lib/axis-ant-1.2.jar", "WebGoat:WebGoatLegacy:war:6.0.1/axis:axis-ant:jar:1.2"], "identificationSource": "Sonatype", "licenseData": {"declaredLicenses": [{"licenseId": "Not-Declared", "licenseName": "Not Declared"}], "observedLicenses": [{"licenseId": "No-Source-License", "licenseName": "No Source License"}], "effectiveLicenses": [{"licenseId": "Not-Declared", "licenseName": "Not Declared"}, {"licenseId": "No-Source-License", "licenseName": "No Source License"}], "overriddenLicenses": [], "status": "Open", "effectiveLicenseThreats": [{"licenseThreatGroupName": "Sonatype Special Licenses", "licenseThreatGroupLevel": 5, "licenseThreatGroupCategory": "severe"}]}, "securityData": {"securityIssues": []}, "dependencyData": {"directDependency": true, "innerSource": false}, "remediation": {"versionChanges": [{"type": "next-non-failing", "data": {"component": {"packageUrl": "pkg:maven/axis/axis-ant@1.2?type=jar", "hash": null, "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "axis-ant", "classifier": "", "extension": "jar", "groupId": "axis", "version": "1.2"}}, "displayName": "axis : axis-ant : 1.2"}}}, {"type": "next-non-failing-with-dependencies", "data": {"component": {"packageUrl": "pkg:maven/axis/axis-ant@1.2?type=jar", "hash": null, "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "axis-ant", "classifier": "", "extension": "jar", "groupId": "axis", "version": "1.2"}}, "displayName": "axis : axis-ant : 1.2"}}}]}}, {"packageUrl": "pkg:maven/junit/junit@4.8.1?type=jar", "hash": "f2975548f836416306ef", "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "junit", "classifier": "", "extension": "jar", "groupId": "junit", "version": "4.8.1"}}, "displayName": "junit : junit : 4.8.1", "proprietary": false, "matchState": "exact", "pathnames": ["./target/WebGoatLegacy-6.0.1-war-exec.jar/WebGoat.war/WEB-INF/lib/junit-4.8.1.jar", "./target/WebGoatLegacy-6.0.1/WEB-INF/lib/junit-4.8.1.jar", "WebGoat:WebGoatLegacy:war:6.0.1/junit:junit:jar:4.8.1"], "identificationSource": "Sonatype", "licenseData": {"declaredLicenses": [{"licenseId": "CPL-1.0", "licenseName": "CPL-1.0"}], "observedLicenses": [{"licenseId": "BSD-3-Clause", "licenseName": "BSD-3-Clause"}], "effectiveLicenses": [{"licenseId": "CPL-1.0", "licenseName": "CPL-1.0"}, {"licenseId": "BSD-3-Clause", "licenseName": "BSD-3-Clause"}], "overriddenLicenses": [], "status": "Open", "effectiveLicenseThreats": [{"licenseThreatGroupName": "Liberal", "licenseThreatGroupLevel": 0, "licenseThreatGroupCategory": "no-threat"}, {"licenseThreatGroupName": "Weak Copyleft", "licenseThreatGroupLevel": 2, "licenseThreatGroupCategory": "moderate"}]}, "securityData": {"securityIssues": [{"source": "cve", "reference": "CVE-2020-15250", "severity": 5.5, "status": "Open", "url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-15250", "threatCategory": "severe", "cwe": "732", "cvssVector": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:H/I:N/A:N", "cvssVectorSource": "cve_cvss_3", "deeperData": {"identifier": "CVE-2020-15250", "vulnIds": ["CVE-2020-15250"], "vulnerabilityLink": "http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2020-15250", "source": {"shortName": "CVE", "longName": "National Vulnerability Database"}, "mainSeverity": {"source": "cve_cvss_3", "score": 5.5, "vector": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:H/I:N/A:N"}, "severityScores": [{"source": "cve_cvss_2", "score": 1.9}, {"source": "sonatype_cvss_3", "score": 4.4}], "weakness": {"cweSource": "CVE", "cweIds": [{"id": "732", "uri": "https://cwe.mitre.org/data/definitions/732.html"}]}, "categories": ["data"], "description": "In JUnit4 from version 4.7 and before 4.13.1, the test rule TemporaryFolder contains a local information disclosure vulnerability. On Unix like systems, the system's temporary directory is shared between all users on that system. Because of this, when files and directories are written into this directory they are, by default, readable by other users on that same system. This vulnerability does not allow other users to overwrite the contents of these directories or files. This is purely an information disclosure vulnerability. This vulnerability impacts you if the JUnit tests write sensitive information, like API keys or passwords, into the temporary folder, and the JUnit tests execute in an environment where the OS has other untrusted users. Because certain JDK file system APIs were only added in JDK 1.7, this this fix is dependent upon the version of the JDK you are using. For Java 1.7 and higher users: this vulnerability is fixed in 4.13.1. For Java 1.6 and lower users: no patch is available, you must use the workaround below. If you are unable to patch, or are stuck running on Java 1.6, specifying the `java.io.tmpdir` system environment variable to a directory that is exclusively owned by the executing user will fix this vulnerability. For more information, including an example of vulnerable code, see the referenced GitHub Security Advisory.", "explanationMarkdown": "The `junit` package is vulnerable to Sensitive Information Disclosure. The `createTemporaryFolderIn()` method in the `TemporaryFolder` class creates a temporary working directory to store sensitive testing information in a location that is readable by all users on the system. A local attacker may read sensitive information from the temporary directory, including API keys, passwords, and any sensitive information stored by Java applications that utilize `junit` for testing. ", "detectionMarkdown": "The application is vulnerable by using this component or if the machine running this component is using Java 1.6 or lower.\n\n*Reference*: \n[https://github.com/advisories/GHSA-269g-pwp5-87pp](https://github.com/advisories/GHSA-269g-pwp5-87pp)", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue. This includes utilizing Java 1.7 or newer in addition to upgrading the component.\n\n*Reference*: \n[https://github.com/advisories/GHSA-269g-pwp5-87pp](https://github.com/advisories/GHSA-269g-pwp5-87pp)\n\nNote: If this component is included as a bundled/transitive dependency of another component, there may not be an upgrade path. In this instance, we recommend contacting the maintainers who included the vulnerable package. Alternatively, we recommend investigating alternative components or a potential mitigating control.", "advisories": [{"referenceType": "THIRD_PARTY", "url": "https://github.com/advisories/GHSA-269g-pwp5-87pp"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}]}, "dependencyData": {"directDependency": true, "innerSource": false}, "remediation": {"versionChanges": [{"type": "next-non-failing", "data": {"component": {"packageUrl": "pkg:maven/junit/junit@4.8.1?type=jar", "hash": null, "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "junit", "classifier": "", "extension": "jar", "groupId": "junit", "version": "4.8.1"}}, "displayName": "junit : junit : 4.8.1"}}}, {"type": "next-non-failing-with-dependencies", "data": {"component": {"packageUrl": "pkg:maven/junit/junit@4.8.1?type=jar", "hash": null, "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "junit", "classifier": "", "extension": "jar", "groupId": "junit", "version": "4.8.1"}}, "displayName": "junit : junit : 4.8.1"}}}]}}, {"packageUrl": "pkg:maven/javax.mail/mailapi@1.4.2?type=jar", "hash": "f5149f0aaf01daf4bb2f", "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "mailapi", "classifier": "", "extension": "jar", "groupId": "javax.mail", "version": "1.4.2"}}, "displayName": "javax.mail : mailapi : 1.4.2", "proprietary": false, "matchState": "exact", "pathnames": ["./target/WebGoatLegacy-6.0.1-war-exec.jar/WebGoat.war/WEB-INF/lib/mailapi-1.4.2.jar", "./target/WebGoatLegacy-6.0.1/WEB-INF/lib/mailapi-1.4.2.jar", "WebGoat:WebGoatLegacy:war:6.0.1/javax.mail:mailapi:jar:1.4.2"], "identificationSource": "Sonatype", "licenseData": {"declaredLicenses": [{"licenseId": "CDDL-1.1", "licenseName": "CDDL-1.1"}, {"licenseId": "Generic-Open-Source-Clause", "licenseName": "Generic-Open-Source-Clause"}, {"licenseId": "GPL-2.0-with-classpath-exception", "licenseName": "GPL-2.0-with-classpath-exception"}], "observedLicenses": [{"licenseId": "No-Source-License", "licenseName": "No Source License"}], "effectiveLicenses": [{"licenseId": "CDDL-1.1", "licenseName": "CDDL-1.1"}, {"licenseId": "Generic-Open-Source-Clause", "licenseName": "Generic-Open-Source-Clause"}, {"licenseId": "GPL-2.0-with-classpath-exception", "licenseName": "GPL-2.0-with-classpath-exception"}], "overriddenLicenses": [], "status": "Open", "effectiveLicenseThreats": [{"licenseThreatGroupName": "Copyleft", "licenseThreatGroupLevel": 9, "licenseThreatGroupCategory": "critical"}, {"licenseThreatGroupName": "Liberal", "licenseThreatGroupLevel": 0, "licenseThreatGroupCategory": "no-threat"}, {"licenseThreatGroupName": "Sonatype Special Licenses", "licenseThreatGroupLevel": 5, "licenseThreatGroupCategory": "severe"}, {"licenseThreatGroupName": "Weak Copyleft", "licenseThreatGroupLevel": 2, "licenseThreatGroupCategory": "moderate"}]}, "securityData": {"securityIssues": [{"source": "sonatype", "reference": "sonatype-2017-0492", "severity": 4.3, "status": "Open", "url": "http://localhost:8070/ui/links/vln/sonatype-2017-0492", "threatCategory": "severe", "cwe": "200", "cvssVector": "CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:N/A:N", "cvssVectorSource": "sonatype_cvss_3", "deeperData": {"identifier": "sonatype-2017-0492", "vulnIds": ["sonatype-2017-0492"], "source": {"shortName": "Sonatype", "longName": "Sonatype Data Research"}, "mainSeverity": {"source": "sonatype_cvss_3", "score": 4.3, "vector": "CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:N/A:N"}, "severityScores": [{"source": "cve_cvss_2", "score": 0.0}], "weakness": {"cweSource": "Sonatype", "cweIds": [{"id": "200", "uri": "https://cwe.mitre.org/data/definitions/200.html"}]}, "categories": ["data"], "description": null, "explanationMarkdown": "JavaMail is vulnerable to Information Exposure. The `getUniqueMessageIDValue()` method in the `UniqueValue` class file appends the username and the hostname of the Java process when generating the `Message-Id` for an email. This can lead to unintended information leakage in the email headers and potentially lead to security issues.", "detectionMarkdown": "The application is vulnerable by using this component.", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue.\nNOTE: A fixed version has not yet been released for the following components:\n\n`javax.mail:mailapi`\n\n`org.apache.servicemix.bundles:org.apache.servicemix.bundles.javax.mail`\n\n`javax.mail:mail`", "advisories": [{"referenceType": "PROJECT", "url": "https://github.com/javaee/javamail/issues/127"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}]}, "dependencyData": {"directDependency": true, "innerSource": false}, "remediation": {"versionChanges": [{"type": "next-non-failing", "data": {"component": {"packageUrl": "pkg:maven/javax.mail/mailapi@1.4.2?type=jar", "hash": null, "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "mailapi", "classifier": "", "extension": "jar", "groupId": "javax.mail", "version": "1.4.2"}}, "displayName": "javax.mail : mailapi : 1.4.2"}}}, {"type": "next-non-failing-with-dependencies", "data": {"component": {"packageUrl": "pkg:maven/javax.mail/mailapi@1.4.2?type=jar", "hash": null, "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "mailapi", "classifier": "", "extension": "jar", "groupId": "javax.mail", "version": "1.4.2"}}, "displayName": "javax.mail : mailapi : 1.4.2"}}}]}}, {"packageUrl": "pkg:maven/com.h2database/h2@1.4.187?type=jar", "hash": "f6b109788d1964304583", "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "h2", "classifier": "", "extension": "jar", "groupId": "com.h2database", "version": "1.4.187"}}, "displayName": "com.h2database : h2 : 1.4.187", "proprietary": false, "matchState": "exact", "pathnames": ["./target/WebGoatLegacy-6.0.1-war-exec.jar/WebGoat.war/WEB-INF/lib/h2-1.4.187.jar", "./target/WebGoatLegacy-6.0.1/WEB-INF/lib/h2-1.4.187.jar", "WebGoat:WebGoatLegacy:war:6.0.1/com.h2database:h2:jar:1.4.187"], "identificationSource": "Sonatype", "licenseData": {"declaredLicenses": [{"licenseId": "Not-Declared", "licenseName": "Not Declared"}], "observedLicenses": [{"licenseId": "EPL-1.0", "licenseName": "EPL-1.0"}, {"licenseId": "LGPL-3.0+", "licenseName": "LGPL-3.0+"}, {"licenseId": "BSD-3-Clause", "licenseName": "BSD-3-Clause"}, {"licenseId": "MPL-2.0", "licenseName": "MPL-2.0"}], "effectiveLicenses": [{"licenseId": "EPL-1.0", "licenseName": "EPL-1.0"}, {"licenseId": "LGPL-3.0+", "licenseName": "LGPL-3.0+"}, {"licenseId": "BSD-3-Clause", "licenseName": "BSD-3-Clause"}, {"licenseId": "MPL-2.0", "licenseName": "MPL-2.0"}], "overriddenLicenses": [], "status": "Open", "effectiveLicenseThreats": [{"licenseThreatGroupName": "Liberal", "licenseThreatGroupLevel": 0, "licenseThreatGroupCategory": "no-threat"}, {"licenseThreatGroupName": "Sonatype Special Licenses", "licenseThreatGroupLevel": 5, "licenseThreatGroupCategory": "severe"}, {"licenseThreatGroupName": "Weak Copyleft", "licenseThreatGroupLevel": 2, "licenseThreatGroupCategory": "moderate"}]}, "securityData": {"securityIssues": [{"source": "cve", "reference": "CVE-2021-42392", "severity": 9.8, "status": "Open", "url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-42392", "threatCategory": "critical", "cwe": "502", "cvssVector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H", "cvssVectorSource": "cve_cvss_3", "deeperData": {"identifier": "CVE-2021-42392", "vulnIds": ["CVE-2021-42392"], "vulnerabilityLink": "http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2021-42392", "source": {"shortName": "CVE", "longName": "National Vulnerability Database"}, "mainSeverity": {"source": "cve_cvss_3", "score": 9.8, "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"}, "severityScores": [{"source": "cve_cvss_2", "score": 10.0}, {"source": "sonatype_cvss_3", "score": 8.1}], "weakness": {"cweSource": "CVE", "cweIds": [{"id": "502", "uri": "https://cwe.mitre.org/data/definitions/502.html"}]}, "categories": ["configuration", "data"], "description": "The org.h2.util.JdbcUtils.getConnection method of the H2 database takes as parameters the class name of the driver and URL of the database. An attacker may pass a JNDI driver name and a URL leading to a LDAP or RMI servers, causing remote code execution. This can be exploited through various attack vectors, most notably through the H2 Console which leads to unauthenticated remote code execution.", "explanationMarkdown": "The `h2` package is vulnerable to Remote Code Execution (RCE). The `getConnection` method in the `JdbcUtils` class performs a context lookup of an unfiltered user supplied url. An attacker with the ability to influence the parameters sent to the aforementioned function can exploit this vulnerability to load a remote malicious class ultimately resulting in Remote Code Execution. \n\n*Advisory Deviation Notice:* The Sonatype security research team discovered that this vulnerability was introduced in version 1.0.57 instead of 1.1.100 as stated in the advisory.", "detectionMarkdown": "The application is vulnerable by using this component with any one of the following conditions.  \n- An exposed H2 console with the `webAllowOthers` property set to `true`. \n- Allowing an attacker to influence the command line arguments to H2 Shell.", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue.\nIf upgrading is not a viable solution, the project has provided a workaround to help prevent the exploitation of this vulnerability. \nReference:[https://github.com/h2database/h2database/security/advisories/GHSA-h376-j262-vhq6](https://github.com/h2database/h2database/security/advisories/GHSA-h376-j262-vhq6)\n\nNote: If this component is included as a bundled/transitive dependency of another component, there may not be an upgrade path. In this instance, we recommend contacting the maintainers who included the vulnerable package. Alternatively, we recommend investigating alternative components or a potential mitigating control.", "advisories": [{"referenceType": "PROJECT", "url": "https://github.com/h2database/h2database/security/advisories/GHSA-h376-j262-vhq6"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "cve", "reference": "CVE-2022-23221", "severity": 9.8, "status": "Open", "url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-23221", "threatCategory": "critical", "cwe": "94", "cvssVector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H", "cvssVectorSource": "cve_cvss_3", "deeperData": {"identifier": "CVE-2022-23221", "vulnIds": ["CVE-2022-23221"], "vulnerabilityLink": "http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2022-23221", "source": {"shortName": "CVE", "longName": "National Vulnerability Database"}, "mainSeverity": {"source": "cve_cvss_3", "score": 9.8, "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"}, "severityScores": [{"source": "cve_cvss_2", "score": 10.0}, {"source": "sonatype_cvss_3", "score": 9.8}], "weakness": {"cweSource": "CVE", "cweIds": [{"id": "94", "uri": "https://cwe.mitre.org/data/definitions/94.html"}]}, "categories": ["data", "operational"], "description": "H2 Console before 2.1.210 allows remote attackers to execute arbitrary code via a jdbc:h2:mem JDBC URL containing the IGNORE_UNKNOWN_SETTINGS=TRUE;FORBID_CREATION=FALSE;INIT=RUNSCRIPT substring, a different vulnerability than CVE-2021-42392.", "explanationMarkdown": "The `h2` package is vulnerable to Remote Code Execution (RCE). The constructor in the `JdbcConnection` class and the `getConnection()` method in the `WebServer` class allow users to connect to non-existant in-memory databases with crafted `jdbc:h2:mem` JDBC URLs. A remote attacker can exploit this behavior to execute malicious, externally hosted scripts by connecting to the aforementioned JDBC URLs with `IGNORE_UNKNOWN_SETTINGS=TRUE;FORBID_CREATION=FALSE;INIT=RUNSCRIPT` substrings.\n\nExample:\n```\njdbc:h2:mem:1339;IGNORE_UNKNOWN_SETTINGS=TRUE;FORBID_CREATION=FALSE;\n```\n\nReference: [https://seclists.org/fulldisclosure/2022/Jan/39](https://seclists.org/fulldisclosure/2022/Jan/39)", "detectionMarkdown": "The application is vulnerable by using this component.", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue.\n\nNote: If this component is included as a bundled/transitive dependency of another component, there may not be an upgrade path. In this instance, we recommend contacting the maintainers who included the vulnerable package. Alternatively, we recommend investigating alternative components or a potential mitigating control.", "advisories": [{"referenceType": "EVIDENCE", "url": "https://github.com/h2database/h2database/releases/tag/version-2.1.210"}, {"referenceType": "THIRD_PARTY", "url": "https://github.com/advisories/GHSA-45hx-wfhj-473x"}, {"referenceType": "THIRD_PARTY", "url": "https://seclists.org/fulldisclosure/2022/Jan/39"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "sonatype", "reference": "sonatype-2018-0859", "severity": 9.8, "status": "Open", "url": "http://localhost:8070/ui/links/vln/sonatype-2018-0859", "threatCategory": "critical", "cwe": "284", "cvssVector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H", "cvssVectorSource": "sonatype_cvss_3", "deeperData": {"identifier": "sonatype-2018-0859", "vulnIds": ["sonatype-2018-0859"], "source": {"shortName": "Sonatype", "longName": "Sonatype Data Research"}, "mainSeverity": {"source": "sonatype_cvss_3", "score": 9.8, "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"}, "severityScores": [{"source": "cve_cvss_2", "score": 0.0}], "weakness": {"cweSource": "Sonatype", "cweIds": [{"id": "284", "uri": "https://cwe.mitre.org/data/definitions/284.html"}]}, "categories": ["data"], "description": null, "explanationMarkdown": "The `h2` application has Improper Access Control. The `WebApp` class allows for the creation of a web administrative console, but has no authentication. An attacker with network access to this web console can use H2's administrative tooling to access the information of protected files or run arbitrary SQL scripts on the system.", "detectionMarkdown": "The application is vulnerable by using this component.", "recommendationMarkdown": "There is no non vulnerable version of this component/package. We recommend investigating alternative components or a potential mitigating control.", "advisories": [{"referenceType": "ATTACK", "url": "https://www.exploit-db.com/exploits/45105"}, {"referenceType": "PROJECT", "url": "https://github.com/h2database/h2database/commit/64a778cc2e306da3d3f4cb10e12caee83f74ee40"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "sonatype", "reference": "sonatype-2018-0863", "severity": 6.0, "status": "Open", "url": "http://localhost:8070/ui/links/vln/sonatype-2018-0863", "threatCategory": "severe", "cwe": "59", "cvssVector": "CVSS:3.1/AV:L/AC:L/PR:H/UI:N/S:C/C:H/I:N/A:N", "cvssVectorSource": "sonatype_cvss_3", "deeperData": {"identifier": "sonatype-2018-0863", "vulnIds": ["sonatype-2018-0863", "CVE-2018-14335"], "source": {"shortName": "Sonatype", "longName": "Sonatype Data Research"}, "mainSeverity": {"source": "sonatype_cvss_3", "score": 6.0, "vector": "CVSS:3.1/AV:L/AC:L/PR:H/UI:N/S:C/C:H/I:N/A:N"}, "severityScores": [{"source": "cve_cvss_2", "score": 0.0}], "weakness": {"cweSource": "Sonatype", "cweIds": [{"id": "59", "uri": "https://cwe.mitre.org/data/definitions/59.html"}]}, "categories": ["configuration", "data", "functional", "operational"], "description": null, "explanationMarkdown": "The `h2database` package is vulnerable due to Improper Link Resolution Before File Access. The `process()` function in the `Backup` class resolves symbolic links when creating a database backup via the backup web tool.\n\nTo exploit this vulnerability, an attacker would need access to the backup web tool and to be at least a guest user on the local file system. First, such an attacker would need to create a symlink with the `.mv.db` file extension to any arbitrary file on the host system that the `h2` instance's user has access to. Next, the attacker would need to include this symlink in a backup via the web tool. When the backup is executed, the symlink will be resolved, and the target of the symlink will be added to the backup archive. This effectively bypasses the `endsWith(Constants.SUFFIX_MV_FILE)` file access validation check and grants the attacker access to any file to which the `h2` instance has access.", "detectionMarkdown": "For versions after 1.4.197, the relevant functionality is only available if the `webAdminPassword` is set. It is important to note, that the `webAdminPassword` is different from any passwords used to access specific databases used by H2.\n\nFor versions 1.4.197 and before, the application is vulnerable by using this component.", "recommendationMarkdown": "There is no non-vulnerable upgrade path for this component/package. We recommend investigating alternative components or a potential mitigating control.\n\nIt is important to note that according to the [H2's documentation](https://h2database.com/html/security.html):\n> H2 is __not__ designed to be run in an adversarial environment. You should absolutely not expose your H2 server to untrusted connections.\n\nConsequently, the developers of H2 do not consider any circuitous access to any file the H2 console has access to as a security bug.\n\nRef: [https://github.com/h2database/h2database/issues/3565#issuecomment-1170684734](https://github.com/h2database/h2database/issues/3565#issuecomment-1170684734)", "advisories": [{"referenceType": "PROJECT", "url": "https://github.com/h2database/h2database/issues/1294"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}]}, "dependencyData": {"directDependency": true, "innerSource": false}, "remediation": {"versionChanges": [{"type": "next-non-failing", "data": {"component": {"packageUrl": "pkg:maven/com.h2database/h2@1.4.187?type=jar", "hash": null, "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "h2", "classifier": "", "extension": "jar", "groupId": "com.h2database", "version": "1.4.187"}}, "displayName": "com.h2database : h2 : 1.4.187"}}}, {"type": "next-non-failing-with-dependencies", "data": {"component": {"packageUrl": "pkg:maven/com.h2database/h2@1.4.187?type=jar", "hash": null, "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "h2", "classifier": "", "extension": "jar", "groupId": "com.h2database", "version": "1.4.187"}}, "displayName": "com.h2database : h2 : 1.4.187"}}}]}}, {"packageUrl": "pkg:maven/commons-logging/commons-logging@1.1.3?type=jar", "hash": "f6f66e966c70a83ffbdb", "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "commons-logging", "classifier": "", "extension": "jar", "groupId": "commons-logging", "version": "1.1.3"}}, "displayName": "commons-logging : commons-logging : 1.1.3", "proprietary": false, "matchState": "exact", "pathnames": ["./target/WebGoatLegacy-6.0.1-war-exec.jar/WebGoat.war/WEB-INF/lib/commons-logging-1.1.3.jar", "./target/WebGoatLegacy-6.0.1/WEB-INF/lib/commons-logging-1.1.3.jar", "WebGoat:WebGoatLegacy:war:6.0.1/commons-logging:commons-logging:jar:1.1.3"], "identificationSource": "Sonatype", "licenseData": {"declaredLicenses": [{"licenseId": "Apache-2.0", "licenseName": "Apache-2.0"}], "observedLicenses": [{"licenseId": "Apache-2.0", "licenseName": "Apache-2.0"}], "effectiveLicenses": [{"licenseId": "Apache-2.0", "licenseName": "Apache-2.0"}], "overriddenLicenses": [], "status": "Open", "effectiveLicenseThreats": [{"licenseThreatGroupName": "Liberal", "licenseThreatGroupLevel": 0, "licenseThreatGroupCategory": "no-threat"}]}, "securityData": {"securityIssues": []}, "dependencyData": {"directDependency": true, "innerSource": false}, "remediation": {"versionChanges": [{"type": "next-non-failing", "data": {"component": {"packageUrl": "pkg:maven/commons-logging/commons-logging@1.1.3?type=jar", "hash": null, "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "commons-logging", "classifier": "", "extension": "jar", "groupId": "commons-logging", "version": "1.1.3"}}, "displayName": "commons-logging : commons-logging : 1.1.3"}}}, {"type": "next-non-failing-with-dependencies", "data": {"component": {"packageUrl": "pkg:maven/commons-logging/commons-logging@1.1.3?type=jar", "hash": null, "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "commons-logging", "classifier": "", "extension": "jar", "groupId": "commons-logging", "version": "1.1.3"}}, "displayName": "commons-logging : commons-logging : 1.1.3"}}}]}}, {"packageUrl": "pkg:maven/ecs/ecs@1.4.2?type=jar", "hash": "f9bc5fdde56d60876c17", "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "ecs", "classifier": "", "extension": "jar", "groupId": "ecs", "version": "1.4.2"}}, "displayName": "ecs : ecs : 1.4.2", "proprietary": false, "matchState": "exact", "pathnames": ["./target/WebGoatLegacy-6.0.1-war-exec.jar/WebGoat.war/WEB-INF/lib/ecs-1.4.2.jar", "./target/WebGoatLegacy-6.0.1/WEB-INF/lib/ecs-1.4.2.jar", "WebGoat:WebGoatLegacy:war:6.0.1/ecs:ecs:jar:1.4.2"], "identificationSource": "Sonatype", "licenseData": {"declaredLicenses": [{"licenseId": "Apache-1.1", "licenseName": "Apache-1.1"}], "observedLicenses": [{"licenseId": "No-Source-License", "licenseName": "No Source License"}], "effectiveLicenses": [{"licenseId": "Apache-1.1", "licenseName": "Apache-1.1"}], "overriddenLicenses": [], "status": "Open", "effectiveLicenseThreats": [{"licenseThreatGroupName": "Liberal", "licenseThreatGroupLevel": 0, "licenseThreatGroupCategory": "no-threat"}, {"licenseThreatGroupName": "Sonatype Special Licenses", "licenseThreatGroupLevel": 5, "licenseThreatGroupCategory": "severe"}]}, "securityData": {"securityIssues": []}, "dependencyData": {"directDependency": true, "innerSource": false}, "remediation": {"versionChanges": [{"type": "next-non-failing", "data": {"component": {"packageUrl": "pkg:maven/ecs/ecs@1.4.2?type=jar", "hash": null, "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "ecs", "classifier": "", "extension": "jar", "groupId": "ecs", "version": "1.4.2"}}, "displayName": "ecs : ecs : 1.4.2"}}}, {"type": "next-non-failing-with-dependencies", "data": {"component": {"packageUrl": "pkg:maven/ecs/ecs@1.4.2?type=jar", "hash": null, "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "ecs", "classifier": "", "extension": "jar", "groupId": "ecs", "version": "1.4.2"}}, "displayName": "ecs : ecs : 1.4.2"}}}]}}, {"packageUrl": "pkg:maven/net.sourceforge.jtds/jtds@1.2.2?type=jar", "hash": "fcee1795fd535cd7a8a8", "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "jtds", "classifier": "", "extension": "jar", "groupId": "net.sourceforge.jtds", "version": "1.2.2"}}, "displayName": "net.sourceforge.jtds : jtds : 1.2.2", "proprietary": false, "matchState": "exact", "pathnames": ["./target/WebGoatLegacy-6.0.1-war-exec.jar/WebGoat.war/WEB-INF/lib/jtds-1.2.2.jar", "./target/WebGoatLegacy-6.0.1/WEB-INF/lib/jtds-1.2.2.jar", "WebGoat:WebGoatLegacy:war:6.0.1/net.sourceforge.jtds:jtds:jar:1.2.2"], "identificationSource": "Sonatype", "licenseData": {"declaredLicenses": [{"licenseId": "LGPL-3.0", "licenseName": "LGPL-3.0"}], "observedLicenses": [{"licenseId": "Bouncycastle-license", "licenseName": "Bouncycastle-license"}], "effectiveLicenses": [{"licenseId": "LGPL-3.0", "licenseName": "LGPL-3.0"}, {"licenseId": "Bouncycastle-license", "licenseName": "Bouncycastle-license"}], "overriddenLicenses": [], "status": "Open", "effectiveLicenseThreats": [{"licenseThreatGroupName": "Liberal", "licenseThreatGroupLevel": 0, "licenseThreatGroupCategory": "no-threat"}, {"licenseThreatGroupName": "Weak Copyleft", "licenseThreatGroupLevel": 2, "licenseThreatGroupCategory": "moderate"}]}, "securityData": {"securityIssues": []}, "dependencyData": {"directDependency": true, "innerSource": false}, "remediation": {"versionChanges": [{"type": "next-non-failing", "data": {"component": {"packageUrl": "pkg:maven/net.sourceforge.jtds/jtds@1.2.2?type=jar", "hash": null, "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "jtds", "classifier": "", "extension": "jar", "groupId": "net.sourceforge.jtds", "version": "1.2.2"}}, "displayName": "net.sourceforge.jtds : jtds : 1.2.2"}}}, {"type": "next-non-failing-with-dependencies", "data": {"component": {"packageUrl": "pkg:maven/net.sourceforge.jtds/jtds@1.2.2?type=jar", "hash": null, "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "jtds", "classifier": "", "extension": "jar", "groupId": "net.sourceforge.jtds", "version": "1.2.2"}}, "displayName": "net.sourceforge.jtds : jtds : 1.2.2"}}}]}}, {"packageUrl": "pkg:maven/com.fasterxml.jackson.core/jackson-core@2.0.4?type=jar", "hash": "fda2057c7eafd65915de", "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "jackson-core", "classifier": "", "extension": "jar", "groupId": "com.fasterxml.jackson.core", "version": "2.0.4"}}, "displayName": "com.fasterxml.jackson.core : jackson-core : 2.0.4", "proprietary": false, "matchState": "exact", "pathnames": ["./target/WebGoatLegacy-6.0.1-war-exec.jar/WebGoat.war/WEB-INF/lib/jackson-core-2.0.4.jar", "./target/WebGoatLegacy-6.0.1/WEB-INF/lib/jackson-core-2.0.4.jar", "WebGoat:WebGoatLegacy:war:6.0.1/com.fasterxml.jackson.core:jackson-core:jar:2.0.4"], "identificationSource": "Sonatype", "licenseData": {"declaredLicenses": [{"licenseId": "Apache-2.0", "licenseName": "Apache-2.0"}], "observedLicenses": [{"licenseId": "See-License-Clause", "licenseName": "See-License-Clause"}], "effectiveLicenses": [{"licenseId": "Apache-2.0", "licenseName": "Apache-2.0"}, {"licenseId": "See-License-Clause", "licenseName": "See-License-Clause"}], "overriddenLicenses": [], "status": "Open", "effectiveLicenseThreats": [{"licenseThreatGroupName": "Liberal", "licenseThreatGroupLevel": 0, "licenseThreatGroupCategory": "no-threat"}, {"licenseThreatGroupName": "Non Standard", "licenseThreatGroupLevel": 6, "licenseThreatGroupCategory": "severe"}]}, "securityData": {"securityIssues": [{"source": "sonatype", "reference": "sonatype-2017-0355", "severity": 7.5, "status": "Open", "url": "http://localhost:8070/ui/links/vln/sonatype-2017-0355", "threatCategory": "critical", "cwe": "20", "cvssVector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H", "cvssVectorSource": "sonatype_cvss_3", "deeperData": {"identifier": "sonatype-2017-0355", "vulnIds": ["sonatype-2017-0355"], "source": {"shortName": "Sonatype", "longName": "Sonatype Data Research"}, "mainSeverity": {"source": "sonatype_cvss_3", "score": 7.5, "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}, "severityScores": [{"source": "cve_cvss_2", "score": 0.0}], "weakness": {"cweSource": "Sonatype", "cweIds": [{"id": "20", "uri": "https://cwe.mitre.org/data/definitions/20.html"}]}, "categories": ["data"], "description": null, "explanationMarkdown": "`jackson-core` is vulnerable to Denial of Service (DoS). The `_reportInvalidToken()` function in the `UTF8StreamJsonParser` and `ReaderBasedJsonParser` classes allows large amounts of extraneous data to be printed to the server log. An attacker can exploit this vulnerability by crafting a POST request containing large amounts of data.  When the data contains invalid JSON, an exception is thrown, which results in the consumption of available disk space when the error message is written to `server.log` along with the request data.", "detectionMarkdown": "The application is vulnerable by using this component.", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue.", "advisories": [{"referenceType": "ATTACK", "url": "https://issues.jboss.org/browse/JBEAP-6316"}, {"referenceType": "PROJECT", "url": "https://github.com/FasterXML/jackson-core/pull/322"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "sonatype", "reference": "sonatype-2022-6438", "severity": 7.5, "status": "Open", "url": "http://localhost:8070/ui/links/vln/sonatype-2022-6438", "threatCategory": "critical", "cwe": "400", "cvssVector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H", "cvssVectorSource": "sonatype_cvss_3", "deeperData": {"identifier": "sonatype-2022-6438", "vulnIds": ["sonatype-2022-6438"], "source": {"shortName": "Sonatype", "longName": "Sonatype Data Research"}, "mainSeverity": {"source": "sonatype_cvss_3", "score": 7.5, "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}, "severityScores": [{"source": "cve_cvss_2", "score": 0.0}], "weakness": {"cweSource": "Sonatype", "cweIds": [{"id": "400", "uri": "https://cwe.mitre.org/data/definitions/400.html"}]}, "categories": ["data"], "description": null, "explanationMarkdown": "The `jackson-core` package is vulnerable to a Denial of Service (DoS) attack. The methods in the classes listed below fail to restrict input size when performing numeric type conversions. A remote attacker can exploit this vulnerability by causing the application to deserialize data containing certain numeric types with large values. Deserializing many of the aforementioned objects may cause the application to exhaust all available resources, resulting in a DoS condition.\n\n*Vulnerable File(s) and Function(s)*:\n\ncom/fasterxml/jackson/core/base/ParserBase.class\n- _parseSlowInt()\n- convertNumberToBigDecimal()\n\ncom/fasterxml/jackson/core/base/ParserMinimalBase.class\n- getValueAsDouble()\n\ncom/fasterxml/jackson/core/util/TextBuffer.class\n- contentsAsDecimal()\n- contentsAsDouble()\n- contentsAsFloat()", "detectionMarkdown": "The application is vulnerable by using this component if it does not restrict user-supplied numeric input values prior to deserialization.", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue.\n\nNote: If this component is included as a bundled/transitive dependency of another component, there may not be an upgrade path. In this instance, we recommend contacting the maintainers who included the vulnerable package. Alternatively, we recommend investigating alternative components or a potential mitigating control.", "advisories": [{"referenceType": "PROJECT", "url": "https://github.com/FasterXML/jackson-core/pull/827"}, {"referenceType": "PROJECT", "url": "https://github.com/FasterXML/jackson-core/pull/846"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}]}, "dependencyData": {"directDependency": true, "innerSource": false}, "remediation": {"versionChanges": [{"type": "next-no-violations", "data": {"component": {"packageUrl": "pkg:maven/com.fasterxml.jackson.core/jackson-core@2.15.0-rc1?type=jar", "hash": null, "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "jackson-core", "classifier": "", "extension": "jar", "groupId": "com.fasterxml.jackson.core", "version": "2.15.0-rc1"}}, "displayName": "com.fasterxml.jackson.core : jackson-core : 2.15.0-rc1"}}}, {"type": "next-non-failing", "data": {"component": {"packageUrl": "pkg:maven/com.fasterxml.jackson.core/jackson-core@2.0.4?type=jar", "hash": null, "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "jackson-core", "classifier": "", "extension": "jar", "groupId": "com.fasterxml.jackson.core", "version": "2.0.4"}}, "displayName": "com.fasterxml.jackson.core : jackson-core : 2.0.4"}}}, {"type": "next-no-violations-with-dependencies", "data": {"component": {"packageUrl": "pkg:maven/com.fasterxml.jackson.core/jackson-core@2.15.0-rc1?type=jar", "hash": null, "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "jackson-core", "classifier": "", "extension": "jar", "groupId": "com.fasterxml.jackson.core", "version": "2.15.0-rc1"}}, "displayName": "com.fasterxml.jackson.core : jackson-core : 2.15.0-rc1"}}}, {"type": "next-non-failing-with-dependencies", "data": {"component": {"packageUrl": "pkg:maven/com.fasterxml.jackson.core/jackson-core@2.0.4?type=jar", "hash": null, "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "jackson-core", "classifier": "", "extension": "jar", "groupId": "com.fasterxml.jackson.core", "version": "2.0.4"}}, "displayName": "com.fasterxml.jackson.core : jackson-core : 2.0.4"}}}]}}, {"packageUrl": "pkg:maven/org.apache.activemq.examples.modules/artemis-tomcat-jndi-resources-sample@2.11.0?classifier=exec-war&type=jar", "hash": "95d6bd1f3269a52f7bbf", "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "artemis-tomcat-jndi-resources-sample", "classifier": "exec-war", "extension": "jar", "groupId": "org.apache.activemq.examples.modules", "version": "2.11.0"}}, "displayName": "org.apache.activemq.examples.modules : artemis-tomcat-jndi-resources-sample : jar : exec-war : 2.11.0", "proprietary": false, "matchState": "similar", "pathnames": ["./target/WebGoatLegacy-6.0.1-war-exec.jar"], "identificationSource": "Sonatype", "licenseData": {"declaredLicenses": [{"licenseId": "Apache-2.0", "licenseName": "Apache-2.0"}], "observedLicenses": [{"licenseId": "Apache-2.0", "licenseName": "Apache-2.0"}], "effectiveLicenses": [{"licenseId": "Apache-2.0", "licenseName": "Apache-2.0"}], "overriddenLicenses": [], "status": "Open", "effectiveLicenseThreats": [{"licenseThreatGroupName": "Liberal", "licenseThreatGroupLevel": 0, "licenseThreatGroupCategory": "no-threat"}]}, "securityData": {"securityIssues": [{"source": "cve", "reference": "CVE-2013-2071", "severity": 2.6, "status": "Open", "url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2013-2071", "threatCategory": "moderate", "cwe": "200", "cvssVector": "AV:N/AC:H/Au:N/C:P/I:N/A:N", "cvssVectorSource": "cve_cvss_2", "deeperData": {"identifier": "CVE-2013-2071", "vulnIds": ["CVE-2013-2071"], "vulnerabilityLink": "http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2013-2071", "source": {"shortName": "CVE", "longName": "National Vulnerability Database"}, "mainSeverity": {"source": "cve_cvss_2", "score": 2.6, "vector": "AV:N/AC:H/Au:N/C:P/I:N/A:N"}, "severityScores": [{"source": "sonatype_cvss_3", "score": 3.7}], "weakness": {"cweSource": "CVE", "cweIds": [{"id": "200", "uri": "https://cwe.mitre.org/data/definitions/200.html"}]}, "categories": ["functional"], "description": "java/org/apache/catalina/core/AsyncContextImpl.java in Apache Tomcat 7.x before 7.0.40 does not properly handle the throwing of a RuntimeException in an AsyncListener in an application, which allows context-dependent attackers to obtain sensitive request information intended for other applications in opportunistic circumstances via an application that records the requests that it processes.", "explanationMarkdown": "Apache Tomcat `AsyncListeners` does not properly handle RuntimeExceptions, allowing an attacker to disclose potentially sensitive information on the targeted Tomcat server. This happens due to `AsyncListeners` using a reusable object for requests which, when a RuntimeException is thrown, does not get cleaned before reuse. This results in the next request getting sent to the wrong destination. For example, web-app1 causes a RuntimeException to occur and the reusable object does not get cleaned. Following this, web-app2 sends a request and web-app1 receives the response with the uncleaned object data.", "detectionMarkdown": "You are vulnerable by using this component.", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue.", "advisories": [{"referenceType": "PROJECT", "url": "https://bz.apache.org/bugzilla/show_bug.cgi?id=54178#c10"}, {"referenceType": "THIRD_PARTY", "url": "http://tools.cisco.com/security/center/viewAlert.x?alertId=29283"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "cve", "reference": "CVE-2013-4286", "severity": 5.8, "status": "Open", "url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2013-4286", "threatCategory": "severe", "cwe": "20", "cvssVector": "AV:N/AC:M/Au:N/C:P/I:P/A:N", "cvssVectorSource": "cve_cvss_2", "deeperData": {"identifier": "CVE-2013-4286", "vulnIds": ["CVE-2013-4286"], "vulnerabilityLink": "http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2013-4286", "source": {"shortName": "CVE", "longName": "National Vulnerability Database"}, "mainSeverity": {"source": "cve_cvss_2", "score": 5.8, "vector": "AV:N/AC:M/Au:N/C:P/I:P/A:N"}, "severityScores": [{"source": "sonatype_cvss_3", "score": 7.5}], "weakness": {"cweSource": "CVE", "cweIds": [{"id": "20", "uri": "https://cwe.mitre.org/data/definitions/20.html"}]}, "categories": ["operational"], "description": "Apache Tomcat before 6.0.39, 7.x before 7.0.47, and 8.x before 8.0.0-RC3, when an HTTP connector or AJP connector is used, does not properly handle certain inconsistent HTTP request headers, which allows remote attackers to trigger incorrect identification of a request's length and conduct request-smuggling attacks via (1) multiple Content-Length headers or (2) a Content-Length header and a \"Transfer-Encoding: chunked\" header.  NOTE: this vulnerability exists because of an incomplete fix for CVE-2005-2090.", "explanationMarkdown": "An incomplete fix for CVE-2005-2090 leaves Apache Tomcat still vulnerable to certain HTTP requests that can cause an incorrect determination of the size of the data to process. This can allow \"an attacker to poison a web-cache, perform an XSS attack and obtain sensitive information from requests other than their own.\"\n\nref: http://tomcat.apache.org/security-6.html", "detectionMarkdown": "You are vulnerable if the application is using this component.", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue.", "advisories": [{"referenceType": "PROJECT", "url": "http://tomcat.apache.org/security-6.html"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "cve", "reference": "CVE-2013-4322", "severity": 4.3, "status": "Open", "url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2013-4322", "threatCategory": "severe", "cwe": "20", "cvssVector": "AV:N/AC:M/Au:N/C:N/I:N/A:P", "cvssVectorSource": "cve_cvss_2", "deeperData": {"identifier": "CVE-2013-4322", "vulnIds": ["CVE-2013-4322"], "vulnerabilityLink": "http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2013-4322", "source": {"shortName": "CVE", "longName": "National Vulnerability Database"}, "mainSeverity": {"source": "cve_cvss_2", "score": 4.3, "vector": "AV:N/AC:M/Au:N/C:N/I:N/A:P"}, "severityScores": [{"source": "sonatype_cvss_3", "score": 7.5}], "weakness": {"cweSource": "CVE", "cweIds": [{"id": "20", "uri": "https://cwe.mitre.org/data/definitions/20.html"}]}, "categories": ["operational"], "description": "Apache Tomcat before 6.0.39, 7.x before 7.0.50, and 8.x before 8.0.0-RC10 processes chunked transfer coding without properly handling (1) a large total amount of chunked data or (2) whitespace characters in an HTTP header value within a trailer field, which allows remote attackers to cause a denial of service by streaming data.  NOTE: this vulnerability exists because of an incomplete fix for CVE-2012-3544.", "explanationMarkdown": "An incomplete fix for CVE-2012-3544 leaves Apache Tomcat still vulnerable to a denial of service attack if a HTTP request using chunked encoding contains trailing whitespace in the header or if the request is very large.", "detectionMarkdown": "You are vulnerable by using this component.", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue.", "advisories": [{"referenceType": "THIRD_PARTY", "url": "https://bugzilla.redhat.com/show_bug.cgi?id=1069905"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "cve", "reference": "CVE-2013-4444", "severity": 6.8, "status": "Open", "url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2013-4444", "threatCategory": "severe", "cwe": "94", "cvssVector": "AV:N/AC:M/Au:N/C:P/I:P/A:P", "cvssVectorSource": "cve_cvss_2", "deeperData": {"identifier": "CVE-2013-4444", "vulnIds": ["CVE-2013-4444"], "vulnerabilityLink": "http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2013-4444", "source": {"shortName": "CVE", "longName": "National Vulnerability Database"}, "mainSeverity": {"source": "cve_cvss_2", "score": 6.8, "vector": "AV:N/AC:M/Au:N/C:P/I:P/A:P"}, "severityScores": [{"source": "sonatype_cvss_3", "score": 7.3}], "weakness": {"cweSource": "CVE", "cweIds": [{"id": "94", "uri": "https://cwe.mitre.org/data/definitions/94.html"}]}, "categories": ["configuration", "functional", "operational"], "description": "Unrestricted file upload vulnerability in Apache Tomcat 7.x before 7.0.40, in certain situations involving outdated java.io.File code and a custom JMX configuration, allows remote attackers to execute arbitrary code by uploading and accessing a JSP file.", "explanationMarkdown": "\"In very limited circumstances, it was possible for an attacker to upload a malicious JSP to a Tomcat server and then trigger the execution of that JSP.\"\n\nref: https://tomcat.apache.org/security-7.html", "detectionMarkdown": "\"For this attack to succeed all of the following requirements must be met:\n\n1. Using Oracle Java 1.7.0 update 25 or earlier (or any other Java implementation where java.io.File is vulnerable to null byte injection).\n2. A web application must be deployed to a vulnerable version of Tomcat.\n3. The web application must use the Servlet 3.0 File Upload feature.\n4. A file location within a deployed web application must be writeable by the user the Tomcat process is running as. The Tomcat security documentation recommends against this.\n5. A custom listener for JMX connections (e.g. the JmxRemoteListener that is not enabled by default) must be configured and be able to load classes from Tomcat's common class loader (i.e. the custom JMX listener must be placed in Tomcat's lib directory).\n6. The custom JMX listener must be bound to an address other than localhost for a remote attack (it is bound to localhost by default). If the custom JMX listener is bound to localhost, a local attack will still be possible.\n\nNote that requirements 2 and 3 may be replaced with the following requirement:\n\n7. A web application is deployed that uses Apache Commons File Upload 1.2.1 or earlier.\"\n\nref: https://tomcat.apache.org/security-7.html", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue.", "advisories": [{"referenceType": "PROJECT", "url": "https://tomcat.apache.org/security-7.html"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "cve", "reference": "CVE-2013-4590", "severity": 4.3, "status": "Open", "url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2013-4590", "threatCategory": "severe", "cwe": "200", "cvssVector": "AV:N/AC:M/Au:N/C:P/I:N/A:N", "cvssVectorSource": "cve_cvss_2", "deeperData": {"identifier": "CVE-2013-4590", "vulnIds": ["CVE-2013-4590"], "vulnerabilityLink": "http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2013-4590", "source": {"shortName": "CVE", "longName": "National Vulnerability Database"}, "mainSeverity": {"source": "cve_cvss_2", "score": 4.3, "vector": "AV:N/AC:M/Au:N/C:P/I:N/A:N"}, "severityScores": [{"source": "sonatype_cvss_3", "score": 8.2}], "weakness": {"cweSource": "CVE", "cweIds": [{"id": "200", "uri": "https://cwe.mitre.org/data/definitions/200.html"}]}, "categories": ["operational"], "description": "Apache Tomcat before 6.0.39, 7.x before 7.0.50, and 8.x before 8.0.0-RC10 allows attackers to obtain \"Tomcat internals\" information by leveraging the presence of an untrusted web application with a context.xml, web.xml, *.jspx, *.tagx, or *.tld XML document containing an external entity declaration in conjunction with an entity reference, related to an XML External Entity (XXE) issue.", "explanationMarkdown": "Apache Tomcat allows XML external entity resolution in application-provided XML files \"such as web.xml, content.xml, *.tld, *.tagx, and *.jspx.\" An attacker, able to deploy a malicious application to the Tomcat instance, can execute XML Eternal Entity Attacks to access sensitive information regarding \"Tomcat internals.\"\n\nref: https://bugzilla.redhat.com/show_bug.cgi?id=1069911", "detectionMarkdown": "You are vulnerable by using this component. The attack is dependent upon user controlled data being written to the web application directories.", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue.", "advisories": [{"referenceType": "THIRD_PARTY", "url": "https://bugzilla.redhat.com/show_bug.cgi?id=1069911"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "cve", "reference": "CVE-2014-0050", "severity": 7.5, "status": "Open", "url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2014-0050", "threatCategory": "critical", "cwe": "264", "cvssVector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "cvssVectorSource": "cve_cvss_2", "deeperData": {"identifier": "CVE-2014-0050", "vulnIds": ["CVE-2014-0050"], "vulnerabilityLink": "http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2014-0050", "source": {"shortName": "CVE", "longName": "National Vulnerability Database"}, "mainSeverity": {"source": "cve_cvss_2", "score": 7.5, "vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P"}, "severityScores": [{"source": "sonatype_cvss_3", "score": 7.5}], "weakness": {"cweSource": "CVE", "cweIds": [{"id": "264", "uri": "https://cwe.mitre.org/data/definitions/264.html"}]}, "categories": ["functional", "operational"], "description": "MultipartStream.java in Apache Commons FileUpload before 1.3.1, as used in Apache Tomcat, JBoss Web, and other products, allows remote attackers to cause a denial of service (infinite loop and CPU consumption) via a crafted Content-Type header that bypasses a loop's intended exit conditions.", "explanationMarkdown": "The MultipartStream.java class processes multipart requests for Apache Commons FileUpload. It was found that a boundary condition related to the size of the request is not properly checked. This can be leveraged by a remote user to cause an infinite loop and excess cpu usage. \n\nSee the trustwave.com link for more technical details.", "detectionMarkdown": "You are vulnerable if using this component to process user supplied data or untrusted network traffic is able to be processed by your application.", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue or limiting the size of the Content Header of a multipart request to 4091 bytes or less.", "advisories": [{"referenceType": "ATTACK", "url": "http://www.rapid7.com/db/modules/auxiliary/dos/http/apache_commons_fileupload_dos"}, {"referenceType": "ATTACK", "url": "https://www.trustwave.com/Resources/SpiderLabs-Blog/CVE-2014-0050--Exploit-with-Boundaries,-Loops-without-Boundaries/"}, {"referenceType": "PROJECT", "url": "http://mail-archives.apache.org/mod_mbox/www-announce/201402.mbox/%3C52F373FC.9030907@apache.org%3E"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "cve", "reference": "CVE-2014-0075", "severity": 5.0, "status": "Open", "url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2014-0075", "threatCategory": "severe", "cwe": "189", "cvssVector": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "cvssVectorSource": "cve_cvss_2", "deeperData": {"identifier": "CVE-2014-0075", "vulnIds": ["CVE-2014-0075"], "vulnerabilityLink": "http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2014-0075", "source": {"shortName": "CVE", "longName": "National Vulnerability Database"}, "mainSeverity": {"source": "cve_cvss_2", "score": 5.0, "vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P"}, "severityScores": [{"source": "sonatype_cvss_3", "score": 7.5}], "weakness": {"cweSource": "CVE", "cweIds": [{"id": "189", "uri": "https://cwe.mitre.org/data/definitions/189.html"}]}, "categories": ["operational"], "description": "Integer overflow in the parseChunkHeader function in java/org/apache/coyote/http11/filters/ChunkedInputFilter.java in Apache Tomcat before 6.0.40, 7.x before 7.0.53, and 8.x before 8.0.4 allows remote attackers to cause a denial of service (resource consumption) via a malformed chunk size in chunked transfer coding of a request during the streaming of data.", "explanationMarkdown": "Apache Tomcat does not properly restrict the size of HTTP headers when processing HTTP requests with chunked encoding. This exposes a bug where a variable used as a counter can be forced to go past its maximum arithmetic limit which leads to this variable not behaving as it should. This can result in a denial of service if a HTTP request is extremely large.", "detectionMarkdown": "You are vulnerable by using this component.", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue.", "advisories": [{"referenceType": "THIRD_PARTY", "url": "http://seclists.org/fulldisclosure/2014/May/133"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "cve", "reference": "CVE-2014-0096", "severity": 4.3, "status": "Open", "url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2014-0096", "threatCategory": "severe", "cwe": "264", "cvssVector": "AV:N/AC:M/Au:N/C:P/I:N/A:N", "cvssVectorSource": "cve_cvss_2", "deeperData": {"identifier": "CVE-2014-0096", "vulnIds": ["CVE-2014-0096"], "vulnerabilityLink": "http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2014-0096", "source": {"shortName": "CVE", "longName": "National Vulnerability Database"}, "mainSeverity": {"source": "cve_cvss_2", "score": 4.3, "vector": "AV:N/AC:M/Au:N/C:P/I:N/A:N"}, "severityScores": [{"source": "sonatype_cvss_3", "score": 7.5}], "weakness": {"cweSource": "CVE", "cweIds": [{"id": "264", "uri": "https://cwe.mitre.org/data/definitions/264.html"}]}, "categories": ["operational"], "description": "java/org/apache/catalina/servlets/DefaultServlet.java in the default servlet in Apache Tomcat before 6.0.40, 7.x before 7.0.53, and 8.x before 8.0.4 does not properly restrict XSLT stylesheets, which allows remote attackers to bypass security-manager restrictions and read arbitrary files via a crafted web application that provides an XML external entity declaration in conjunction with an entity reference, related to an XML External Entity (XXE) issue.", "explanationMarkdown": "The Apache Tomcat default servlet, `org.apache.catalina.servlets.DefaultServlet`, allows web applications to format directory listings though XSLT files. \"When running [a default servlet] under a security manager, the processing of these [XSLT files were] not subject to the same constraints as the web application.\" An attacker, able to run a web application on the Tomcat instance, is able to use this vulnerability to conduct XML External Entity attacks. \n\nref: http://seclists.org/fulldisclosure/2014/May/135", "detectionMarkdown": "You are vulnerable by using this component. The attack is dependent upon user controlled data being written to the web application directories.", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue.", "advisories": [{"referenceType": "THIRD_PARTY", "url": "http://seclists.org/fulldisclosure/2014/May/135"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "cve", "reference": "CVE-2014-0099", "severity": 4.3, "status": "Open", "url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2014-0099", "threatCategory": "severe", "cwe": "189", "cvssVector": "AV:N/AC:M/Au:N/C:N/I:P/A:N", "cvssVectorSource": "cve_cvss_2", "deeperData": {"identifier": "CVE-2014-0099", "vulnIds": ["CVE-2014-0099"], "vulnerabilityLink": "http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2014-0099", "source": {"shortName": "CVE", "longName": "National Vulnerability Database"}, "mainSeverity": {"source": "cve_cvss_2", "score": 4.3, "vector": "AV:N/AC:M/Au:N/C:N/I:P/A:N"}, "severityScores": [{"source": "sonatype_cvss_3", "score": 5.3}], "weakness": {"cweSource": "CVE", "cweIds": [{"id": "189", "uri": "https://cwe.mitre.org/data/definitions/189.html"}]}, "categories": ["functional", "operational"], "description": "Integer overflow in java/org/apache/tomcat/util/buf/Ascii.java in Apache Tomcat before 6.0.40, 7.x before 7.0.53, and 8.x before 8.0.4, when operated behind a reverse proxy, allows remote attackers to conduct HTTP request smuggling attacks via a crafted Content-Length HTTP header.", "explanationMarkdown": "When Apache Tomcat is behind a reverse proxy, a flaw regarding how network requests are processed allows for a remote attacker to conduct a request smuggling attack.", "detectionMarkdown": "You are vulnerable if using Apache Tomcat behind a reverse proxy.", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue.", "advisories": [{"referenceType": "PROJECT", "url": "http://tomcat.apache.org/security-6.html"}, {"referenceType": "PROJECT", "url": "https://www.mail-archive.com/users@tomcat.apache.org/msg113011.html"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "cve", "reference": "CVE-2014-0119", "severity": 4.3, "status": "Open", "url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2014-0119", "threatCategory": "severe", "cwe": "264", "cvssVector": "AV:N/AC:M/Au:N/C:P/I:N/A:N", "cvssVectorSource": "cve_cvss_2", "deeperData": {"identifier": "CVE-2014-0119", "vulnIds": ["CVE-2014-0119"], "vulnerabilityLink": "http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2014-0119", "source": {"shortName": "CVE", "longName": "National Vulnerability Database"}, "mainSeverity": {"source": "cve_cvss_2", "score": 4.3, "vector": "AV:N/AC:M/Au:N/C:P/I:N/A:N"}, "severityScores": [{"source": "sonatype_cvss_3", "score": 6.8}], "weakness": {"cweSource": "CVE", "cweIds": [{"id": "264", "uri": "https://cwe.mitre.org/data/definitions/264.html"}]}, "categories": ["operational"], "description": "Apache Tomcat before 6.0.40, 7.x before 7.0.54, and 8.x before 8.0.6 does not properly constrain the class loader that accesses the XML parser used with an XSLT stylesheet, which allows remote attackers to (1) read arbitrary files via a crafted web application that provides an XML external entity declaration in conjunction with an entity reference, related to an XML External Entity (XXE) issue, or (2) read files associated with different web applications on a single Tomcat instance via a crafted web application.", "explanationMarkdown": "A flaw in Apache Tomcat allows for an attacker to compromise/change the XML parser resulting in XXE attack or the viewing of Tomcat application files.", "detectionMarkdown": "The application is vulnerable by using this component.", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue.", "advisories": [{"referenceType": "PROJECT", "url": "https://tomcat.apache.org/security-8.html"}, {"referenceType": "THIRD_PARTY", "url": "http://advisories.mageia.org/MGASA-2014-0268.html"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "cve", "reference": "CVE-2014-0227", "severity": 6.4, "status": "Open", "url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2014-0227", "threatCategory": "severe", "cwe": "19", "cvssVector": "AV:N/AC:L/Au:N/C:N/I:P/A:P", "cvssVectorSource": "cve_cvss_2", "deeperData": {"identifier": "CVE-2014-0227", "vulnIds": ["CVE-2014-0227"], "vulnerabilityLink": "http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2014-0227", "source": {"shortName": "CVE", "longName": "National Vulnerability Database"}, "mainSeverity": {"source": "cve_cvss_2", "score": 6.4, "vector": "AV:N/AC:L/Au:N/C:N/I:P/A:P"}, "severityScores": [{"source": "sonatype_cvss_3", "score": 6.4}], "weakness": {"cweSource": "CVE", "cweIds": [{"id": "19", "uri": "https://cwe.mitre.org/data/definitions/19.html"}]}, "categories": ["operational"], "description": "java/org/apache/coyote/http11/filters/ChunkedInputFilter.java in Apache Tomcat 6.x before 6.0.42, 7.x before 7.0.55, and 8.x before 8.0.9 does not properly handle attempts to continue reading data after an error has occurred, which allows remote attackers to conduct HTTP request smuggling attacks or cause a denial of service (resource consumption) by streaming data with malformed chunked transfer coding.", "explanationMarkdown": "A remote attacker can send a crafted HTTP request (one that contains two Content-Length headers with conflicting/malformed values) to Apache Tomcat that will make Apache Tomcat continue reading data after an error has occurred. An attacker can use this to hide a second HTTP request inside the original, crafted HTTP request (request smuggling). As stated by IBM: \"An attacker could exploit this vulnerability to poison the web cache, bypass web application firewall protection, and conduct XSS attacks.\"\n\nref: http://www-01.ibm.com/support/docview.wss?uid=swg21959707", "detectionMarkdown": "You are vulnerable by using this component.", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue.", "advisories": [{"referenceType": "THIRD_PARTY", "url": "http://tools.cisco.com/security/center/viewAlert.x?alertId=37408"}, {"referenceType": "THIRD_PARTY", "url": "http://www-01.ibm.com/support/docview.wss?uid=swg21959707"}, {"referenceType": "THIRD_PARTY", "url": "https://bugzilla.redhat.com/show_bug.cgi?id=1109196"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "cve", "reference": "CVE-2014-0230", "severity": 7.8, "status": "Open", "url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2014-0230", "threatCategory": "critical", "cwe": "399", "cvssVector": "AV:N/AC:L/Au:N/C:N/I:N/A:C", "cvssVectorSource": "cve_cvss_2", "deeperData": {"identifier": "CVE-2014-0230", "vulnIds": ["CVE-2014-0230"], "vulnerabilityLink": "http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2014-0230", "source": {"shortName": "CVE", "longName": "National Vulnerability Database"}, "mainSeverity": {"source": "cve_cvss_2", "score": 7.8, "vector": "AV:N/AC:L/Au:N/C:N/I:N/A:C"}, "severityScores": [{"source": "sonatype_cvss_3", "score": 7.8}], "weakness": {"cweSource": "CVE", "cweIds": [{"id": "399", "uri": "https://cwe.mitre.org/data/definitions/399.html"}]}, "categories": ["data", "operational"], "description": "Apache Tomcat 6.x before 6.0.44, 7.x before 7.0.55, and 8.x before 8.0.9 does not properly handle cases where an HTTP response occurs before finishing the reading of an entire request body, which allows remote attackers to cause a denial of service (thread consumption) via a series of aborted upload attempts.", "explanationMarkdown": "\"When a response for a request with a request body is returned to the user agent before the request body is fully read, by default Tomcat swallows the remaining request body so that the next request on the connection may be processed. There was no limit to the size of request body that Tomcat would swallow. This permitted a limited Denial of Service as Tomcat would never close the connection and a processing thread would remain allocated to the connection.\"\nRef: http://tomcat.apache.org/security-8.html", "detectionMarkdown": "You are vulnerable by using this component.", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue.", "advisories": [{"referenceType": "PROJECT", "url": "http://tomcat.apache.org/security-8.html"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "cve", "reference": "CVE-2014-7810", "severity": 5.0, "status": "Open", "url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2014-7810", "threatCategory": "severe", "cwe": "284", "cvssVector": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "cvssVectorSource": "cve_cvss_2", "deeperData": {"identifier": "CVE-2014-7810", "vulnIds": ["CVE-2014-7810"], "vulnerabilityLink": "http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2014-7810", "source": {"shortName": "CVE", "longName": "National Vulnerability Database"}, "mainSeverity": {"source": "cve_cvss_2", "score": 5.0, "vector": "AV:N/AC:L/Au:N/C:N/I:P/A:N"}, "severityScores": [{"source": "sonatype_cvss_3", "score": 7.5}], "weakness": {"cweSource": "CVE", "cweIds": [{"id": "284", "uri": "https://cwe.mitre.org/data/definitions/284.html"}]}, "categories": ["data", "functional"], "description": "The Expression Language (EL) implementation in Apache Tomcat 6.x before 6.0.44, 7.x before 7.0.58, and 8.x before 8.0.16 does not properly consider the possibility of an accessible interface implemented by an inaccessible class, which allows attackers to bypass a SecurityManager protection mechanism via a web application that leverages use of incorrect privileges during EL evaluation.", "explanationMarkdown": "The Expression Language (EL) implementation in Apache Tomcat is prone to a security bypass vulnerability as the expressions are evaluated within a privileged code section. Remote attackers can use malicious web applications that leverage privilege elevations while evaluating EL expressions to bypass the protections of the Java Security Manager. This issue only affects installations that run web applications from untrusted sources.", "detectionMarkdown": "You are vulnerable by using this component.", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue.", "advisories": [{"referenceType": "PROJECT", "url": "http://tomcat.apache.org/security-7.html"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "cve", "reference": "CVE-2015-5345", "severity": 5.3, "status": "Open", "url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2015-5345", "threatCategory": "severe", "cwe": "22", "cvssVector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N", "cvssVectorSource": "cve_cvss_3", "deeperData": {"identifier": "CVE-2015-5345", "vulnIds": ["CVE-2015-5345"], "vulnerabilityLink": "http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2015-5345", "source": {"shortName": "CVE", "longName": "National Vulnerability Database"}, "mainSeverity": {"source": "cve_cvss_3", "score": 5.3, "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N"}, "severityScores": [{"source": "cve_cvss_2", "score": 5.0}, {"source": "sonatype_cvss_3", "score": 5.3}], "weakness": {"cweSource": "CVE", "cweIds": [{"id": "22", "uri": "https://cwe.mitre.org/data/definitions/22.html"}]}, "categories": ["data"], "description": "The Mapper component in Apache Tomcat 6.x before 6.0.45, 7.x before 7.0.68, 8.x before 8.0.30, and 9.x before 9.0.0.M2 processes redirects before considering security constraints and Filters, which allows remote attackers to determine the existence of a directory via a URL that lacks a trailing / (slash) character.", "explanationMarkdown": "Apache Tomcat is vulnerable to directory disclosure, as it does not enforce required security authorization constraints before redirecting the user to the specified directory with an appended `/` character. The Mapper component present in `Mapper.java` returns the directory with a trailing `/` when the directory within the request URL does not end with a `/`.  A user can then determine if a directory exists or not, even though they do not have the permissions to view the protected directory. A remote attacker could exploit this vulnerability by crafting a URL that ends with the directory name without a trailing `/` to know whether or not a directory exists on the server.\n\nExample:\nIf a request (without a trailing `/`) is sent to:\n```\nhttp://localhost:8080/examples\n```\n\nwill redirect to (the URL by appending a `/`):\n```\nhttp://localhost:8080/examples/\n```\nwhich indicates to the attacker that the `examples` directory is present on the server.\n\nReproduction steps for the issue is provided at: [https://bz.apache.org/bugzilla/show_bug.cgi?id=58660#c0](https://bz.apache.org/bugzilla/show_bug.cgi?id=58660#c0)", "detectionMarkdown": "The application is vulnerable by using this component.", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue.", "advisories": [{"referenceType": "PROJECT", "url": "http://tomcat.apache.org/security-9.html"}, {"referenceType": "PROJECT", "url": "https://bz.apache.org/bugzilla/show_bug.cgi?id=58660#c0"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "cve", "reference": "CVE-2015-5346", "severity": 8.1, "status": "Open", "url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2015-5346", "threatCategory": "critical", "cwe": "384", "cvssVector": "CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H", "cvssVectorSource": "cve_cvss_3", "deeperData": {"identifier": "CVE-2015-5346", "vulnIds": ["CVE-2015-5346"], "vulnerabilityLink": "http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2015-5346", "source": {"shortName": "CVE", "longName": "National Vulnerability Database"}, "mainSeverity": {"source": "cve_cvss_3", "score": 8.1, "vector": "CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H"}, "severityScores": [{"source": "cve_cvss_2", "score": 6.8}, {"source": "sonatype_cvss_3", "score": 6.5}], "weakness": {"cweSource": "Sonatype", "cweIds": [{"id": "384", "uri": "https://cwe.mitre.org/data/definitions/384.html"}]}, "categories": ["data"], "description": "Session fixation vulnerability in Apache Tomcat 7.x before 7.0.66, 8.x before 8.0.30, and 9.x before 9.0.0.M2, when different session settings are used for deployments of multiple versions of the same web application, might allow remote attackers to hijack web sessions by leveraging use of a requestedSessionSSL field for an unintended request, related to CoyoteAdapter.java and Request.java.", "explanationMarkdown": "Apache Tomcat is vulnerable to Session Fixation. When recycling the `Request` object for use in a new `Request`, the `requestedSessionSSL` field is not recycled either in the `recycle()` method of the `Request.java` or in `CoyoteAdapter.java`. Due to this, the session ID provided in the next/new `Request` could be the old session ID from the earlier `Request` object. This will give the client the ability to control the session ID for the future sessions. A remote attacker can exploit this vulnerability to hijack web sessions by leveraging the use of a `requestedSessionSSL` field for an unintended request and gain unauthorized access to the affected application.\n\nNote:\n>In theory, this could have been used as part of a session fixation attack but it would have been hard to achieve as the attacker would not have been able to force the victim to use the 'correct' Request object. It was also necessary for at least one web application to be configured to use the SSL session ID as the HTTP session ID. This is not a common configuration.\n\nQuote taken from: https://bugzilla.redhat.com/show_bug.cgi?id=1311085(https://bugzilla.redhat.com/show_bug.cgi?id=1311085)\n\nAdvisory Deviation Notice: We observed a version deviation from the CVE description in regards to the earliest vulnerable version as well as the fix in the 8.x and 9.x versions. The earliest version vulnerable to this issue is actually 7.0.5. For the 8.x fix, the fix is present from 8.0.29 version, however the description as per the NVD is stating that it is in 8.0.30. For the 9.x fix, the fix is present from 9.0.0.M1 version, however the description as per the NVD states that it is in 9.0.0.M2.", "detectionMarkdown": "The application is vulnerable by using this component. \n\n>It was also necessary for at least one web application to be configured to use the SSL session ID as the HTTP session ID. This is not a common configuration.\n\nQuote taken from: [https://bugzilla.redhat.com/show_bug.cgi?id=1311085](https://bugzilla.redhat.com/show_bug.cgi?id=1311085)", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue.", "advisories": [{"referenceType": "PROJECT", "url": "http://tomcat.apache.org/security-9.html"}, {"referenceType": "THIRD_PARTY", "url": "https://bugzilla.redhat.com/show_bug.cgi?id=1311085"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "cve", "reference": "CVE-2016-0706", "severity": 4.3, "status": "Open", "url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2016-0706", "threatCategory": "severe", "cwe": "200", "cvssVector": "CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:N/A:N", "cvssVectorSource": "cve_cvss_3", "deeperData": {"identifier": "CVE-2016-0706", "vulnIds": ["CVE-2016-0706"], "vulnerabilityLink": "http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2016-0706", "source": {"shortName": "CVE", "longName": "National Vulnerability Database"}, "mainSeverity": {"source": "cve_cvss_3", "score": 4.3, "vector": "CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:N/A:N"}, "severityScores": [{"source": "cve_cvss_2", "score": 4.0}, {"source": "sonatype_cvss_3", "score": 4.3}], "weakness": {"cweSource": "CVE", "cweIds": [{"id": "200", "uri": "https://cwe.mitre.org/data/definitions/200.html"}]}, "categories": ["data", "operational", "privileged"], "description": "Apache Tomcat 6.x before 6.0.45, 7.x before 7.0.68, 8.x before 8.0.31, and 9.x before 9.0.0.M2 does not place org.apache.catalina.manager.StatusManagerServlet on the org/apache/catalina/core/RestrictedServlets.properties list, which allows remote authenticated users to bypass intended SecurityManager restrictions and read arbitrary HTTP requests, and consequently discover session ID values, via a crafted web application.", "explanationMarkdown": "Apache Tomcat is vulnerable to Information Disclosure. The `org.apache.catalina.manager.StatusManagerServlet` class is not included within the `RestrictedServlets.properties` file allowing any authenticated user access to the servlet \"via a crafted web application.\" A remote authenticated attacker can exploit the vulnerability by accessing the `StatusManagerServlet` to view the list of applications that are deployed on the server as well as the requests that are being processed by the server thus disclosing sensitive information such as sessionIDs.\n\nQuoted text taken from: [https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2016-0706](https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2016-0706)", "detectionMarkdown": "The application is vulnerable by using this component.", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue.\n\nWorkaround for versions including and above 6.x:\nAdd the below line to the `RestrictedServlets.properties` file:\n```\norg.apache.catalina.manager.StatusManagerServlet=restricted\n```", "advisories": [{"referenceType": "THIRD_PARTY", "url": "http://www.securityfocus.com/archive/1/537577"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "cve", "reference": "CVE-2016-0714", "severity": 8.8, "status": "Open", "url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2016-0714", "threatCategory": "critical", "cwe": "264", "cvssVector": "CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H", "cvssVectorSource": "cve_cvss_3", "deeperData": {"identifier": "CVE-2016-0714", "vulnIds": ["CVE-2016-0714"], "vulnerabilityLink": "http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2016-0714", "source": {"shortName": "CVE", "longName": "National Vulnerability Database"}, "mainSeverity": {"source": "cve_cvss_3", "score": 8.8, "vector": "CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"}, "severityScores": [{"source": "cve_cvss_2", "score": 6.5}, {"source": "sonatype_cvss_3", "score": 6.3}], "weakness": {"cweSource": "CVE", "cweIds": [{"id": "264", "uri": "https://cwe.mitre.org/data/definitions/264.html"}]}, "categories": ["configuration", "data", "functional"], "description": "The session-persistence implementation in Apache Tomcat 6.x before 6.0.45, 7.x before 7.0.68, 8.x before 8.0.31, and 9.x before 9.0.0.M2 mishandles session attributes, which allows remote authenticated users to bypass intended SecurityManager restrictions and execute arbitrary code in a privileged context via a web application that places a crafted object in a session.", "explanationMarkdown": "Apache Tomcat is vulnerable to Remote Code Execution due to deserialization of the session object. All the session-persistence mechanisms/managers (`StandardManager`, `PersistentManager` and the `Cluster` implementations) available in Tomcat are prone to this vulnerability. Tomcat, by default, serializes a session (and stores it as a session object) as part of the server shutdown process and deserializes the session object during the server startup. An authenticated remote attacker can exploit this by crafting a malicious string containing arbitrary code which can be set in a session object. The server would then serialize the session as part of the server shutdown sequence and deserialize it while starting the server, which results in the code execution.", "detectionMarkdown": "The application is vulnerable by using this component with session persistence enabled for one or more of the hosted web applications. If an application does not define a `Manager` to be used, one is created for the web application by default.\n\nSince it is easier to determine if session persistence is disabled, rather than the vulnerable enabled, use the following link to determine if ALL hosted web applications on the Tomcat instance have disabled session persistence. [https://tomcat.apache.org/tomcat-7.0-doc/config/manager.html#Disable_Session_Persistence](https://tomcat.apache.org/tomcat-7.0-doc/config/manager.html#Disable_Session_Persistence)\n\nImportant points from the documentation link above:\n- Each web application has a Session Manager unless configured not to.\n- The `<Manager/>` configuration attribute can be located in several locations. \n- To disable the Session Manager, the <Manager/> attribute must be set to an empty value as demonstrated bellow:\n```\n<Manager pathname=\"\" />\n```", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue.\n\nWorkaround:\nA potential workaround is to disable session persistence for all hosted web applications. To determine how this is done, please reference the following link.\n[https://tomcat.apache.org/tomcat-7.0-doc/config/manager.html#Disable_Session_Persistence](https://tomcat.apache.org/tomcat-7.0-doc/config/manager.html#Disable_Session_Persistence)", "advisories": [{"referenceType": "PROJECT", "url": "http://mail-archives.apache.org/mod_mbox/www-announce/201602.mbox/%3C56CAEF4F.5090003@apache.org%3E"}, {"referenceType": "PROJECT", "url": "http://tomcat.apache.org/security-9.html"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "cve", "reference": "CVE-2016-0762", "severity": 5.9, "status": "Open", "url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2016-0762", "threatCategory": "severe", "cwe": "203", "cvssVector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N", "cvssVectorSource": "cve_cvss_3", "deeperData": {"identifier": "CVE-2016-0762", "vulnIds": ["CVE-2016-0762"], "vulnerabilityLink": "http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2016-0762", "source": {"shortName": "CVE", "longName": "National Vulnerability Database"}, "mainSeverity": {"source": "cve_cvss_3", "score": 5.9, "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N"}, "severityScores": [{"source": "cve_cvss_2", "score": 4.3}, {"source": "sonatype_cvss_3", "score": 3.7}], "weakness": {"cweSource": "CVE", "cweIds": [{"id": "203", "uri": "https://cwe.mitre.org/data/definitions/203.html"}]}, "categories": ["data"], "description": "The Realm implementations in Apache Tomcat versions 9.0.0.M1 to 9.0.0.M9, 8.5.0 to 8.5.4, 8.0.0.RC1 to 8.0.36, 7.0.0 to 7.0.70 and 6.0.0 to 6.0.45 did not process the supplied password if the supplied user name did not exist. This made a timing attack possible to determine valid user names. Note that the default configuration includes the LockOutRealm which makes exploitation of this vulnerability harder.", "explanationMarkdown": "The Realm implementations of Apache Tomcat are vulnerable to a Timing Attack which allows an attacker to determine valid usernames. The `authenticate()` method of `MemoryRealm.class` and `RealmBase.class` does not validate the password if the supplied username does not exist. A remote attacker can exploit this vulnerability to determine existing usernames through brute force, by tracking the time taken to validate a username and password, whether the password is valid or not.\r\n\r\nNote: The default configuration includes the LockOutRealm which makes exploitation of this vulnerability harder.", "detectionMarkdown": "The application is vulnerable by using this component.", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue.", "advisories": [{"referenceType": "THIRD_PARTY", "url": "http://www.openwall.com/lists/oss-security/2016/10/27/8"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "cve", "reference": "CVE-2016-0763", "severity": 6.3, "status": "Open", "url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2016-0763", "threatCategory": "severe", "cwe": "264", "cvssVector": "CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:L", "cvssVectorSource": "cve_cvss_3", "deeperData": {"identifier": "CVE-2016-0763", "vulnIds": ["CVE-2016-0763"], "vulnerabilityLink": "http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2016-0763", "source": {"shortName": "CVE", "longName": "National Vulnerability Database"}, "mainSeverity": {"source": "cve_cvss_3", "score": 6.3, "vector": "CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:L"}, "severityScores": [{"source": "cve_cvss_2", "score": 6.5}, {"source": "sonatype_cvss_3", "score": 6.3}], "weakness": {"cweSource": "CVE", "cweIds": [{"id": "264", "uri": "https://cwe.mitre.org/data/definitions/264.html"}]}, "categories": ["data"], "description": "The setGlobalContext method in org/apache/naming/factory/ResourceLinkFactory.java in Apache Tomcat 7.x before 7.0.68, 8.x before 8.0.31, and 9.x before 9.0.0.M3 does not consider whether ResourceLinkFactory.setGlobalContext callers are authorized, which allows remote authenticated users to bypass intended SecurityManager restrictions and read or write to arbitrary application data, or cause a denial of service (application disruption), via a web application that sets a crafted global context.", "explanationMarkdown": "Apache Tomcat is vulnerable to an Authorization Bypass, as it allows unauthorized access to the `ResourceLinkFactory.setGlobalContext()` method even when running under a security manager. The `setGlobalContext()` method of the `ResourceLinkFactory.java` class does not check for the required authorization permissions while allowing a user to modify the global context. A remote authenticated attacker can exploit the vulnerability by using a malicious web application to inject a malicious global context that would disrupt other applications or read arbitrary application data.\n\nNote: The global context is a server level parameter accessible to all applications running on the same server instance.", "detectionMarkdown": "The application is vulnerable by using this component.", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue and using the Security Manager.", "advisories": [{"referenceType": "PROJECT", "url": "https://tomcat.apache.org/security-7.html"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "cve", "reference": "CVE-2016-1000027", "severity": 9.8, "status": "Open", "url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2016-1000027", "threatCategory": "critical", "cwe": "502", "cvssVector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H", "cvssVectorSource": "cve_cvss_3", "deeperData": {"identifier": "CVE-2016-1000027", "vulnIds": ["CVE-2016-1000027"], "vulnerabilityLink": "http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2016-1000027", "source": {"shortName": "CVE", "longName": "National Vulnerability Database"}, "mainSeverity": {"source": "cve_cvss_3", "score": 9.8, "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"}, "severityScores": [{"source": "cve_cvss_2", "score": 7.5}, {"source": "sonatype_cvss_3", "score": 9.8}], "weakness": {"cweSource": "CVE", "cweIds": [{"id": "502", "uri": "https://cwe.mitre.org/data/definitions/502.html"}]}, "categories": ["data", "functional"], "description": "Pivotal Spring Framework through 5.3.16 suffers from a potential remote code execution (RCE) issue if used for Java deserialization of untrusted data. Depending on how the library is implemented within a product, this issue may or not occur, and authentication may be required. NOTE: the vendor's position is that untrusted data is not an intended use case. The product's behavior will not be changed because some users rely on deserialization of trusted data.", "explanationMarkdown": "The `org.springframework:spring-web` package is vulnerable to deserialization of untrusted data leading to Remote Code Execution (RCE). The `readRemoteInvocation()` method in `HttpInvokerServiceExporter.class` does not properly verify or restrict untrusted objects prior to deserializing them. An attacker can exploit this vulnerability by sending malicious requests containing crafted objects, which when deserialized, execute arbitrary code on the vulnerable system.\n\n*NOTE:* This vulnerability is related to a previously reported deserialization vulnerability (CVE-2011-2894) within the package, impacting a different class.", "detectionMarkdown": "The application is vulnerable by using this component under specific scenarios as listed out in the [advisory](https://www.tenable.com/security/research/tra-2016-20).", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue.\n\nA warning has been provided in the official [Javadocs](https://docs.spring.io/spring-framework/docs/5.3.x/javadoc-api/org/springframework/remoting/httpinvoker/HttpInvokerServiceExporter.html) of the `HttpInvokerServiceExporter` class and support for several serialization-based remoting technologies including this class has been deprecated from 5.3.0 onwards and completely removed from 6.0.0 and onwards:\n\n>WARNING: Be aware of vulnerabilities due to unsafe Java deserialization: Manipulated input streams could lead to unwanted code execution on the server during the deserialization step. As a consequence, do not expose HTTP invoker endpoints to untrusted clients but rather just between your own services. In general, we strongly recommend any other message format (e.g. JSON) instead.\n\nThe developer's general advice also states:\n>Do not use Java serialization for external endpoints, in particular not for unauthorized ones. HTTP invoker is not a well-kept secret (or an \"oversight\") but rather the typical case of how a Spring application would expose serialization endpoints to begin with... he has a point that we should make this case all across our documentation, including the javadoc. But I don't really see a CVE case here, just a documentation improvement.\n>\n>Pivotal will enhance their documentation for the 4.2.6 and 3.2.17 releases.\n\nReference: [https://www.tenable.com/security/research/tra-2016-20](https://www.tenable.com/security/research/tra-2016-20)\n\nNote: If this component is included as a bundled/transitive dependency of another component, there may not be an upgrade path. In this instance, we recommend contacting the maintainers who included the vulnerable package. Alternatively, we recommend investigating alternative components or a potential mitigating control.", "advisories": [{"referenceType": "PROJECT", "url": "https://github.com/spring-projects/spring-framework/issues/24434"}, {"referenceType": "THIRD_PARTY", "url": "https://blog.gypsyengineer.com/en/security/detecting-dangerous-spring-exporters-with-codeql.html"}, {"referenceType": "THIRD_PARTY", "url": "https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2016-1000027"}, {"referenceType": "THIRD_PARTY", "url": "https://www.tenable.com/security/research/tra-2016-20"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "cve", "reference": "CVE-2016-3092", "severity": 7.5, "status": "Open", "url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2016-3092", "threatCategory": "critical", "cwe": "20", "cvssVector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H", "cvssVectorSource": "cve_cvss_3", "deeperData": {"identifier": "CVE-2016-3092", "vulnIds": ["CVE-2016-3092"], "vulnerabilityLink": "http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2016-3092", "source": {"shortName": "CVE", "longName": "National Vulnerability Database"}, "mainSeverity": {"source": "cve_cvss_3", "score": 7.5, "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}, "severityScores": [{"source": "cve_cvss_2", "score": 7.8}, {"source": "sonatype_cvss_3", "score": 7.5}], "weakness": {"cweSource": "CVE", "cweIds": [{"id": "20", "uri": "https://cwe.mitre.org/data/definitions/20.html"}]}, "categories": ["data"], "description": "The MultipartStream class in Apache Commons Fileupload before 1.3.2, as used in Apache Tomcat 7.x before 7.0.70, 8.x before 8.0.36, 8.5.x before 8.5.3, and 9.x before 9.0.0.M7 and other products, allows remote attackers to cause a denial of service (CPU consumption) via a long boundary string.", "explanationMarkdown": "The Apache Commons Fileupload library is vulnerable to Denial of Service (DoS) when multipart requests with large `boundary` values are sent by the client. The Commons Fileupload library takes a long time to process upload requests when the length of the multipart `boundary` in the Content-Type header is very close to the size of the buffer which is 4096 bytes. The `MultipartStream()` constructor method in `MultipartStream.java` does not consider the length of the request's boundary header when setting the buffer size. A remote attacker can exploit the vulnerability by submitting a multipart fileupload request with high `boundary` value to the server, making the server unresponsive to other client requests resulting in a Denial of Service (DoS).\n\nSample payload: \n\n> ```\n> Content-Type: multipart/mixed;\n> boundary=<a 4095 byte string> \n> ```", "detectionMarkdown": "The application is vulnerable by using this component.", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue.\n\n**Workaround:**\n\n> 1\\. All users of Apache Struts should replace the copy of Commons\n>\n> 2\\. System administrators should restrict the permitted maximum size of HTTP request header values (For example, Apache Httpd provides a LimitRequestFieldSize directive and Apache Tomcat provides a maxHttpHeaderSize attribute in their respective configuration files). A maximum header value size of 2048 bytes would block all dangerous request.\n>\n> Example:\n> File upload requests contain a so-called boundary in the Content-Type header:\n>\n> ```\n> Content-Type: multipart/mixed;\n> boundary=gc0p4Jq0M2Yt08jU534c0p\n> ```\n>\n> The boundary may be chosen by the request sender. In the case of previous versions of Apache Commons Fileupload the boundary becomes dangerous if its size is close to 4096 bytes.\n\nReference: [http://mail-archives.apache.org/mod_mbox/www-announce/201606.mbox/%3C45A20804-ABFF-4FED-A297-69AC95AB9A3F@apache.org%3E](http://mail-archives.apache.org/mod_mbox/www-announce/201606.mbox/%3C45A20804-ABFF-4FED-A297-69AC95AB9A3F@apache.org%3E)\n\nNote: If this component is included as a bundled/transitive dependency of another component, there may not be an upgrade path. In this instance, we recommend contacting the maintainers who included the vulnerable package. Alternatively, we recommend investigating alternative components or a potential mitigating control.", "advisories": [{"referenceType": "PROJECT", "url": "http://mail-archives.apache.org/mod_mbox/www-announce/201606.mbox/%3C45A20804-ABFF-4FED-A297-69AC95AB9A3F@apache.org%3E"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "cve", "reference": "CVE-2016-5018", "severity": 9.1, "status": "Open", "url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2016-5018", "threatCategory": "critical", "cwe": "254", "cvssVector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N", "cvssVectorSource": "cve_cvss_3", "deeperData": {"identifier": "CVE-2016-5018", "vulnIds": ["CVE-2016-5018"], "vulnerabilityLink": "http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2016-5018", "source": {"shortName": "CVE", "longName": "National Vulnerability Database"}, "mainSeverity": {"source": "cve_cvss_3", "score": 9.1, "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N"}, "severityScores": [{"source": "cve_cvss_2", "score": 6.4}, {"source": "sonatype_cvss_3", "score": 4.2}], "weakness": {"cweSource": "Sonatype", "cweIds": [{"id": "254", "uri": "https://cwe.mitre.org/data/definitions/254.html"}]}, "categories": ["configuration", "data"], "description": "In Apache Tomcat 9.0.0.M1 to 9.0.0.M9, 8.5.0 to 8.5.4, 8.0.0.RC1 to 8.0.36, 7.0.0 to 7.0.70 and 6.0.0 to 6.0.45 a malicious web application was able to bypass a configured SecurityManager via a Tomcat utility method that was accessible to web applications.", "explanationMarkdown": "Apache Tomcat is vulnerable to Security Bypass as it allows a malicious web application to bypass a configured SecurityManager.  The `introspecthelper()` class utilizes a `PrivilegedExceptionAction` to reflectively invoke a method on a given object (the `bean` parameter) based on other parameters passed into `introspecthelper()`.  The `PrivilegedExceptionAction` invokes this method with *all* of the permissions possessed by the caller's protection domain.\r\n\r\nA remote attacker can exploit this vulnerability by manipulating the parameters passed into `introspecthelper()` to bypass certain security restrictions on the security manager and perform unauthorized actions, which may lead to further attacks.", "detectionMarkdown": "The application is vulnerable by using this component and a configured SecurityManager.", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue.", "advisories": [{"referenceType": "ATTACK", "url": "https://www.exploit-db.com/exploits/47892"}, {"referenceType": "PROJECT", "url": "http://tomcat.apache.org/security-6.html"}, {"referenceType": "PROJECT", "url": "http://tomcat.apache.org/security-7.html"}, {"referenceType": "PROJECT", "url": "http://tomcat.apache.org/security-8.html"}, {"referenceType": "PROJECT", "url": "http://tomcat.apache.org/security-9.html"}, {"referenceType": "THIRD_PARTY", "url": "http://seclists.org/oss-sec/2016/q4/259"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "cve", "reference": "CVE-2016-6794", "severity": 5.3, "status": "Open", "url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2016-6794", "threatCategory": "severe", "cwe": "200", "cvssVector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N", "cvssVectorSource": "cve_cvss_3", "deeperData": {"identifier": "CVE-2016-6794", "vulnIds": ["CVE-2016-6794"], "vulnerabilityLink": "http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2016-6794", "source": {"shortName": "CVE", "longName": "National Vulnerability Database"}, "mainSeverity": {"source": "cve_cvss_3", "score": 5.3, "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N"}, "severityScores": [{"source": "cve_cvss_2", "score": 5.0}, {"source": "sonatype_cvss_3", "score": 2.5}], "weakness": {"cweSource": "Sonatype", "cweIds": [{"id": "200", "uri": "https://cwe.mitre.org/data/definitions/200.html"}]}, "categories": ["configuration", "privileged"], "description": "When a SecurityManager is configured, a web application's ability to read system properties should be controlled by the SecurityManager. In Apache Tomcat 9.0.0.M1 to 9.0.0.M9, 8.5.0 to 8.5.4, 8.0.0.RC1 to 8.0.36, 7.0.0 to 7.0.70, 6.0.0 to 6.0.45 the system property replacement feature for configuration files could be used by a malicious web application to bypass the SecurityManager and read system properties that should not be visible.", "explanationMarkdown": "Apache Tomcat is vulnerable to Security Bypass and Information Disclosure. The `getProperty()` method in the `SystemPropertySource` class within the `Digester.java` file wraps and provides direct access to the `System.getProperty()` method. The `System.getProperty()` method allows access to externally defined properties and environment variables, which may contain sensitive information. An attacker who has code running on the same server can invoke said method without `SecurityManager` restrictions and access sensitive system properties.", "detectionMarkdown": "The application is vulnerable by using this component when SecurityManager is configured.", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue.", "advisories": [{"referenceType": "THIRD_PARTY", "url": "http://www.openwall.com/lists/oss-security/2016/10/27/10"}, {"referenceType": "THIRD_PARTY", "url": "https://tools.cisco.com/security/center/viewAlert.x?alertId=49526"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "cve", "reference": "CVE-2016-6796", "severity": 7.5, "status": "Open", "url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2016-6796", "threatCategory": "critical", "cwe": "254", "cvssVector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N", "cvssVectorSource": "cve_cvss_3", "deeperData": {"identifier": "CVE-2016-6796", "vulnIds": ["CVE-2016-6796"], "vulnerabilityLink": "http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2016-6796", "source": {"shortName": "CVE", "longName": "National Vulnerability Database"}, "mainSeverity": {"source": "cve_cvss_3", "score": 7.5, "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N"}, "severityScores": [{"source": "cve_cvss_2", "score": 5.0}, {"source": "sonatype_cvss_3", "score": 4.2}], "weakness": {"cweSource": "Sonatype", "cweIds": [{"id": "254", "uri": "https://cwe.mitre.org/data/definitions/254.html"}]}, "categories": ["data"], "description": "A malicious web application running on Apache Tomcat 9.0.0.M1 to 9.0.0.M9, 8.5.0 to 8.5.4, 8.0.0.RC1 to 8.0.36, 7.0.0 to 7.0.70 and 6.0.0 to 6.0.45 was able to bypass a configured SecurityManager via manipulation of the configuration parameters for the JSP Servlet.", "explanationMarkdown": "Apache Tomcat is vulnerable to Security Bypass as it allows a malicious web application to bypass a configured SecurityManager. The `EmbeddedServletOptions()` method of `EmbeddedServletOptions.class` and `init()` method of `JspServlet.class` allows for the processing of the configuration parameters `scratchdir` and `engineOptionsClass`. The `engineOptionsClass` allows specifying the Options class used to configure Jasper, and `scratchdir` specifies the scratch directory that should be used when compiling JSP pages. A remote attacker can exploit this vulnerability by manipulating the configuration parameters for the JSP Servlet to bypass certain security restrictions on the security manager and perform unauthorized actions, which may lead to further attacks.", "detectionMarkdown": "The application is vulnerable by using this component.", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue.", "advisories": [{"referenceType": "THIRD_PARTY", "url": "http://seclists.org/oss-sec/2016/q4/261"}, {"referenceType": "THIRD_PARTY", "url": "http://www.securityfocus.com/bid/93944/discuss"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "cve", "reference": "CVE-2016-6797", "severity": 7.5, "status": "Open", "url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2016-6797", "threatCategory": "critical", "cwe": "863", "cvssVector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N", "cvssVectorSource": "cve_cvss_3", "deeperData": {"identifier": "CVE-2016-6797", "vulnIds": ["CVE-2016-6797"], "vulnerabilityLink": "http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2016-6797", "source": {"shortName": "CVE", "longName": "National Vulnerability Database"}, "mainSeverity": {"source": "cve_cvss_3", "score": 7.5, "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N"}, "severityScores": [{"source": "cve_cvss_2", "score": 5.0}, {"source": "sonatype_cvss_3", "score": 3.7}], "weakness": {"cweSource": "CVE", "cweIds": [{"id": "863", "uri": "https://cwe.mitre.org/data/definitions/863.html"}]}, "categories": ["data"], "description": "The ResourceLinkFactory implementation in Apache Tomcat 9.0.0.M1 to 9.0.0.M9, 8.5.0 to 8.5.4, 8.0.0.RC1 to 8.0.36, 7.0.0 to 7.0.70 and 6.0.0 to 6.0.45 did not limit web application access to global JNDI resources to those resources explicitly linked to the web application. Therefore, it was possible for a web application to access any global JNDI resource whether an explicit ResourceLink had been configured or not.", "explanationMarkdown": "The `ResourceLinkFactory` class of Apache Tomcat is vulnerable to Authorization Bypass. The `addResourceLink() and `removeResourceLink()` methods of the `NamingContextListener` class allows the ability to modify unauthorized resource links on global JNDI resources not linked to the web application. A remote unauthenticated attacker can exploit this vulnerability by crafting a resource URL allowing the attacker to access global JNDI resources on the targeted system.", "detectionMarkdown": "The application is vulnerable by using this component.", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue.", "advisories": [{"referenceType": "PROJECT", "url": "http://mail-archives.apache.org/mod_mbox/www-announce/201610.mbox/%3C89c1e7ad-5e9c-d18f-115d-dc8022ce57ae%40apache.org%3E"}, {"referenceType": "PROJECT", "url": "https://bugzilla.redhat.com/show_bug.cgi?id=1390493"}, {"referenceType": "THIRD_PARTY", "url": "https://tools.cisco.com/security/center/viewAlert.x?alertId=49528"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "cve", "reference": "CVE-2016-6816", "severity": 7.1, "status": "Open", "url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2016-6816", "threatCategory": "critical", "cwe": "20", "cvssVector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:L", "cvssVectorSource": "cve_cvss_3", "deeperData": {"identifier": "CVE-2016-6816", "vulnIds": ["CVE-2016-6816"], "vulnerabilityLink": "http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2016-6816", "source": {"shortName": "CVE", "longName": "National Vulnerability Database"}, "mainSeverity": {"source": "cve_cvss_3", "score": 7.1, "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:L"}, "severityScores": [{"source": "cve_cvss_2", "score": 6.8}, {"source": "sonatype_cvss_3", "score": 6.5}], "weakness": {"cweSource": "CVE", "cweIds": [{"id": "20", "uri": "https://cwe.mitre.org/data/definitions/20.html"}]}, "categories": ["data"], "description": "The code in Apache Tomcat 9.0.0.M1 to 9.0.0.M11, 8.5.0 to 8.5.6, 8.0.0.RC1 to 8.0.38, 7.0.0 to 7.0.72, and 6.0.0 to 6.0.47 that parsed the HTTP request line permitted invalid characters. This could be exploited, in conjunction with a proxy that also permitted the invalid characters but with a different interpretation, to inject data into the HTTP response. By manipulating the HTTP response the attacker could poison a web-cache, perform an XSS attack and/or obtain sensitive information from requests other then their own.", "explanationMarkdown": ">The code that parsed the HTTP request line permitted invalid characters. This could be exploited, in conjunction with a proxy that also permitted the invalid characters but with a different interpretation, to inject data into the HTTP response. By manipulating the HTTP response the attacker could poison a web-cache, perform an XSS attack and/or obtain sensitive information from requests other then their own.\r\n\r\nQuote taken from: [http://tomcat.apache.org/security-9.html](http://tomcat.apache.org/security-9.html)", "detectionMarkdown": "The application is vulnerable by using this component.", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue.", "advisories": [{"referenceType": "PROJECT", "url": "http://tomcat.apache.org/security-6.html"}, {"referenceType": "PROJECT", "url": "http://tomcat.apache.org/security-7.html"}, {"referenceType": "PROJECT", "url": "http://tomcat.apache.org/security-8.html"}, {"referenceType": "PROJECT", "url": "http://tomcat.apache.org/security-9.html"}, {"referenceType": "THIRD_PARTY", "url": "https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2016-6816"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "cve", "reference": "CVE-2016-8745", "severity": 7.5, "status": "Open", "url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2016-8745", "threatCategory": "critical", "cwe": "388", "cvssVector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N", "cvssVectorSource": "cve_cvss_3", "deeperData": {"identifier": "CVE-2016-8745", "vulnIds": ["CVE-2016-8745"], "vulnerabilityLink": "http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2016-8745", "source": {"shortName": "CVE", "longName": "National Vulnerability Database"}, "mainSeverity": {"source": "cve_cvss_3", "score": 7.5, "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N"}, "severityScores": [{"source": "cve_cvss_2", "score": 5.0}, {"source": "sonatype_cvss_3", "score": 7.5}], "weakness": {"cweSource": "CVE", "cweIds": [{"id": "388", "uri": "https://cwe.mitre.org/data/definitions/388.html"}]}, "categories": ["data"], "description": "A bug in the error handling of the send file code for the NIO HTTP connector in Apache Tomcat 9.0.0.M1 to 9.0.0.M13, 8.5.0 to 8.5.8, 8.0.0.RC1 to 8.0.39, 7.0.0 to 7.0.73 and 6.0.16 to 6.0.48 resulted in the current Processor object being added to the Processor cache multiple times. This in turn meant that the same Processor could be used for concurrent requests. Sharing a Processor can result in information leakage between requests including, not not limited to, session ID and the response body. The bug was first noticed in 8.5.x onwards where it appears the refactoring of the Connector code for 8.5.x onwards made it more likely that the bug was observed. Initially it was thought that the 8.5.x refactoring introduced the bug but further investigation has shown that the bug is present in all currently supported Tomcat versions.", "explanationMarkdown": "Apache Tomcat is vulnerable to Information Disclosure. The `processSendfile()` method in the `Poller` class within `NioEndpoint.java` file adds the current `Processor` object to the `Processor` cache multiple times when the NIO HTTP connector raises an exception during send file processing. A remote attacker can exploit this vulnerability by requesting a file and deleting it just before the file is served, which causes an exception to be raised and the current processor to be added to the recycled processors list twice. The same processor will be assigned for concurrent requests made by the attacker, resulting in Information Disclosure between the requests.", "detectionMarkdown": "The application is vulnerable by using this component.", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue.", "advisories": [{"referenceType": "PROJECT", "url": "http://tomcat.apache.org/security-9.html#Fixed_in_Apache_Tomcat_9.0.0.M15"}, {"referenceType": "PROJECT", "url": "https://bz.apache.org/bugzilla/show_bug.cgi?id=60409"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "cve", "reference": "CVE-2017-12615", "severity": 8.1, "status": "Open", "url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-12615", "threatCategory": "critical", "cwe": "434", "cvssVector": "CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H", "cvssVectorSource": "cve_cvss_3", "deeperData": {"identifier": "CVE-2017-12615", "vulnIds": ["CVE-2017-12615"], "vulnerabilityLink": "http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2017-12615", "source": {"shortName": "CVE", "longName": "National Vulnerability Database"}, "mainSeverity": {"source": "cve_cvss_3", "score": 8.1, "vector": "CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H"}, "severityScores": [{"source": "cve_cvss_2", "score": 6.8}, {"source": "sonatype_cvss_3", "score": 8.1}], "weakness": {"cweSource": "CVE", "cweIds": [{"id": "434", "uri": "https://cwe.mitre.org/data/definitions/434.html"}]}, "categories": ["data", "operational"], "description": "When running Apache Tomcat 7.0.0 to 7.0.79 on Windows with HTTP PUTs enabled (e.g. via setting the readonly initialisation parameter of the Default to false) it was possible to upload a JSP file to the server via a specially crafted request. This JSP could then be requested and any code it contained would be executed by the server.", "explanationMarkdown": "Apache Tomcat is vulnerable to Remote Code Execution. The `FileDirContext` class allows arbitrary files to be uploaded when running on the Windows operating system. A remote attacker can craft a PUT request that will upload a JSP file with malicious code. After uploading, the attacker can then request the file from the server causing the malicious code to execute on the server.", "detectionMarkdown": "The application is vulnerable by using this component on the Windows operating system and enabling the HTTP PUT method by \"setting the readonly initialisation parameter of the Default servlet to false\".\n\nReference: https://tomcat.apache.org/security-7.html#Fixed_in_Apache_Tomcat_7.0.81", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue.", "advisories": [{"referenceType": "PROJECT", "url": "https://tomcat.apache.org/security-7.html#Fixed_in_Apache_Tomcat_7.0.81"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "cve", "reference": "CVE-2017-5647", "severity": 7.5, "status": "Open", "url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-5647", "threatCategory": "critical", "cwe": "200", "cvssVector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N", "cvssVectorSource": "cve_cvss_3", "deeperData": {"identifier": "CVE-2017-5647", "vulnIds": ["CVE-2017-5647"], "vulnerabilityLink": "http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2017-5647", "source": {"shortName": "CVE", "longName": "National Vulnerability Database"}, "mainSeverity": {"source": "cve_cvss_3", "score": 7.5, "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N"}, "severityScores": [{"source": "cve_cvss_2", "score": 5.0}, {"source": "sonatype_cvss_3", "score": 7.5}], "weakness": {"cweSource": "CVE", "cweIds": [{"id": "200", "uri": "https://cwe.mitre.org/data/definitions/200.html"}]}, "categories": ["data"], "description": "A bug in the handling of the pipelined requests in Apache Tomcat 9.0.0.M1 to 9.0.0.M18, 8.5.0 to 8.5.12, 8.0.0.RC1 to 8.0.42, 7.0.0 to 7.0.76, and 6.0.0 to 6.0.52, when send file was used, results in the pipelined request being lost when send file processing of the previous request completed. This could result in responses appearing to be sent for the wrong request. For example, a user agent that sent requests A, B and C could see the correct response for request A, the response for request C for request B and no response for request C.", "explanationMarkdown": "Apache Tomcat is vulnerable to Information Disclosure, as it sends the response of a \"send file\" request (request \"A\") in response to another request (request \"B\") that is in the pipeline when the processing of the previous request is completed. An attacker can exploit this vulnerability by sending a request to the targeted system while other requests are being processed.  This could allow the attacker to gain sensitive information due to the incorrect response sent when processing of a previous request has completed.\n\nFor example:\n\n1. Normal user sends a request (**Request A**)\n2. Tomcat responds to Request A (**Response A**)\n3. Attacker sends a request (**Request B**)\n4. Due to this vulnerability, Tomcat responds to **Request B** with **Response A**\n5. Depending on the content of **Response A**, the attacker may gain sensitive information they would not normally be able to access", "detectionMarkdown": "The application is vulnerable by using this component.", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue.", "advisories": [{"referenceType": "PROJECT", "url": "http://tomcat.apache.org/security-9.html#Fixed_in_Apache_Tomcat_9.0.0.M19"}, {"referenceType": "THIRD_PARTY", "url": "https://blog.sonatype.com/introducing-nexus-intelligence-insights"}, {"referenceType": "THIRD_PARTY", "url": "https://tools.cisco.com/security/center/viewAlert.x?alertId=53423"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "cve", "reference": "CVE-2017-5648", "severity": 9.1, "status": "Open", "url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-5648", "threatCategory": "critical", "cwe": "668", "cvssVector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N", "cvssVectorSource": "cve_cvss_3", "deeperData": {"identifier": "CVE-2017-5648", "vulnIds": ["CVE-2017-5648"], "vulnerabilityLink": "http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2017-5648", "source": {"shortName": "CVE", "longName": "National Vulnerability Database"}, "mainSeverity": {"source": "cve_cvss_3", "score": 9.1, "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N"}, "severityScores": [{"source": "cve_cvss_2", "score": 6.4}, {"source": "sonatype_cvss_3", "score": 4.2}], "weakness": {"cweSource": "CVE", "cweIds": [{"id": "668", "uri": "https://cwe.mitre.org/data/definitions/668.html"}]}, "categories": ["data"], "description": "While investigating bug 60718, it was noticed that some calls to application listeners in Apache Tomcat 9.0.0.M1 to 9.0.0.M17, 8.5.0 to 8.5.11, 8.0.0.RC1 to 8.0.41, and 7.0.0 to 7.0.75 did not use the appropriate facade object. When running an untrusted application under a SecurityManager, it was therefore possible for that untrusted application to retain a reference to the request or response object and thereby access and/or modify information associated with another web application.", "explanationMarkdown": "`Apache Tomcat` is vulnerable to Insufficient Authorization. The `forwardToLoginPage()`,`forwardToErrorPage()` methods of `FormAuthenticator` class, the `invoke()` method of `StandardHostValve` class, and the `asyncDispatch()` method of `CoyoteAdapter` class allows malicious requests to be processed as it does not use the appropriate facade object when running an untrusted application under a SecurityManager.  It was, therefore, possible for that untrusted application to retain a reference to the request or response object and thereby access and/or modify information associated with another web application. An attacker can exploit this vulnerability by crafting a malicious request to potentially view or modify another application's data.\n\n*advisory Deviation Notice:* The Sonatype security research team discovered that the vulnerability is present in version 7.0.5 to 7.0.75, not 7.0.0 to 7.0.75 as the advisory states.\"", "detectionMarkdown": "The application is vulnerable by using this component.", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue.", "advisories": [{"referenceType": "PROJECT", "url": "http://tomcat.apache.org/security-7.html"}, {"referenceType": "PROJECT", "url": "http://tomcat.apache.org/security-7.html#Fixed_in_Apache_Tomcat_7.0.76"}, {"referenceType": "PROJECT", "url": "http://tomcat.apache.org/security-8.html"}, {"referenceType": "PROJECT", "url": "http://tomcat.apache.org/security-8.html#Fixed_in_Apache_Tomcat_8.0.42"}, {"referenceType": "PROJECT", "url": "http://tomcat.apache.org/security-9.html"}, {"referenceType": "PROJECT", "url": "http://tomcat.apache.org/security-9.html#Fixed_in_Apache_Tomcat_9.0.0.M18"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "cve", "reference": "CVE-2017-5664", "severity": 7.5, "status": "Open", "url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-5664", "threatCategory": "critical", "cwe": "755", "cvssVector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N", "cvssVectorSource": "cve_cvss_3", "deeperData": {"identifier": "CVE-2017-5664", "vulnIds": ["CVE-2017-5664"], "vulnerabilityLink": "http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2017-5664", "source": {"shortName": "CVE", "longName": "National Vulnerability Database"}, "mainSeverity": {"source": "cve_cvss_3", "score": 7.5, "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N"}, "severityScores": [{"source": "cve_cvss_2", "score": 5.0}, {"source": "sonatype_cvss_3", "score": 7.5}], "weakness": {"cweSource": "CVE", "cweIds": [{"id": "755", "uri": "https://cwe.mitre.org/data/definitions/755.html"}]}, "categories": ["configuration", "data"], "description": "The error page mechanism of the Java Servlet Specification requires that, when an error occurs and an error page is configured for the error that occurred, the original request and response are forwarded to the error page. This means that the request is presented to the error page with the original HTTP method. If the error page is a static file, expected behaviour is to serve content of the file as if processing a GET request, regardless of the actual HTTP method. The Default Servlet in Apache Tomcat 9.0.0.M1 to 9.0.0.M20, 8.5.0 to 8.5.14, 8.0.0.RC1 to 8.0.43 and 7.0.0 to 7.0.77 did not do this. Depending on the original request this could lead to unexpected and undesirable results for static error pages including, if the DefaultServlet is configured to permit writes, the replacement or removal of the custom error page. Notes for other user provided error pages: (1) Unless explicitly coded otherwise, JSPs ignore the HTTP method. JSPs used as error pages must must ensure that they handle any error dispatch as a GET request, regardless of the actual method. (2) By default, the response generated by a Servlet does depend on the HTTP method. Custom Servlets used as error pages must ensure that they handle any error dispatch as a GET request, regardless of the actual method.", "explanationMarkdown": "Apache Tomcat is vulnerable to a security bypass in the error page mechanism. The `DefaultServlet` and `WebdavServlet` classes do not automatically enforce GET requests to error pages. An attacker can craft a HTTP request that could cause undesired side effects, which could include the removal or replacement of the custom error page if the DefaultServlet is configured to permit writes.", "detectionMarkdown": "The application is vulnerable by using this component and the readonly property for the DefaultServlet is set to `false`.\n\nNote:  \"This flaw can be triggered for static error pages only if the readonly property for the DefaultServlet is set to false in the $CATALINA_HOME/conf/web.xml file.  The default for readonly is true.\"\nReference: [https://bugzilla.redhat.com/show_bug.cgi?id=1459158#c15](https://bugzilla.redhat.com/show_bug.cgi?id=1459158#c15)", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue.\n\nNote: \"If it is necessary to have the DefaultServlet property readonly=false, use a jsp error page, for example Error404.jsp rather than a static html error page. Alternatively do not specify an error-page in the Deployment Descriptor and use a custom ErrorReportValve.\"\nReference: [https://bugzilla.redhat.com/show_bug.cgi?id=1459158#c11](https://bugzilla.redhat.com/show_bug.cgi?id=1459158#c11)", "advisories": [{"referenceType": "PROJECT", "url": "https://lists.apache.org/thread.html/a42c48e37398d76334e17089e43ccab945238b8b7896538478d76066@%3Cannounce.tomcat.apache.org%3E"}, {"referenceType": "PROJECT", "url": "https://tomcat.apache.org/security-7.html#Fixed_in_Apache_Tomcat_7.0.78"}, {"referenceType": "PROJECT", "url": "https://tomcat.apache.org/security-8.html#Fixed_in_Apache_Tomcat_8.0.44"}, {"referenceType": "PROJECT", "url": "https://tomcat.apache.org/security-8.html#Fixed_in_Apache_Tomcat_8.5.15"}, {"referenceType": "PROJECT", "url": "https://tomcat.apache.org/security-9.html#Fixed_in_Apache_Tomcat_9.0.0.M21"}, {"referenceType": "THIRD_PARTY", "url": "https://bugzilla.redhat.com/show_bug.cgi?id=1459158"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "cve", "reference": "CVE-2018-1304", "severity": 5.9, "status": "Open", "url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-1304", "threatCategory": "severe", "cwe": "254", "cvssVector": "CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N", "cvssVectorSource": "cve_cvss_3", "deeperData": {"identifier": "CVE-2018-1304", "vulnIds": ["CVE-2018-1304"], "vulnerabilityLink": "http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2018-1304", "source": {"shortName": "CVE", "longName": "National Vulnerability Database"}, "mainSeverity": {"source": "cve_cvss_3", "score": 5.9, "vector": "CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N"}, "severityScores": [{"source": "cve_cvss_2", "score": 4.3}, {"source": "sonatype_cvss_3", "score": 6.8}], "weakness": {"cweSource": "Sonatype", "cweIds": [{"id": "254", "uri": "https://cwe.mitre.org/data/definitions/254.html"}]}, "categories": ["configuration", "data", "operational"], "description": "The URL pattern of \"\" (the empty string) which exactly maps to the context root was not correctly handled in Apache Tomcat 9.0.0.M1 to 9.0.4, 8.5.0 to 8.5.27, 8.0.0.RC1 to 8.0.49 and 7.0.0 to 7.0.84 when used as part of a security constraint definition. This caused the constraint to be ignored. It was, therefore, possible for unauthorised users to gain access to web application resources that should have been protected. Only security constraints with a URL pattern of the empty string were affected.", "explanationMarkdown": "Apache Tomcat Catalina does not always properly process security constraints.  The `findSecurityConstraints` method in `RealmBase.java` ignores security constraints mapped to a URI path of \"\" instead of correctly parsing them as the root path. This could potentially allow users unintentional access to restricted resources.", "detectionMarkdown": "The application is vulnerable by using this component, if there are any security constraints set as an empty string.", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue.  If upgrading is not a viable option, this vulnerability can be mitigated by ensuring that all security constraints set to an empty string are instead specifically mapped to the root directory (\"/\").", "advisories": [{"referenceType": "PROJECT", "url": "https://lists.apache.org/thread.html/b1d7e2425d6fd2cebed40d318f9365b44546077e10949b01b1f8a0fb@%3Cannounce.tomcat.apache.org%3E"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "cve", "reference": "CVE-2018-1305", "severity": 6.5, "status": "Open", "url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-1305", "threatCategory": "severe", "cwe": "284", "cvssVector": "CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N", "cvssVectorSource": "cve_cvss_3", "deeperData": {"identifier": "CVE-2018-1305", "vulnIds": ["CVE-2018-1305"], "vulnerabilityLink": "http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2018-1305", "source": {"shortName": "CVE", "longName": "National Vulnerability Database"}, "mainSeverity": {"source": "cve_cvss_3", "score": 6.5, "vector": "CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N"}, "severityScores": [{"source": "cve_cvss_2", "score": 4.0}, {"source": "sonatype_cvss_3", "score": 6.8}], "weakness": {"cweSource": "Sonatype", "cweIds": [{"id": "284", "uri": "https://cwe.mitre.org/data/definitions/284.html"}]}, "categories": ["data", "operational"], "description": "Security constraints defined by annotations of Servlets in Apache Tomcat 9.0.0.M1 to 9.0.4, 8.5.0 to 8.5.27, 8.0.0.RC1 to 8.0.49 and 7.0.0 to 7.0.84 were only applied once a Servlet had been loaded. Because security constraints defined in this way apply to the URL pattern and any URLs below that point, it was possible - depending on the order Servlets were loaded - for some security constraints not to be applied. This could have exposed resources to users who were not authorised to access them.", "explanationMarkdown": "Apache Tomcat Catalina does not always properly validate access to servlets.  Security constraints defined in a servlet's annotations are applied when the servlet is loaded by the `invoke ` method of `AuthenticatorBase.java`.  Security constraints are hierarchical in the way that URLs are processed, which means that it is possible that the order in which the servlets are loaded could result in a situation wherein security constraints are not properly applied.  This can allow users of the vulnerable application to access resources that they would not normally be able to otherwise. ", "detectionMarkdown": "The application is vulnerable by using this component.", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue.", "advisories": [{"referenceType": "PROJECT", "url": "https://lists.apache.org/thread.html/d3354bb0a4eda4acc0a66f3eb24a213fdb75d12c7d16060b23e65781@%3Cannounce.tomcat.apache.org%3E"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "cve", "reference": "CVE-2018-1336", "severity": 7.5, "status": "Open", "url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-1336", "threatCategory": "critical", "cwe": "835", "cvssVector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H", "cvssVectorSource": "cve_cvss_3", "deeperData": {"identifier": "CVE-2018-1336", "vulnIds": ["CVE-2018-1336"], "vulnerabilityLink": "http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2018-1336", "source": {"shortName": "CVE", "longName": "National Vulnerability Database"}, "mainSeverity": {"source": "cve_cvss_3", "score": 7.5, "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}, "severityScores": [{"source": "cve_cvss_2", "score": 5.0}, {"source": "sonatype_cvss_3", "score": 6.5}], "weakness": {"cweSource": "CVE", "cweIds": [{"id": "835", "uri": "https://cwe.mitre.org/data/definitions/835.html"}]}, "categories": ["data", "operational"], "description": "An improper handing of overflow in the UTF-8 decoder with supplementary characters can lead to an infinite loop in the decoder causing a Denial of Service. Versions Affected: Apache Tomcat 9.0.0.M9 to 9.0.7, 8.5.0 to 8.5.30, 8.0.0.RC1 to 8.0.51, and 7.0.28 to 7.0.86.", "explanationMarkdown": "The `tomcat-util` component of Apache Tomcat is vulnerable to a Denial of Service (DoS) attack.  The `decodeHasArray` method in `Utf8Decoder.java` does not properly handle overflow when decoding certain UTF-8 supplementary characters.  This flaw can result in an infinite loop, causing the thread to consume a large amount of CPU and/or memory resources. An attacker can exploit this vulnerability by submitting a maliciously crafted piece of UTF-8 data containing supplementary characters.  This malicious input may trigger the infinite loop and result in a Denial of Service.", "detectionMarkdown": "The application is vulnerable by using this component.", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue.", "advisories": [{"referenceType": "PROJECT", "url": "http://tomcat.apache.org/security-9.html"}, {"referenceType": "PROJECT", "url": "https://mail-archives.apache.org/mod_mbox/www-announce/201807.mbox/%3C20180722090435.GA60759@minotaur.apache.org%3E"}, {"referenceType": "PROJECT", "url": "https://tomcat.apache.org/security-7.html"}, {"referenceType": "PROJECT", "url": "https://tomcat.apache.org/security-8.html"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "cve", "reference": "CVE-2019-0221", "severity": 6.1, "status": "Open", "url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0221", "threatCategory": "severe", "cwe": "79", "cvssVector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N", "cvssVectorSource": "cve_cvss_3", "deeperData": {"identifier": "CVE-2019-0221", "vulnIds": ["CVE-2019-0221"], "vulnerabilityLink": "http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2019-0221", "source": {"shortName": "CVE", "longName": "National Vulnerability Database"}, "mainSeverity": {"source": "cve_cvss_3", "score": 6.1, "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N"}, "severityScores": [{"source": "cve_cvss_2", "score": 4.3}, {"source": "sonatype_cvss_3", "score": 6.1}], "weakness": {"cweSource": "CVE", "cweIds": [{"id": "79", "uri": "https://cwe.mitre.org/data/definitions/79.html"}]}, "categories": ["configuration", "data", "functional", "operational"], "description": "The SSI printenv command in Apache Tomcat 9.0.0.M1 to 9.0.0.17, 8.5.0 to 8.5.39 and 7.0.0 to 7.0.93 echoes user provided data without escaping and is, therefore, vulnerable to XSS. SSI is disabled by default. The printenv command is intended for debugging and is unlikely to be present in a production website.", "explanationMarkdown": "The `tomcat-catalina` package is vulnerable to Cross-Site Scripting (XSS). The `process` method in `SSIPrintenv.class` prints application environment variables without sanitizing them. A remote attacker could exploit this vulnerability by sending a malicious payload as part of the HTTP request, which may be automatically set as an environment variable. This can be used to inject JavaScript in a victim's browser.", "detectionMarkdown": "The application is vulnerable by using this component with SSI enabled, which is disabled by default. The SSI component is toggled on or off in the `$CATALINA_BASE/conf/web.xml` file. For more information see [https://tomcat.apache.org/tomcat-7.0-doc/ssi-howto.html](https://tomcat.apache.org/tomcat-7.0-doc/ssi-howto.html)", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue. If upgrading is not a viable option, this vulnerability can be mitigated by disabling the SSI functionality.", "advisories": [{"referenceType": "ATTACK", "url": "https://seclists.org/fulldisclosure/2019/May/50"}, {"referenceType": "PROJECT", "url": "https://lists.apache.org/thread.html/6e6e9eacf7b28fd63d249711e9d3ccd4e0a83f556e324aee37be5a8c@%3Cannounce.tomcat.apache.org%3E"}, {"referenceType": "THIRD_PARTY", "url": "https://security-tracker.debian.org/tracker/CVE-2019-0221"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "cve", "reference": "CVE-2019-0232", "severity": 8.1, "status": "Open", "url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0232", "threatCategory": "critical", "cwe": "78", "cvssVector": "CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H", "cvssVectorSource": "cve_cvss_3", "deeperData": {"identifier": "CVE-2019-0232", "vulnIds": ["CVE-2019-0232"], "vulnerabilityLink": "http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2019-0232", "source": {"shortName": "CVE", "longName": "National Vulnerability Database"}, "mainSeverity": {"source": "cve_cvss_3", "score": 8.1, "vector": "CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H"}, "severityScores": [{"source": "cve_cvss_2", "score": 9.3}, {"source": "sonatype_cvss_3", "score": 8.8}], "weakness": {"cweSource": "CVE", "cweIds": [{"id": "78", "uri": "https://cwe.mitre.org/data/definitions/78.html"}]}, "categories": ["configuration", "data"], "description": "When running on Windows with enableCmdLineArguments enabled, the CGI Servlet in Apache Tomcat 9.0.0.M1 to 9.0.17, 8.5.0 to 8.5.39 and 7.0.0 to 7.0.93 is vulnerable to Remote Code Execution due to a bug in the way the JRE passes command line arguments to Windows. The CGI Servlet is disabled by default. The CGI option enableCmdLineArguments is disable by default in Tomcat 9.0.x (and will be disabled by default in all versions in response to this vulnerability). For a detailed explanation of the JRE behaviour, see Markus Wulftange's blog (https://codewhitesec.blogspot.com/2016/02/java-and-command-line-injections-in-windows.html) and this archived MSDN blog (https://web.archive.org/web/20161228144344/https://blogs.msdn.microsoft.com/twistylittlepassagesallalike/2011/04/23/everyone-quotes-command-line-arguments-the-wrong-way/).", "explanationMarkdown": "The CGI Servlet in Apache Tomcat is vulnerable to Remote Code Execution. The `init` and `setupFromRequest` methods in the `CGIServlet.class` do not properly decode any command-line arguments supplied as an input to the CGI Servlet. When running on Windows systems with the `enableCmdLineArguments` option enabled, the component could allow an attacker to execute code remotely by supplying crafted input in a request.\n\n*Advisory Deviation Notice:* The Sonatype security research team discovered that in the 8.x versions of the component, the vulnerability is present from 8.0.0 until 8.5.39 and not from the 8.5.0 version as stated in the advisory. Additionally, one of the mitigations specified in the advisory (\"Upgrade to Apache Tomcat 7.0.93 or later when released\") is incorrect since version 7.0.93 is vulnerable as well.  7.0.94 contains the fix for 7.0.x.", "detectionMarkdown": "The application is vulnerable by using this component when running on Windows with the CGI Servlet initialization parameter `enableCmdLineArguments` option of the component set to true.", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue.\n\nUntil a fixed version is installed, the vulnerability can be mitigated by setting the CGI Servlet initialization parameter `enableCmdLineArguments` to false.\n\nReference: [http://mail-archives.apache.org/mod_mbox/www-announce/201904.mbox/%3C13d878ec-5d49-c348-48d4-25a6c81b9605@apache.org%3E](http://mail-archives.apache.org/mod_mbox/www-announce/201904.mbox/%3C13d878ec-5d49-c348-48d4-25a6c81b9605@apache.org%3E)\n\nNOTE: For 7.0.x, the advisory mentions upgrading to 7.0.93 which appears to be a typographical error as 7.0.93 is not a fixed version.  7.0.94 has been released and this contains the fix.", "advisories": [{"referenceType": "PROJECT", "url": "http://mail-archives.apache.org/mod_mbox/www-announce/201904.mbox/%3C13d878ec-5d49-c348-48d4-25a6c81b9605@apache.org%3E"}, {"referenceType": "PROJECT", "url": "http://tomcat.apache.org/security-7.html"}, {"referenceType": "PROJECT", "url": "http://tomcat.apache.org/security-8.html"}, {"referenceType": "PROJECT", "url": "http://tomcat.apache.org/security-9.html"}, {"referenceType": "THIRD_PARTY", "url": "https://blog.sonatype.com/nexus-intelligence-insights-cve-2019-0232-apache-tomcat-cgi-servlet-remote-code-execution"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "cve", "reference": "CVE-2019-16869", "severity": 7.5, "status": "Open", "url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-16869", "threatCategory": "critical", "cwe": "444", "cvssVector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N", "cvssVectorSource": "cve_cvss_3", "deeperData": {"identifier": "CVE-2019-16869", "vulnIds": ["CVE-2019-16869"], "vulnerabilityLink": "http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2019-16869", "source": {"shortName": "CVE", "longName": "National Vulnerability Database"}, "mainSeverity": {"source": "cve_cvss_3", "score": 7.5, "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N"}, "severityScores": [{"source": "cve_cvss_2", "score": 5.0}, {"source": "sonatype_cvss_3", "score": 7.5}], "weakness": {"cweSource": "CVE", "cweIds": [{"id": "444", "uri": "https://cwe.mitre.org/data/definitions/444.html"}]}, "categories": ["data"], "description": "Netty before 4.1.42.Final mishandles whitespace before the colon in HTTP headers (such as a \"Transfer-Encoding : chunked\" line), which leads to HTTP request smuggling.", "explanationMarkdown": "Netty is vulnerable to HTTP Request Smuggling. The `splitHeader` method in `HttpObjectDecoder.class` does not properly handle HTTP headers containing whitespace between the header field-name and colon. An attacker can exploit this by sending such a header containing this white space and have the header end up being parsed by one endpoint and not another, due to inconsistencies in how the whitespace in the header is handled.", "detectionMarkdown": "The application is vulnerable by using this component.", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue.", "advisories": [{"referenceType": "PROJECT", "url": "https://github.com/netty/netty/issues/9571"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "cve", "reference": "CVE-2019-17563", "severity": 7.5, "status": "Open", "url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-17563", "threatCategory": "critical", "cwe": "384", "cvssVector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:H/I:H/A:H", "cvssVectorSource": "cve_cvss_3", "deeperData": {"identifier": "CVE-2019-17563", "vulnIds": ["CVE-2019-17563"], "vulnerabilityLink": "http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2019-17563", "source": {"shortName": "CVE", "longName": "National Vulnerability Database"}, "mainSeverity": {"source": "cve_cvss_3", "score": 7.5, "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:H/I:H/A:H"}, "severityScores": [{"source": "cve_cvss_2", "score": 5.1}, {"source": "sonatype_cvss_3", "score": 4.2}], "weakness": {"cweSource": "CVE", "cweIds": [{"id": "384", "uri": "https://cwe.mitre.org/data/definitions/384.html"}]}, "categories": ["data", "operational"], "description": "When using FORM authentication with Apache Tomcat 9.0.0.M1 to 9.0.29, 8.5.0 to 8.5.49 and 7.0.0 to 7.0.98 there was a narrow window where an attacker could perform a session fixation attack. The window was considered too narrow for an exploit to be practical but, erring on the side of caution, this issue has been treated as a security vulnerability.", "explanationMarkdown": "Apache Tomcat is vulnerable to Session Fixation. The `matchRequest` and `authenticate` methods in `FormAuthenticator.class` do not properly ensure that the Principal is not cached in the session when caching is set to false. This creates a small window of opportunity in which a remote attacker can execute a session fixation attack against a victim.\n\n*Advisory Deviation Notice:* The Sonatype security research team has discovered that the vulnerability is present in 8.0.X versions as well, not just versions 8.5.0 to 8.5.49 as the advisory states.", "detectionMarkdown": "The application is vulnerable by using this component.", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue.\n\nNote: If this component is included as a bundled/transitive dependency of another component, there may not be an upgrade path. In this instance, we recommend contacting the maintainers who included the vulnerable package. Alternatively, we recommend investigating alternative components or a potential mitigating control.", "advisories": [{"referenceType": "PROJECT", "url": "https://tomcat.apache.org/security-7.html#Fixed_in_Apache_Tomcat_7.0.99"}, {"referenceType": "PROJECT", "url": "https://tomcat.apache.org/security-8.html#Fixed_in_Apache_Tomcat_8.5.50"}, {"referenceType": "PROJECT", "url": "https://tomcat.apache.org/security-9.html#Fixed_in_Apache_Tomcat_9.0.30"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "cve", "reference": "CVE-2019-20444", "severity": 9.1, "status": "Open", "url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-20444", "threatCategory": "critical", "cwe": "444", "cvssVector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N", "cvssVectorSource": "cve_cvss_3", "deeperData": {"identifier": "CVE-2019-20444", "vulnIds": ["CVE-2019-20444"], "vulnerabilityLink": "http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2019-20444", "source": {"shortName": "CVE", "longName": "National Vulnerability Database"}, "mainSeverity": {"source": "cve_cvss_3", "score": 9.1, "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N"}, "severityScores": [{"source": "cve_cvss_2", "score": 6.4}, {"source": "sonatype_cvss_3", "score": 9.1}], "weakness": {"cweSource": "CVE", "cweIds": [{"id": "444", "uri": "https://cwe.mitre.org/data/definitions/444.html"}]}, "categories": ["data"], "description": "HttpObjectDecoder.java in Netty before 4.1.44 allows an HTTP header that lacks a colon, which might be interpreted as a separate header with an incorrect syntax, or might be interpreted as an \"invalid fold.\"", "explanationMarkdown": "The `netty-codec-http` package is vulnerable to HTTP Request Smuggling. The `splitHeader` method in `HttpObjectDecoder.class` does not ensure that headers have colons when processing HTTP requests. As this will lead to requests being interpreted inconsistently, an attacker can exploit this behavior to potentially smuggle HTTP Requests.\n\n*Advisory Deviation Notice:* The Sonatype security research team discovered that the root cause of the vulnerability is also in 5.0.0.Alpha1 and 5.0.0.Alpha2, not just in versions before 4.1.44 as stated in the advisory.\n", "detectionMarkdown": "The application is vulnerable by using this component.", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue.\n\nNote: If this component is included as a bundled/transitive dependency of another component, there may not be an upgrade path. In this instance, we recommend contacting the maintainers who included the vulnerable package. Alternatively, we recommend investigating alternative components or a potential mitigating control.", "advisories": [{"referenceType": "PROJECT", "url": "https://github.com/netty/netty/issues/9866"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "cve", "reference": "CVE-2019-20445", "severity": 9.1, "status": "Open", "url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-20445", "threatCategory": "critical", "cwe": "444", "cvssVector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N", "cvssVectorSource": "cve_cvss_3", "deeperData": {"identifier": "CVE-2019-20445", "vulnIds": ["CVE-2019-20445"], "vulnerabilityLink": "http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2019-20445", "source": {"shortName": "CVE", "longName": "National Vulnerability Database"}, "mainSeverity": {"source": "cve_cvss_3", "score": 9.1, "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N"}, "severityScores": [{"source": "cve_cvss_2", "score": 6.4}, {"source": "sonatype_cvss_3", "score": 9.1}], "weakness": {"cweSource": "CVE", "cweIds": [{"id": "444", "uri": "https://cwe.mitre.org/data/definitions/444.html"}]}, "categories": ["data"], "description": "HttpObjectDecoder.java in Netty before 4.1.44 allows a Content-Length header to be accompanied by a second Content-Length header, or by a Transfer-Encoding header.", "explanationMarkdown": "The `netty-codec-http` package is vulnerable to HTTP Request Smuggling. The `readHeaders` method in `HttpObjectDecoder.class` accepts HTTP requests that contain multiple `Content-Length` headers or that contain both a `Content-Length` and `Transfer-Encoding` header. A remote attacker can exploit this functionality to potentially hide additional HTTP requests that will be interpreted differently by different parsers.\n\n*Advisory Deviation Notice:* The Sonatype security research team discovered that the vulnerability is in 5.0.0.Alpha1 and 5.0.0.Alpha2, not just in versions before 4.1.44, as stated in the advisory.", "detectionMarkdown": "The application is vulnerable by using this component.", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue.\n\nNote: If this component is included as a bundled/transitive dependency of another component, there may not be an upgrade path. In this instance, we recommend contacting the maintainers who included the vulnerable package. Alternatively, we recommend investigating alternative components or a potential mitigating control.", "advisories": [{"referenceType": "PROJECT", "url": "https://github.com/netty/netty/issues/9861"}, {"referenceType": "PROJECT", "url": "https://github.com/netty/netty/pull/9865"}, {"referenceType": "PROJECT", "url": "https://lists.apache.org/thread.html/r70b1ff22ee80e8101805b9a473116dd33265709007d2deb6f8c80bf2@%3Ccommits.druid.apache.org%3E"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "cve", "reference": "CVE-2020-13935", "severity": 7.5, "status": "Open", "url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-13935", "threatCategory": "critical", "cwe": "835", "cvssVector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H", "cvssVectorSource": "cve_cvss_3", "deeperData": {"identifier": "CVE-2020-13935", "vulnIds": ["CVE-2020-13935"], "vulnerabilityLink": "http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2020-13935", "source": {"shortName": "CVE", "longName": "National Vulnerability Database"}, "mainSeverity": {"source": "cve_cvss_3", "score": 7.5, "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}, "severityScores": [{"source": "cve_cvss_2", "score": 5.0}, {"source": "sonatype_cvss_3", "score": 5.9}], "weakness": {"cweSource": "CVE", "cweIds": [{"id": "835", "uri": "https://cwe.mitre.org/data/definitions/835.html"}]}, "categories": ["data", "operational"], "description": "The payload length in a WebSocket frame was not correctly validated in Apache Tomcat 10.0.0-M1 to 10.0.0-M6, 9.0.0.M1 to 9.0.36, 8.5.0 to 8.5.56 and 7.0.27 to 7.0.104. Invalid payload lengths could trigger an infinite loop. Multiple requests with invalid payload lengths could lead to a denial of service.", "explanationMarkdown": "The `tomcat-websocket` package is vulnerable to a Denial of Service (DoS). The `processRemainingHeader` method in `WsFrameBase.java` expects the most significant bit of the payload length to be 0, otherwise it gets taken as a negative number and is then endlessly processed. A remote attacker could exploit this behavior with several malicious requests that end up in such a situation to cause a DoS situation.", "detectionMarkdown": "The application is vulnerable by using this component.", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue.\n\nNote: If this component is included as a bundled/transitive dependency of another component, there may not be an upgrade path. In this instance, we recommend contacting the maintainers who included the vulnerable package. Alternatively, we recommend investigating alternative components or a potential mitigating control.", "advisories": [{"referenceType": "PROJECT", "url": "http://tomcat.apache.org/security-10.html"}, {"referenceType": "PROJECT", "url": "http://tomcat.apache.org/security-7.html"}, {"referenceType": "PROJECT", "url": "http://tomcat.apache.org/security-8.html"}, {"referenceType": "PROJECT", "url": "http://tomcat.apache.org/security-9.html"}, {"referenceType": "PROJECT", "url": "https://lists.apache.org/thread.html/rd48c72bd3255bda87564d4da3791517c074d94f8a701f93b85752651%40%3Cannounce.tomcat.apache.org%3E"}, {"referenceType": "THIRD_PARTY", "url": "https://blog.sonatype.com/nexus-intelligence-insightscve-2020-13935-apache-tomcat"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "cve", "reference": "CVE-2020-1935", "severity": 4.8, "status": "Open", "url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-1935", "threatCategory": "severe", "cwe": "444", "cvssVector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N", "cvssVectorSource": "cve_cvss_3", "deeperData": {"identifier": "CVE-2020-1935", "vulnIds": ["CVE-2020-1935"], "vulnerabilityLink": "http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2020-1935", "source": {"shortName": "CVE", "longName": "National Vulnerability Database"}, "mainSeverity": {"source": "cve_cvss_3", "score": 4.8, "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N"}, "severityScores": [{"source": "cve_cvss_2", "score": 5.8}, {"source": "sonatype_cvss_3", "score": 3.7}], "weakness": {"cweSource": "CVE", "cweIds": [{"id": "444", "uri": "https://cwe.mitre.org/data/definitions/444.html"}]}, "categories": ["data", "operational"], "description": "In Apache Tomcat 9.0.0.M1 to 9.0.30, 8.5.0 to 8.5.50 and 7.0.0 to 7.0.99 the HTTP header parsing code used an approach to end-of-line parsing that allowed some invalid HTTP headers to be parsed as valid. This led to a possibility of HTTP Request Smuggling if Tomcat was located behind a reverse proxy that incorrectly handled the invalid Transfer-Encoding header in a particular manner. Such a reverse proxy is considered unlikely.", "explanationMarkdown": "The `tomcat-coyote` package is vulnerable to HTTP Request Smuggling. The `parseHeader` and `skipLine` methods in `Http11InputBuffer.class`, `InternalNioInputBuffer.class`, `InternalAprInputBuffer.class`, and `InternalInputBuffer.class` do not properly parse HTTP request header values in regards to end-of-line (EOL) parsing. An attacker can exploit this when Tomcat is located behind a reverse proxy, using a malicious and invalid Transfer-Encoding header that would then be parsed as valid.\n\n*Advisory Deviation Notice:* The Sonatype security research team has discovered that the vulnerability is present in 8.0.x versions prior to 8.5.0, not just 8.5.x versions as the advisory states.", "detectionMarkdown": "The application is vulnerable by using this component while being located behind a reverse proxy.", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue.\n\nNote: If this component is included as a bundled/transitive dependency of another component, there may not be an upgrade path. In this instance, we recommend contacting the maintainers who included the vulnerable package. Alternatively, we recommend investigating alternative components or a potential mitigating control.", "advisories": [{"referenceType": "PROJECT", "url": "https://lists.apache.org/thread.html/r127f76181aceffea2bd4711b03c595d0f115f63e020348fe925a916c%40%3Cannounce.tomcat.apache.org%3E"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "cve", "reference": "CVE-2020-1938", "severity": 9.8, "status": "Open", "url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-1938", "threatCategory": "critical", "cwe": "269", "cvssVector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H", "cvssVectorSource": "cve_cvss_3", "deeperData": {"identifier": "CVE-2020-1938", "vulnIds": ["CVE-2020-1938"], "vulnerabilityLink": "http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2020-1938", "source": {"shortName": "CVE", "longName": "National Vulnerability Database"}, "mainSeverity": {"source": "cve_cvss_3", "score": 9.8, "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"}, "severityScores": [{"source": "cve_cvss_2", "score": 7.5}, {"source": "sonatype_cvss_3", "score": 9.8}], "weakness": {"cweSource": "Sonatype", "cweIds": [{"id": "269", "uri": "https://cwe.mitre.org/data/definitions/269.html"}]}, "categories": ["data", "operational"], "description": "When using the Apache JServ Protocol (AJP), care must be taken when trusting incoming connections to Apache Tomcat. Tomcat treats AJP connections as having higher trust than, for example, a similar HTTP connection. If such connections are available to an attacker, they can be exploited in ways that may be surprising. In Apache Tomcat 9.0.0.M1 to 9.0.0.30, 8.5.0 to 8.5.50 and 7.0.0 to 7.0.99, Tomcat shipped with an AJP Connector enabled by default that listened on all configured IP addresses. It was expected (and recommended in the security guide) that this Connector would be disabled if not required. This vulnerability report identified a mechanism that allowed: - returning arbitrary files from anywhere in the web application - processing any file in the web application as a JSP Further, if the web application allowed file upload and stored those files within the web application (or the attacker was able to control the content of the web application by some other means) then this, along with the ability to process a file as a JSP, made remote code execution possible. It is important to note that mitigation is only required if an AJP port is accessible to untrusted users. Users wishing to take a defence-in-depth approach and block the vector that permits returning arbitrary files and execution as JSP may upgrade to Apache Tomcat 9.0.31, 8.5.51 or 7.0.100 or later. A number of changes were made to the default AJP Connector configuration in 9.0.31 to harden the default configuration. It is likely that users upgrading to 9.0.31, 8.5.51 or 7.0.100 or later will need to make small changes to their configurations.", "explanationMarkdown": "Apache Tomcat contains an arbitrary file read/inclusion vulnerability. The `conf/server.xml` file enables the Apache JServ Protocol (AJP) connector by default, which listens on port `8009`. Additionally, the constructor and the `createProcessor()` method in the `AbstractAjpProtocol` class, the constructor in the `AjpAprProtocol`, `AjpProtocol`, and `AjpNioProtocol` classes, and the `prepareRequest()` method in the `AbstractAjpProcessor`, `AjpProcessor`, and `AjpAprProcessor` classes accept arbitrary request attributes and fail to enforce the `requiredSecret` for AJP connections. A remote attacker can leverage this behavior to read arbitrary files from the affected server via AJP connections, or to perform Remote Code Execution (RCE) by uploading files of certain types, such as JavaServer Pages (JSP), if the application allows users to upload files to the document root directory.", "detectionMarkdown": "The application is vulnerable by using this component if the AJP connector is enabled.", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue. Alternatively, if upgrading is not a viable option, this vulnerability can be mitigated by disabling the AJP connector via the `conf/server.xml` configuration file.\n\nNote: If this component is included as a bundled/transitive dependency of another component, there may not be an upgrade path. In this instance, we recommend contacting the maintainers who included the vulnerable package. Alternatively, we recommend investigating alternative components or a potential mitigating control.", "advisories": [{"referenceType": "ATTACK", "url": "https://github.com/0nise/CVE-2020-1938"}, {"referenceType": "ATTACK", "url": "https://github.com/YDHCUI/CNVD-2020-10487-Tomcat-Ajp-lfi"}, {"referenceType": "ATTACK", "url": "https://github.com/laolisafe/CVE-2020-1938"}, {"referenceType": "ATTACK", "url": "https://github.com/nibiwodong/CNVD-2020-10487-Tomcat-ajp-POC"}, {"referenceType": "ATTACK", "url": "https://github.com/xindongzhuaizhuai/CVE-2020-1938"}, {"referenceType": "PROJECT", "url": "https://tomcat.apache.org/tomcat-7.0-doc/changelog.html"}, {"referenceType": "PROJECT", "url": "https://tomcat.apache.org/tomcat-8.5-doc/changelog.html"}, {"referenceType": "PROJECT", "url": "https://tomcat.apache.org/tomcat-9.0-doc/changelog.html"}, {"referenceType": "THIRD_PARTY", "url": "https://blog.sonatype.com/nexus-intelligence-insights-whats-in-a-ghostcat-cve-2020-1938-apache-tomcat"}, {"referenceType": "THIRD_PARTY", "url": "https://www.tenable.com/blog/cve-2020-1938-ghostcat-apache-tomcat-ajp-file-readinclusion-vulnerability-cnvd-2020-10487?utm_source=feedburner&utm_medium=feed&utm_campaign=Feed%3A+tenable%2FqaXL+%28Tenable+Network+Security+Blog%29"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "cve", "reference": "CVE-2020-5397", "severity": 5.3, "status": "Open", "url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-5397", "threatCategory": "severe", "cwe": "352", "cvssVector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N", "cvssVectorSource": "cve_cvss_3", "deeperData": {"identifier": "CVE-2020-5397", "vulnIds": ["CVE-2020-5397"], "vulnerabilityLink": "http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2020-5397", "source": {"shortName": "CVE", "longName": "National Vulnerability Database"}, "mainSeverity": {"source": "cve_cvss_3", "score": 5.3, "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N"}, "severityScores": [{"source": "cve_cvss_2", "score": 2.6}, {"source": "sonatype_cvss_3", "score": 6.3}], "weakness": {"cweSource": "CVE", "cweIds": [{"id": "352", "uri": "https://cwe.mitre.org/data/definitions/352.html"}]}, "categories": ["data"], "description": "Spring Framework, versions 5.2.x prior to 5.2.3 are vulnerable to CSRF attacks through CORS preflight requests that target Spring MVC (spring-webmvc module) or Spring WebFlux (spring-webflux module) endpoints. Only non-authenticated endpoints are vulnerable because preflight requests should not include credentials and therefore requests should fail authentication. However a notable exception to this are Chrome based browsers when using client certificates for authentication since Chrome sends TLS client certificates in CORS preflight requests in violation of spec requirements. No HTTP body can be sent or received as a result of this attack.", "explanationMarkdown": "The `spring-webmvc` and `spring-webflux` packages are vulnerable to Cross Site Request Forgery (CSRF). The `getHandler` method in `AbstractHandlerMapping.class` and the `hasCorsConfigurationSource` method in `AbstractHandlerMethodMapping.class`, will in some instances, process CORS Preflight requests as regular requests. An attacker can exploit this vulnerability to access authenticated functionality via a CSRF attack against an authenticated victim using Chrome.\n\n*Advisory Deviation Notice:* The Sonatype security research team discovered that the vulnerability is also present in versions prior to 5.2.x for both `org.springframework:spring-webmvc` and `org.springframework:spring-webflux` artifacts due to vulnerable class `AbstractHandlerMapping.class`, and not just in versions 5.2.x and above, as stated in the advisory. The fix for both artifacts went into version 5.2.3.RELEASE.", "detectionMarkdown": "The application is vulnerable by using this component. It is important to note that normally, this vulnerability can only be exploited against unauthenticated pages, but Chrome currently (as of 1/17/2020) sends client credentials with CORS Preflight requests, allowing this attack to be exploited against authenticated pages by victims using Chrome. It is also important to note that this vulnerability is limited by what CORS Preflight requests can send, so no body content can be sent or received by the victim.\n\nReference for Chromium CORS Preflight Behavior: [https://bugs.chromium.org/p/chromium/issues/detail?id=775438](https://bugs.chromium.org/p/chromium/issues/detail?id=775438)", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue.\n\nNote: If this component is included as a bundled/transitive dependency of another component, there may not be an upgrade path. In this instance, we recommend contacting the maintainers who included the vulnerable package. Alternatively, we recommend investigating alternative components or a potential mitigating control.", "advisories": [{"referenceType": "PROJECT", "url": "https://github.com/spring-projects/spring-framework/issues/24327"}, {"referenceType": "PROJECT", "url": "https://pivotal.io/security/cve-2020-5397"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "cve", "reference": "CVE-2020-5398", "severity": 7.5, "status": "Open", "url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-5398", "threatCategory": "critical", "cwe": "494", "cvssVector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:H/I:H/A:H", "cvssVectorSource": "cve_cvss_3", "deeperData": {"identifier": "CVE-2020-5398", "vulnIds": ["CVE-2020-5398"], "vulnerabilityLink": "http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2020-5398", "source": {"shortName": "CVE", "longName": "National Vulnerability Database"}, "mainSeverity": {"source": "cve_cvss_3", "score": 7.5, "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:H/I:H/A:H"}, "severityScores": [{"source": "cve_cvss_2", "score": 7.6}, {"source": "sonatype_cvss_3", "score": 8.0}], "weakness": {"cweSource": "CVE", "cweIds": [{"id": "494", "uri": "https://cwe.mitre.org/data/definitions/494.html"}]}, "categories": ["data", "functional"], "description": "In Spring Framework, versions 5.2.x prior to 5.2.3, versions 5.1.x prior to 5.1.13, and versions 5.0.x prior to 5.0.16, an application is vulnerable to a reflected file download (RFD) attack when it sets a \"Content-Disposition\" header in the response where the filename attribute is derived from user supplied input.", "explanationMarkdown": "The Spring Framework `spring-web` package is vulnerable to a Reflected File Download (RFD) attack. The `toString()` method in the `ContentDisposition` class fails to escape double-quote (`\"`) characters from user-supplied filenames when generating the header content. A remote attacker can exploit this vulnerability by crafting a resource URL that leverages a double-quote character in order to inject content into the downloaded response. The attacker can then entice a victim into navigating to the aforementioned URL. This will cause the victim to download the malicious resource which can result in execution of malicious system commands.", "detectionMarkdown": "", "recommendationMarkdown": "", "advisories": [{"referenceType": "PROJECT", "url": "https://github.com/spring-projects/spring-framework/issues/24220"}, {"referenceType": "PROJECT", "url": "https://pivotal.io/security/cve-2020-5398"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "cve", "reference": "CVE-2020-5421", "severity": 6.5, "status": "Open", "url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-5421", "threatCategory": "severe", "cwe": "20", "cvssVector": "CVSS:3.1/AV:N/AC:H/PR:L/UI:R/S:C/C:L/I:H/A:N", "cvssVectorSource": "cve_cvss_3", "deeperData": {"identifier": "CVE-2020-5421", "vulnIds": ["CVE-2020-5421"], "vulnerabilityLink": "http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2020-5421", "source": {"shortName": "CVE", "longName": "National Vulnerability Database"}, "mainSeverity": {"source": "cve_cvss_3", "score": 6.5, "vector": "CVSS:3.1/AV:N/AC:H/PR:L/UI:R/S:C/C:L/I:H/A:N"}, "severityScores": [{"source": "cve_cvss_2", "score": 3.6}, {"source": "sonatype_cvss_3", "score": 8.7}], "weakness": {"cweSource": "CVE", "cweIds": [{"id": "noinfo", "uri": "https://cwe.mitre.org/data/definitions/noinfo.html"}]}, "categories": ["data", "operational"], "description": "In Spring Framework versions 5.2.0 - 5.2.8, 5.1.0 - 5.1.17, 5.0.0 - 5.0.18, 4.3.0 - 4.3.28, and older unsupported versions, the protections against RFD attacks from CVE-2015-5211 may be bypassed depending on the browser used through the use of a jsessionid path parameter.", "explanationMarkdown": "The `spring-web` package is vulnerable to Improper Input Validation. The `parseMatrixVariables()` method in the `WebUtils` class and the `removeJsessionid()` method in the `UrlPathHelper` class process the `jsessionid` path parameter in a manner that allows for Reflected File Download (RFD) via certain browsers. A remote attacker can exploit this vulnerability by crafting a URL that leverages the `jsessionid` path parameter to embed malicious script content or commands into the response to be downloaded. The attacker can then entice a victim into submitting the request. Upon submitting the request, the victim's browser will download the response to a file generated on-the-fly by their browser, with an attacker-specified name and extension (if the `Content-Disposition` header in the response is derived from the URL), and injected malicious contents.\n\nNote: This vulnerability exists, in part, due to an insufficient fix for CVE-2015-5211.", "detectionMarkdown": "The application is vulnerable by using this component.", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue.\n\nNote: If this component is included as a bundled/transitive dependency of another component, there may not be an upgrade path. In this instance, we recommend contacting the maintainers who included the vulnerable package. Alternatively, we recommend investigating alternative components or a potential mitigating control.", "advisories": [{"referenceType": "THIRD_PARTY", "url": "https://tanzu.vmware.com/security/cve-2020-5421"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "cve", "reference": "CVE-2020-7238", "severity": 7.5, "status": "Open", "url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-7238", "threatCategory": "critical", "cwe": "444", "cvssVector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N", "cvssVectorSource": "cve_cvss_3", "deeperData": {"identifier": "CVE-2020-7238", "vulnIds": ["CVE-2020-7238"], "vulnerabilityLink": "http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2020-7238", "source": {"shortName": "CVE", "longName": "National Vulnerability Database"}, "mainSeverity": {"source": "cve_cvss_3", "score": 7.5, "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N"}, "severityScores": [{"source": "cve_cvss_2", "score": 5.0}, {"source": "sonatype_cvss_3", "score": 7.5}], "weakness": {"cweSource": "CVE", "cweIds": [{"id": "444", "uri": "https://cwe.mitre.org/data/definitions/444.html"}]}, "categories": ["data"], "description": "Netty 4.1.43.Final allows HTTP Request Smuggling because it mishandles Transfer-Encoding whitespace (such as a [space]Transfer-Encoding:chunked line) and a later Content-Length header. This issue exists because of an incomplete fix for CVE-2019-16869.", "explanationMarkdown": "The `netty-codec-http` and `netty` packages are vulnerable to HTTP Request Smuggling. The `readHeaders` method in `HttpObjectDecoder.class` accepts both a `  Transfer-Encoding: chunked` and `Content-Length` HTTP header (or multiple `Content-Length` HTTP headers) in the same request. The library also mishandles whitespace in the ` Transfer-Encoding: chunked` header. A remote attacker may smuggle requests that will only be processed by the server once subsequent requests are made by a user. This can force legitimate users to receive responses to requests they haven't made, and depending on how the server handles certain requests, may return unintended data.", "detectionMarkdown": "The application is vulnerable by using this component.", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue.\n\nNote: If this component is included as a bundled/transitive dependency of another component, there may not be an upgrade path. In this instance, we recommend contacting the maintainers who included the vulnerable package. Alternatively, we recommend investigating alternative components or potential mitigating control.", "advisories": [{"referenceType": "PROJECT", "url": "https://github.com/netty/netty/issues/9861#issuecomment-582296825"}, {"referenceType": "THIRD_PARTY", "url": "https://github.com/jdordonezn/CVE-2020-72381/issues/1"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "cve", "reference": "CVE-2020-9484", "severity": 7.0, "status": "Open", "url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-9484", "threatCategory": "critical", "cwe": "502", "cvssVector": "CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:H/I:H/A:H", "cvssVectorSource": "cve_cvss_3", "deeperData": {"identifier": "CVE-2020-9484", "vulnIds": ["CVE-2020-9484"], "vulnerabilityLink": "http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2020-9484", "source": {"shortName": "CVE", "longName": "National Vulnerability Database"}, "mainSeverity": {"source": "cve_cvss_3", "score": 7.0, "vector": "CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:H/I:H/A:H"}, "severityScores": [{"source": "cve_cvss_2", "score": 4.4}, {"source": "sonatype_cvss_3", "score": 7.5}], "weakness": {"cweSource": "CVE", "cweIds": [{"id": "502", "uri": "https://cwe.mitre.org/data/definitions/502.html"}]}, "categories": ["configuration", "data", "functional", "operational"], "description": "When using Apache Tomcat versions 10.0.0-M1 to 10.0.0-M4, 9.0.0.M1 to 9.0.34, 8.5.0 to 8.5.54 and 7.0.0 to 7.0.103 if a) an attacker is able to control the contents and name of a file on the server; and b) the server is configured to use the PersistenceManager with a FileStore; and c) the PersistenceManager is configured with sessionAttributeValueClassNameFilter=\"null\" (the default unless a SecurityManager is used) or a sufficiently lax filter to allow the attacker provided object to be deserialized; and d) the attacker knows the relative file path from the storage location used by FileStore to the file the attacker has control over; then, using a specifically crafted request, the attacker will be able to trigger remote code execution via deserialization of the file under their control. Note that all of conditions a) to d) must be true for the attack to succeed.", "explanationMarkdown": "The `tomcat-catalina` package is vulnerable to Remote Code Execution (RCE). The `file()` method in the `FileStore` class fails to enforce the current FileStore directory when creating a file Object, allowing specific configurations of Tomcat instances to attempt to deserialize files outside of the file store. An attacker that knows the FileStore location in addition to having control over the file that is passed into the `FileStore` object as input may craft a request that can trigger arbitrary code execution on Tomcat servers. \n\nThis vulnerability can only be exploited under the following specific circumstances:\n* The Persistence Manager is using a default  `sessionAttributeValueClassNameFilter` value of null, or a value that is permissive enough to allow object inputs to be deserialized by the FileStore object\n\n* The `FileStore` is enabled for the `PersistenceManager`\n\n* The attacker knows the FileStore path\n\n* The attacker controls some other file path on the system. This includes the ability to create arbitrary files.'\n\n\n*Advisory Deviation Notice:* The Sonatype security research team discovered that the vulnerability is also present in version the 4.x, 5.x, and 6.x branches of Apache Tomcat's Catalina component, not just the 7.x, 8.x, 9.x, and 10.x branches as the advisory states.", "detectionMarkdown": "The application is vulnerable by using this component.", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue.\n\nNote: If this component is included as a bundled/transitive dependency of another component, there may not be an upgrade path. In this instance, we recommend contacting the maintainers who included the vulnerable package. Alternatively, we recommend investigating alternative components or a potential mitigating control.\n\n**Mitigation**\n\nIf a vulnerable version of Apache Tomcat must be used, serialization and deserialization using the `PersistenceManager` can be limited only to application provided attributes using the `sessionAttributeValueClassNameFilter`.\n\nSource: [https://lists.apache.org/thread.html/r77eae567ed829da9012cadb29af17f2df8fa23bf66faf88229857bb1%40%3Cannounce.tomcat.apache.org%3E](https://lists.apache.org/thread.html/r77eae567ed829da9012cadb29af17f2df8fa23bf66faf88229857bb1%40%3Cannounce.tomcat.apache.org%3E)", "advisories": [{"referenceType": "PROJECT", "url": "https://lists.apache.org/thread.html/r77eae567ed829da9012cadb29af17f2df8fa23bf66faf88229857bb1%40%3Cannounce.tomcat.apache.org%3E"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "cve", "reference": "CVE-2021-21290", "severity": 5.5, "status": "Open", "url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-21290", "threatCategory": "severe", "cwe": "378", "cvssVector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N", "cvssVectorSource": "cve_cvss_3", "deeperData": {"identifier": "CVE-2021-21290", "vulnIds": ["CVE-2021-21290"], "vulnerabilityLink": "http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2021-21290", "source": {"shortName": "CVE", "longName": "National Vulnerability Database"}, "mainSeverity": {"source": "cve_cvss_3", "score": 5.5, "vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N"}, "severityScores": [{"source": "cve_cvss_2", "score": 1.9}, {"source": "sonatype_cvss_3", "score": 5.5}], "weakness": {"cweSource": "CVE", "cweIds": [{"id": "378", "uri": "https://cwe.mitre.org/data/definitions/378.html"}, {"id": "379", "uri": "https://cwe.mitre.org/data/definitions/379.html"}]}, "categories": ["data"], "description": "Netty is an open-source, asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers & clients. In Netty before version 4.1.59.Final there is a vulnerability on Unix-like systems involving an insecure temp file. When netty's multipart decoders are used local information disclosure can occur via the local system temporary directory if temporary storing uploads on the disk is enabled. On unix-like systems, the temporary directory is shared between all user. As such, writing to this directory using APIs that do not explicitly set the file/directory permissions can lead to information disclosure. Of note, this does not impact modern MacOS Operating Systems. The method \"File.createTempFile\" on unix-like systems creates a random file, but, by default will create this file with the permissions \"-rw-r--r--\". Thus, if sensitive information is written to this file, other local users can read this information. This is the case in netty's \"AbstractDiskHttpData\" is vulnerable. This has been fixed in version 4.1.59.Final. As a workaround, one may specify your own \"java.io.tmpdir\" when you start the JVM or use \"DefaultHttpDataFactory.setBaseDir(...)\" to set the directory to something that is only readable by the current user.", "explanationMarkdown": "The `netty-codec-http`, `netty-common`, and `netty-handler` packages are vulnerable to Information Exposure due to Creation of Temporary File With Insecure Permissions. The `tempFile()` method in the `AbstractDiskHttpData` class, the `load()` method in the `NativeLibraryLoader` class, and the `newSelfSignedCertificate()` method in the `SelfSignedCertificate` class store sensitive data in temporary files with world-readable permissions. A local attacker can leverage this behavior to obtain sensitive information from temporary files created by the affected methods.", "detectionMarkdown": "The application is vulnerable by using Netty's multipart decoders within *nix environments.\n\nReference: [https://github.com/netty/netty/security/advisories/GHSA-5mcr-gq6c-3hq2](https://github.com/netty/netty/security/advisories/GHSA-5mcr-gq6c-3hq2)", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue. Alternatively, if upgrading is not a viable option, this vulnerability may be mitigated by following the workarounds provided by the project:\n\n>>>Specify your own java.io.tmpdir when you start the JVM or use DefaultHttpDataFactory.setBaseDir(...) to set the directory to something that is only readable by the current user.\n\nReference: [https://github.com/netty/netty/security/advisories/GHSA-5mcr-gq6c-3hq2](https://github.com/netty/netty/security/advisories/GHSA-5mcr-gq6c-3hq2)\n\nNote: If this component is included as a bundled/transitive dependency of another component, there may not be an upgrade path. In this instance, we recommend contacting the maintainers who included the vulnerable package. Alternatively, we recommend investigating alternative components or a potential mitigating control.", "advisories": [{"referenceType": "PROJECT", "url": "https://github.com/netty/netty/security/advisories/GHSA-5mcr-gq6c-3hq2"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "cve", "reference": "CVE-2021-21295", "severity": 5.9, "status": "Open", "url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-21295", "threatCategory": "severe", "cwe": "444", "cvssVector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N", "cvssVectorSource": "cve_cvss_3", "deeperData": {"identifier": "CVE-2021-21295", "vulnIds": ["CVE-2021-21295"], "vulnerabilityLink": "http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2021-21295", "source": {"shortName": "CVE", "longName": "National Vulnerability Database"}, "mainSeverity": {"source": "cve_cvss_3", "score": 5.9, "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N"}, "severityScores": [{"source": "cve_cvss_2", "score": 2.6}, {"source": "sonatype_cvss_3", "score": 5.9}], "weakness": {"cweSource": "CVE", "cweIds": [{"id": "444", "uri": "https://cwe.mitre.org/data/definitions/444.html"}]}, "categories": ["data", "functional", "operational"], "description": "Netty is an open-source, asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers & clients. In Netty (io.netty:netty-codec-http2) before version 4.1.60.Final there is a vulnerability that enables request smuggling. If a Content-Length header is present in the original HTTP/2 request, the field is not validated by `Http2MultiplexHandler` as it is propagated up. This is fine as long as the request is not proxied through as HTTP/1.1. If the request comes in as an HTTP/2 stream, gets converted into the HTTP/1.1 domain objects (`HttpRequest`, `HttpContent`, etc.) via `Http2StreamFrameToHttpObjectCodec `and then sent up to the child channel's pipeline and proxied through a remote peer as HTTP/1.1 this may result in request smuggling. In a proxy case, users may assume the content-length is validated somehow, which is not the case. If the request is forwarded to a backend channel that is a HTTP/1.1 connection, the Content-Length now has meaning and needs to be checked. An attacker can smuggle requests inside the body as it gets downgraded from HTTP/2 to HTTP/1.1. For an example attack refer to the linked GitHub Advisory. Users are only affected if all of this is true: `HTTP2MultiplexCodec` or `Http2FrameCodec` is used, `Http2StreamFrameToHttpObjectCodec` is used to convert to HTTP/1.1 objects, and these HTTP/1.1 objects are forwarded to another remote peer. This has been patched in 4.1.60.Final As a workaround, the user can do the validation by themselves by implementing a custom `ChannelInboundHandler` that is put in the `ChannelPipeline` behind `Http2StreamFrameToHttpObjectCodec`.", "explanationMarkdown": "The `netty-codec-http2` and `netty-codec-http` packages are vulnerable to HTTP Request Smuggling. The `onDataRead()` and `onHeadersRead()` methods in the `DefaultHttp2ConnectionDecoder$FrameReadListener` class fail to sanitize `Content-Length` HTTP header values and ensure that the HTTP message body length matches with the expected content length. The failure to do so allows embedded HTTP requests to bypass a front-facing proxy to potentially execute the message body as an additional HTTP request on a backend server. A remote attacker with access to a an HTTP web service utilizing a proxy server running a `netty` service with HTTP/2.0 support and a route path to an HTTP/1.1 backend server could smuggle requests to the backend server that would otherwise not be allowed to execute by an external client machine.", "detectionMarkdown": "The application is vulnerable by using this component in addition to the following circumstances:\n- The `HTTP2MultiplexCodec` or `Http2FrameCodec` is used\n- `Http2StreamFrameToHttpObjectCodec` is utilized to convert frames to HTTP/1.1 Objects\n- The converted HTTP/1.1 Objects are forwarded to another remote peer.\n\nReference: [https://github.com/netty/netty/security/advisories/GHSA-wm47-8v5p-wjpj](https://github.com/netty/netty/security/advisories/GHSA-wm47-8v5p-wjpj)", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue.\n\nUsers may manually validate the Content-Length headers by implementing a custom `ChannelInboundHandler` that is inserted into the `ChannelPipeline` behind the `Http2StreamFrameToHttpObjectCodec` to intercept the HTTP header and body for additional scrutiny.\n\nReference: [https://github.com/netty/netty/security/advisories/GHSA-wm47-8v5p-wjpj](https://github.com/netty/netty/security/advisories/GHSA-wm47-8v5p-wjpj)\n\nNote: If this component is included as a bundled/transitive dependency of another component, there may not be an upgrade path. In this instance, we recommend contacting the maintainers who included the vulnerable package. Alternatively, we recommend investigating alternative components or a potential mitigating control.", "advisories": [{"referenceType": "PROJECT", "url": "https://github.com/netty/netty/security/advisories/GHSA-wm47-8v5p-wjpj"}, {"referenceType": "THIRD_PARTY", "url": "https://lists.apache.org/thread/ztx01jknlcoq0v6pp2cwl609dyzk9r5h"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "cve", "reference": "CVE-2021-22060", "severity": 4.3, "status": "Open", "url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-22060", "threatCategory": "severe", "cwe": "117", "cvssVector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:L/A:N", "cvssVectorSource": "cve_cvss_3", "deeperData": {"identifier": "CVE-2021-22060", "vulnIds": ["CVE-2021-22060"], "vulnerabilityLink": "http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2021-22060", "source": {"shortName": "CVE", "longName": "National Vulnerability Database"}, "mainSeverity": {"source": "cve_cvss_3", "score": 4.3, "vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:L/A:N"}, "severityScores": [{"source": "cve_cvss_2", "score": 4.0}, {"source": "sonatype_cvss_3", "score": 5.3}], "weakness": {"cweSource": "Sonatype", "cweIds": [{"id": "117", "uri": "https://cwe.mitre.org/data/definitions/117.html"}]}, "categories": ["data"], "description": "In Spring Framework versions 5.3.0 - 5.3.13, 5.2.0 - 5.2.18, and older unsupported versions, it is possible for a user to provide malicious input to cause the insertion of additional log entries. This is a follow-up to CVE-2021-22096 that protects against additional types of input and in more places of the Spring Framework codebase.", "explanationMarkdown": "The `spring-webmvc`, `spring-webflux`, and `spring-websocket` packages are vulnerable due to Improper Output Neutralization for Logs. The methods in the files listed below allow users to inject arbitrary data into logs due to a lack of sanitization of control characters. A remote attacker can exploit this behavior to cause the application to log additional, arbitrary entries by submitting malicious data via certain request parameters.\n\n*Vulnerable File(s) and Function(s)*:\n\norg/springframework/web/servlet/resource/PathResourceResolver.class\n* getResource()\n* isInvalidEncodedPath()\n\norg/springframework/web/servlet/resource/ResourceHttpRequestHandler.class\n* isInvalidPath()\n\norg/springframework/web/reactive/resource/PathResourceResolver.class\n* getResource()\n* isInvalidEncodedPath()\n\norg/springframework/web/reactive/resource/ResourceWebHandler.class\n* isInvalidPath()\n\norg/springframework/web/socket/server/support/AbstractHandshakeHandler.class\n* handleInvalidUpgradeHeader()\n* handleInvalidConnectHeader()\n* handleWebSocketVersionNotSupported()\n\norg/springframework/web/socket/sockjs/support/AbstractSockJsService.class\n* handleRequest()\n\norg/springframework/web/socket/sockjs/transport/TransportHandlingSockJsService.class\n* handleTransportRequest()", "detectionMarkdown": "The application is vulnerable by using this component.", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue.\n\nNote: If this component is included as a bundled/transitive dependency of another component, there may not be an upgrade path. In this instance, we recommend contacting the maintainers who included the vulnerable package. Alternatively, we recommend investigating alternative components or a potential mitigating control.", "advisories": [{"referenceType": "PROJECT", "url": "https://tanzu.vmware.com/security/cve-2021-22060"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "cve", "reference": "CVE-2021-22096", "severity": 4.3, "status": "Open", "url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-22096", "threatCategory": "severe", "cwe": "117", "cvssVector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:L/A:N", "cvssVectorSource": "cve_cvss_3", "deeperData": {"identifier": "CVE-2021-22096", "vulnIds": ["CVE-2021-22096"], "vulnerabilityLink": "http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2021-22096", "source": {"shortName": "CVE", "longName": "National Vulnerability Database"}, "mainSeverity": {"source": "cve_cvss_3", "score": 4.3, "vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:L/A:N"}, "severityScores": [{"source": "cve_cvss_2", "score": 4.0}, {"source": "sonatype_cvss_3", "score": 4.3}], "weakness": {"cweSource": "Sonatype", "cweIds": [{"id": "117", "uri": "https://cwe.mitre.org/data/definitions/117.html"}]}, "categories": ["data"], "description": "In Spring Framework versions 5.3.0 - 5.3.10, 5.2.0 - 5.2.17, and older unsupported versions, it is possible for a user to provide malicious input to cause the insertion of additional log entries.", "explanationMarkdown": "The `spring-web` package is vulnerable to Improper Output Neutralization for Logs. The `handle()` method in the `ResponseStatusExceptionHandler` class fails to restrict the logging of certain malformed requests. A remote attacker can leverage this behavior to cause arbitrary data to be logged by an affected application.", "detectionMarkdown": "The application is vulnerable by using this component.", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue. Additionally, while version 5.3.11 contains the fix for this vulnerability, the project recommends upgrading to 5.3.12 due to a major regression introduced in version 5.3.11.\n\nReference: [https://tanzu.vmware.com/security/cve-2021-22096](https://tanzu.vmware.com/security/cve-2021-22096)\n\nNote: If this component is included as a bundled/transitive dependency of another component, there may not be an upgrade path. In this instance, we recommend contacting the maintainers who included the vulnerable package. Alternatively, we recommend investigating alternative components or a potential mitigating control.", "advisories": [{"referenceType": "PROJECT", "url": "https://tanzu.vmware.com/security/cve-2021-22096"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "cve", "reference": "CVE-2021-22118", "severity": 7.8, "status": "Open", "url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-22118", "threatCategory": "critical", "cwe": "269", "cvssVector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H", "cvssVectorSource": "cve_cvss_3", "deeperData": {"identifier": "CVE-2021-22118", "vulnIds": ["CVE-2021-22118"], "vulnerabilityLink": "http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2021-22118", "source": {"shortName": "CVE", "longName": "National Vulnerability Database"}, "mainSeverity": {"source": "cve_cvss_3", "score": 7.8, "vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"}, "severityScores": [{"source": "cve_cvss_2", "score": 4.6}, {"source": "sonatype_cvss_3", "score": 5.7}], "weakness": {"cweSource": "CVE", "cweIds": [{"id": "668", "uri": "https://cwe.mitre.org/data/definitions/668.html"}]}, "categories": ["configuration", "data"], "description": "In Spring Framework, versions 5.2.x prior to 5.2.15 and versions 5.3.x prior to 5.3.7, a WebFlux application is vulnerable to a privilege escalation: by (re)creating the temporary storage directory, a locally authenticated malicious user can read or modify files that have been uploaded to the WebFlux application, or overwrite arbitrary files with multipart request data.", "explanationMarkdown": "The `spring-web` component is vulnerable to Privilege Escalation. Several functions across various files, listed below, do not properly create separate temp directories across multiple instances of a WebFlux application for storage of uploaded files. A local authenticated attacker may exploit this by recreating the temp directory, allowing the attacker to read or modify the uploaded files or even potentially overwrite arbitrary files using multipart request data.\n\n*Advisory Deviation Notice:* The Sonatype security research team has discovered that the vulnerability is present in versions 5.0.0 until 5.2.15, not just in 5.2.x versions before 5.2.15 as the advisory states.\n\n*Vulnerable File(s) and Function(s)*:\n\norg/springframework/http/codec/multipart/SynchronossPartHttpMessageReader.class\n* read()\n\norg/springframework/http/codec/multipart/DefaultPartHttpMessageReader.class\n* read()\n\norg/springframework/http/codec/multipart/SynchronossPartHttpMessageReader$SynchronossPartGenerator.class\n* accept()", "detectionMarkdown": "The application is vulnerable by using this component.", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue.\n\nNote: If this component is included as a bundled/transitive dependency of another component, there may not be an upgrade path. In this instance, we recommend contacting the maintainers who included the vulnerable package. Alternatively, we recommend investigating alternative components or a potential mitigating control.", "advisories": [{"referenceType": "PROJECT", "url": "https://github.com/spring-projects/spring-framework/issues/26931"}, {"referenceType": "THIRD_PARTY", "url": "https://tanzu.vmware.com/security/cve-2021-22118"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "cve", "reference": "CVE-2021-24122", "severity": 5.9, "status": "Open", "url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-24122", "threatCategory": "severe", "cwe": "706", "cvssVector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N", "cvssVectorSource": "cve_cvss_3", "deeperData": {"identifier": "CVE-2021-24122", "vulnIds": ["CVE-2021-24122"], "vulnerabilityLink": "http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2021-24122", "source": {"shortName": "CVE", "longName": "National Vulnerability Database"}, "mainSeverity": {"source": "cve_cvss_3", "score": 5.9, "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N"}, "severityScores": [{"source": "cve_cvss_2", "score": 4.3}, {"source": "sonatype_cvss_3", "score": 7.5}], "weakness": {"cweSource": "CVE", "cweIds": [{"id": "706", "uri": "https://cwe.mitre.org/data/definitions/706.html"}]}, "categories": ["data", "operational"], "description": "When serving resources from a network location using the NTFS file system, Apache Tomcat versions 10.0.0-M1 to 10.0.0-M9, 9.0.0.M1 to 9.0.39, 8.5.0 to 8.5.59 and 7.0.0 to 7.0.106 were susceptible to JSP source code disclosure in some configurations. The root cause was the unexpected behaviour of the JRE API File.getCanonicalPath() which in turn was caused by the inconsistent behaviour of the Windows API (FindFirstFileW) in some circumstances.", "explanationMarkdown": "The `tomcat-catalina` package is vulnerable to Information Exposure. The `isInvalidWindowsFilename()` method in the `AbstractFileResourceSet` and `FileDirContext` classes fails to account for certain characters that may cause `File.getCanonicalPath()` to behave unexpectedly. A remote attacker can leverage this behavior to bypass security constraints and/or exfiltrate sensitive information, such as JSP source code, from otherwise-restricted resource locations.", "detectionMarkdown": "The application is vulnerable by using this component if it serves resources from Windows NTFS filesystems.\n\nReference: [https://lists.apache.org/thread.html/r1595889b083e05986f42b944dc43060d6b083022260b6ea64d2cec52%40%3Cannounce.tomcat.apache.org%3E](https://lists.apache.org/thread.html/r1595889b083e05986f42b944dc43060d6b083022260b6ea64d2cec52%40%3Cannounce.tomcat.apache.org%3E)", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue.\n\nNote: If this component is included as a bundled/transitive dependency of another component, there may not be an upgrade path. In this instance, we recommend contacting the maintainers who included the vulnerable package. Alternatively, we recommend investigating alternative components or a potential mitigating control.", "advisories": [{"referenceType": "PROJECT", "url": "https://bz.apache.org/bugzilla/show_bug.cgi?id=64871"}, {"referenceType": "PROJECT", "url": "https://lists.apache.org/thread.html/r1595889b083e05986f42b944dc43060d6b083022260b6ea64d2cec52%40%3Cannounce.tomcat.apache.org%3E"}, {"referenceType": "PROJECT", "url": "https://tomcat.apache.org/security-10.html"}, {"referenceType": "PROJECT", "url": "https://tomcat.apache.org/security-7.html"}, {"referenceType": "PROJECT", "url": "https://tomcat.apache.org/security-8.html"}, {"referenceType": "PROJECT", "url": "https://tomcat.apache.org/security-9.html"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "cve", "reference": "CVE-2021-30640", "severity": 6.5, "status": "Open", "url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-30640", "threatCategory": "severe", "cwe": "116", "cvssVector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:H/A:N", "cvssVectorSource": "cve_cvss_3", "deeperData": {"identifier": "CVE-2021-30640", "vulnIds": ["CVE-2021-30640"], "vulnerabilityLink": "http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2021-30640", "source": {"shortName": "CVE", "longName": "National Vulnerability Database"}, "mainSeverity": {"source": "cve_cvss_3", "score": 6.5, "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:H/A:N"}, "severityScores": [{"source": "cve_cvss_2", "score": 5.8}, {"source": "sonatype_cvss_3", "score": 4.8}], "weakness": {"cweSource": "CVE", "cweIds": [{"id": "116", "uri": "https://cwe.mitre.org/data/definitions/116.html"}]}, "categories": ["data"], "description": "A vulnerability in the JNDI Realm of Apache Tomcat allows an attacker to authenticate using variations of a valid user name and/or to bypass some of the protection provided by the LockOut Realm. This issue affects Apache Tomcat 10.0.0-M1 to 10.0.5; 9.0.0.M1 to 9.0.45; 8.5.0 to 8.5.65.", "explanationMarkdown": "Apache Tomcat contains an Improper Authentication vulnerability. The `getUserByPattern`, `getUserBySearch`, and `getRoles` methods in `JNDIRealm.class` do not properly escape parameters when facilitating queries made by the JNDI Realm. An attacker can exploit this using maliciously crafted parameter values, or config data if being an administrator, to bypass authentication mechanisms and LockOut Realm protections.", "detectionMarkdown": "The application is vulnerable by using this component.", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue.\n\nNote: If this component is included as a bundled/transitive dependency of another component, there may not be an upgrade path. In this instance, we recommend contacting the maintainers who included the vulnerable package. Alternatively, we recommend investigating alternative components or a potential mitigating control.", "advisories": [{"referenceType": "PROJECT", "url": "https://bz.apache.org/bugzilla/show_bug.cgi?id=65224"}, {"referenceType": "PROJECT", "url": "https://lists.apache.org/thread.html/r59f9ef03929d32120f91f4ea7e6e79edd5688d75d0a9b65fd26d1fe8%40%3Cannounce.tomcat.apache.org%3E"}, {"referenceType": "PROJECT", "url": "https://tomcat.apache.org/security-10.html"}, {"referenceType": "PROJECT", "url": "https://tomcat.apache.org/security-7.html"}, {"referenceType": "PROJECT", "url": "https://tomcat.apache.org/security-8.html"}, {"referenceType": "PROJECT", "url": "https://tomcat.apache.org/security-9.html"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "cve", "reference": "CVE-2021-33037", "severity": 5.3, "status": "Open", "url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-33037", "threatCategory": "severe", "cwe": "444", "cvssVector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N", "cvssVectorSource": "cve_cvss_3", "deeperData": {"identifier": "CVE-2021-33037", "vulnIds": ["CVE-2021-33037"], "vulnerabilityLink": "http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2021-33037", "source": {"shortName": "CVE", "longName": "National Vulnerability Database"}, "mainSeverity": {"source": "cve_cvss_3", "score": 5.3, "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N"}, "severityScores": [{"source": "cve_cvss_2", "score": 5.0}, {"source": "sonatype_cvss_3", "score": 7.3}], "weakness": {"cweSource": "CVE", "cweIds": [{"id": "444", "uri": "https://cwe.mitre.org/data/definitions/444.html"}]}, "categories": ["data"], "description": "Apache Tomcat 10.0.0-M1 to 10.0.6, 9.0.0.M1 to 9.0.46 and 8.5.0 to 8.5.66 did not correctly parse the HTTP transfer-encoding request header in some circumstances leading to the possibility to request smuggling when used with a reverse proxy. Specifically: - Tomcat incorrectly ignored the transfer encoding header if the client declared it would only accept an HTTP/1.0 response; - Tomcat honoured the identify encoding; and - Tomcat did not ensure that, if present, the chunked encoding was the final encoding.", "explanationMarkdown": "The `tomcat-coyote` package is vulnerable to HTTP Request Smuggling attacks. The vulnerable methods and classes fail to properly validate HTTP requests with `Transfer-Encoding` header values when the specified client protocol version is `HTTP/1.0`. This allows attackers to smuggle data inside of HTTP requests when the protocol version is manually set by the client and the running `Tomcat` instance is sitting behind a reverse-proxy. This could result in unexpected behavior for web services utilizing `tomcat-coyote` and could potentially lead to Sensitive Information Disclosure, Data Corruption, or a Denial of Service (Dos) condition.\n\n*Vulnerable File(s) and Function(s)*:\n\norg/apache/coyote/http11/Http11Processor.class\n* addInputFilter()\n* prepareRequest()\n\norg/apache/coyote/http11/AbstractHttp11Processor.class\n* addInputFilter()\n* prepareRequest()\n\n*Advisory Deviation Notice:* The Sonatype security research team discovered that the vulnerability is present in all versions before 8.5.68, not just 8.5.0 until 8.5.68 as the advisory states.", "detectionMarkdown": "The application is vulnerable by using this component.", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue.\n\nNote: If this component is included as a bundled/transitive dependency of another component, there may not be an upgrade path. In this instance, we recommend contacting the maintainers who included the vulnerable package. Alternatively, we recommend investigating alternative components or a potential mitigating control.", "advisories": [{"referenceType": "EVIDENCE", "url": "https://tomcat.apache.org/security-10.html"}, {"referenceType": "EVIDENCE", "url": "https://tomcat.apache.org/security-8.html"}, {"referenceType": "EVIDENCE", "url": "https://tomcat.apache.org/security-9.html"}, {"referenceType": "PROJECT", "url": "https://lists.apache.org/thread.html/r612a79269b0d5e5780c62dfd34286a8037232fec0bc6f1a7e60c9381%40%3Cannounce.tomcat.apache.org%3E"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "cve", "reference": "CVE-2021-37136", "severity": 7.5, "status": "Open", "url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-37136", "threatCategory": "critical", "cwe": "400", "cvssVector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H", "cvssVectorSource": "cve_cvss_3", "deeperData": {"identifier": "CVE-2021-37136", "vulnIds": ["CVE-2021-37136"], "vulnerabilityLink": "http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2021-37136", "source": {"shortName": "CVE", "longName": "National Vulnerability Database"}, "mainSeverity": {"source": "cve_cvss_3", "score": 7.5, "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}, "severityScores": [{"source": "cve_cvss_2", "score": 5.0}, {"source": "sonatype_cvss_3", "score": 7.5}], "weakness": {"cweSource": "CVE", "cweIds": [{"id": "400", "uri": "https://cwe.mitre.org/data/definitions/400.html"}]}, "categories": ["data"], "description": "The Bzip2 decompression decoder function doesn't allow setting size restrictions on the decompressed output data (which affects the allocation size used during decompression). All users of Bzip2Decoder are affected. The malicious input can trigger an OOME and so a DoS attack", "explanationMarkdown": "The `netty-codec` package is vulnerable to Denial of Service (DoS). The classes and methods listed below do not properly check if the output generated upon decompressing a user-supplied file compressed with the `bzip2` format is within the allowed limit. A remote attacker can exploit this behavior by submitting a specially-crafted input encoded with the `bzip2` format to trigger an Out Of Memory Error (OOME), resulting in a DoS condition.\n\n*Vulnerable File(s) and Function(s)*:\n\nio/netty/handler/codec/compression/Bzip2BlockDecompressor.class\n* decodeHuffmanData()\n\nio/netty/handler/codec/compression/Bzip2Decoder.class\n* decode()", "detectionMarkdown": "The application is vulnerable by using this component.", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue.\n\nNote: If this component is included as a bundled/transitive dependency of another component, there may not be an upgrade path. In this instance, we recommend contacting the maintainers who included the vulnerable package. Alternatively, we recommend investigating alternative components or a potential mitigating control.", "advisories": [{"referenceType": "PROJECT", "url": "https://github.com/netty/netty/security/advisories/GHSA-grg4-wf29-r9vv"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "cve", "reference": "CVE-2021-37137", "severity": 7.5, "status": "Open", "url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-37137", "threatCategory": "critical", "cwe": "400", "cvssVector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H", "cvssVectorSource": "cve_cvss_3", "deeperData": {"identifier": "CVE-2021-37137", "vulnIds": ["CVE-2021-37137"], "vulnerabilityLink": "http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2021-37137", "source": {"shortName": "CVE", "longName": "National Vulnerability Database"}, "mainSeverity": {"source": "cve_cvss_3", "score": 7.5, "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}, "severityScores": [{"source": "cve_cvss_2", "score": 5.0}, {"source": "sonatype_cvss_3", "score": 5.3}], "weakness": {"cweSource": "CVE", "cweIds": [{"id": "400", "uri": "https://cwe.mitre.org/data/definitions/400.html"}]}, "categories": ["data"], "description": "The Snappy frame decoder function doesn't restrict the chunk length which may lead to excessive memory usage. Beside this it also may buffer reserved skippable chunks until the whole chunk was received which may lead to excessive memory usage as well. This vulnerability can be triggered by supplying malicious input that decompresses to a very big size (via a network stream or a file) or by sending a huge skippable chunk.", "explanationMarkdown": "The `netty-codec` package is vulnerable to Denial of Service (DoS). The `decode()` method in the `SnappyFrameDecoder` class does not properly validate the maximum allowed size of a chunk or handle skippable chunks correctly when decompressing user-supplied input compressed using the Snappy framing format. A remote attacker can exploit this behavior by supplying specially-crafted input containing a large skippable chunk or an input which decompressed to a large size. This will result in an Out Of Memory Error (OOME), ultimately leading to a DoS condition.", "detectionMarkdown": "The application is vulnerable by using this component.", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue.\n\nNote: If this component is included as a bundled/transitive dependency of another component, there may not be an upgrade path. In this instance, we recommend contacting the maintainers who included the vulnerable package. Alternatively, we recommend investigating alternative components or a potential mitigating control.", "advisories": [{"referenceType": "PROJECT", "url": "https://github.com/netty/netty/security/advisories/GHSA-9vjp-v76f-g363"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "cve", "reference": "CVE-2021-43797", "severity": 6.5, "status": "Open", "url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-43797", "threatCategory": "severe", "cwe": "444", "cvssVector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:N", "cvssVectorSource": "cve_cvss_3", "deeperData": {"identifier": "CVE-2021-43797", "vulnIds": ["CVE-2021-43797"], "vulnerabilityLink": "http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2021-43797", "source": {"shortName": "CVE", "longName": "National Vulnerability Database"}, "mainSeverity": {"source": "cve_cvss_3", "score": 6.5, "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:N"}, "severityScores": [{"source": "cve_cvss_2", "score": 4.3}, {"source": "sonatype_cvss_3", "score": 6.5}], "weakness": {"cweSource": "CVE", "cweIds": [{"id": "444", "uri": "https://cwe.mitre.org/data/definitions/444.html"}]}, "categories": ["data"], "description": "Netty is an asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers & clients. Netty prior to version 4.1.71.Final skips control chars when they are present at the beginning / end of the header name. It should instead fail fast as these are not allowed by the spec and could lead to HTTP request smuggling. Failing to do the validation might cause netty to \"sanitize\" header names before it forward these to another remote system when used as proxy. This remote system can't see the invalid usage anymore, and therefore does not do the validation itself. Users should upgrade to version 4.1.71.Final.", "explanationMarkdown": "The `netty-codec-http` package is vulnerable to HTTP Request Smuggling. The `validateHeaderNameElement()` methods in the `DefaultHttpHeaders` class and the `splitHeader()` method in the `HttpObjectDecoder` class fail to sanitize certain control characters present at the beginning or end of header names. Consequently, such requests may be assumed safe when forwarded to and processed by remote systems. A remote attacker can potentially exploit this behavior to smuggle additional requests by leveraging control characters within headers of requests processed by an affected Netty instance.", "detectionMarkdown": "The application is vulnerable by using this component.", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue.\n\nNote: If this component is included as a bundled/transitive dependency of another component, there may not be an upgrade path. In this instance, we recommend contacting the maintainers who included the vulnerable package. Alternatively, we recommend investigating alternative components or a potential mitigating control.", "advisories": [{"referenceType": "PROJECT", "url": "https://github.com/netty/netty/security/advisories/GHSA-wx5j-54mm-rqqq"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "cve", "reference": "CVE-2022-22950", "severity": 6.5, "status": "Open", "url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-22950", "threatCategory": "severe", "cwe": "770", "cvssVector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H", "cvssVectorSource": "cve_cvss_3", "deeperData": {"identifier": "CVE-2022-22950", "vulnIds": ["CVE-2022-22950"], "vulnerabilityLink": "http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2022-22950", "source": {"shortName": "CVE", "longName": "National Vulnerability Database"}, "mainSeverity": {"source": "cve_cvss_3", "score": 6.5, "vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"}, "severityScores": [{"source": "cve_cvss_2", "score": 4.0}, {"source": "sonatype_cvss_3", "score": 5.3}], "weakness": {"cweSource": "CVE", "cweIds": [{"id": "770", "uri": "https://cwe.mitre.org/data/definitions/770.html"}]}, "categories": ["data"], "description": "n Spring Framework versions 5.3.0 - 5.3.16 and older unsupported versions, it is possible for a user to provide a specially crafted SpEL expression that may cause a denial of service condition.", "explanationMarkdown": "The `spring-expression` package is vulnerable to a Denial of Service (DoS) attack. The `createArray()` method in the `ConstructorReference` class fails to limit the number of elements in arrays constructed from SpEL expressions. A remote attacker who can supply a SpEL expression can exploit this vulnerability to cause an `OutOfMemoryError` and ultimately a DoS condition.", "detectionMarkdown": "The application is vulnerable by using this component.", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue.\n\nNote: If this component is included as a bundled/transitive dependency of another component, there may not be an upgrade path. In this instance, we recommend contacting the maintainers who included the vulnerable package. Alternatively, we recommend investigating alternative components or a potential mitigating control.", "advisories": [{"referenceType": "PROJECT", "url": "https://github.com/spring-projects/spring-framework/issues/28145"}, {"referenceType": "PROJECT", "url": "https://spring.io/blog/2022/03/17/spring-framework-6-0-0-m3-and-5-3-17-available-now"}, {"referenceType": "PROJECT", "url": "https://tanzu.vmware.com/security/cve-2022-22950"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "cve", "reference": "CVE-2022-22965", "severity": 9.8, "status": "Open", "url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-22965", "threatCategory": "critical", "cwe": "94", "cvssVector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H", "cvssVectorSource": "cve_cvss_3", "deeperData": {"identifier": "CVE-2022-22965", "vulnIds": ["CVE-2022-22965"], "vulnerabilityLink": "http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2022-22965", "source": {"shortName": "CVE", "longName": "National Vulnerability Database"}, "mainSeverity": {"source": "cve_cvss_3", "score": 9.8, "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"}, "severityScores": [{"source": "cve_cvss_2", "score": 7.5}, {"source": "sonatype_cvss_3", "score": 9.8}], "weakness": {"cweSource": "CVE", "cweIds": [{"id": "94", "uri": "https://cwe.mitre.org/data/definitions/94.html"}]}, "categories": ["data"], "description": "A Spring MVC or Spring WebFlux application running on JDK 9+ may be vulnerable to remote code execution (RCE) via data binding. The specific exploit requires the application to run on Tomcat as a WAR deployment. If the application is deployed as a Spring Boot executable jar, i.e. the default, it is not vulnerable to the exploit. However, the nature of the vulnerability is more general, and there may be other ways to exploit it.", "explanationMarkdown": "The `spring-beans` package is vulnerable to Remote Code Execution (RCE). The constructor method in the `CachedIntrospectionResults` class allows the loading of arbitrary classes. A remote attacker can leverage this behaviour to modify the web server's logging properties via a ClassLoader allowing for the upload of a web shell, ultimately resulting in RCE. \nThis vulnerability is also known as `springshell` or `spring4shell` which affects `spring-beans` and not `spring-core` as earlier reports suggested. \n\n*Note:* This issue is due to an insufficient fix for CVE-2010-1622. \n\n*Note*: This issue has been assigned CVE-2022-22965 since we initially reported this vulnerability.", "detectionMarkdown": "[According to the Spring project](https://spring.io/blog/2022/03/31/spring-framework-rce-early-announcement), this vulnerability is exploitable if the following are true about your specific application using this component:\n- JDK >=9 is being used.\n- The application is deployed as a .war (as opposed to a Spring Boot executable jar)\n\nIt is important to note that these qualifications pertain specifically to the currently published exploits (as of 3/31/2022). Due to the nature of this vulnerability, it is possible that future exploits may be discovered, and it is highly recommended that the component be updated to a non-vulnerable version regardless of the application's environment.\n\nFor example, initially it appeared that only applications running on Tomcat were affected, but exploits have since been found that work for Payara Server (and likely also Glassfish, the codebase Payara is based on). Please refer to [https://blog.payara.fish/payara-and-spring4shell](https://blog.payara.fish/payara-and-spring4shell) for more detail.", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue. \n\nThe Spring project has [released guidance on applying a workaround](https://spring.io/blog/2022/03/31/spring-framework-rce-early-announcement) for those who are unable to upgrade.\n\nNote: If this component is included as a bundled/transitive dependency of another component, there may not be an upgrade path. In this instance, we recommend contacting the maintainers who included the vulnerable package. Alternatively, we recommend investigating alternative components or a potential mitigating control.", "advisories": [{"referenceType": "PROJECT", "url": "https://spring.io/blog/2022/03/31/spring-framework-rce-early-announcement"}, {"referenceType": "THIRD_PARTY", "url": "http://web.archive.org/web/20220330064100/https://twitter.com/shyest_sys/status/1509053689331335174"}, {"referenceType": "THIRD_PARTY", "url": "https://blog.sonatype.com/new-0-day-spring-framework-vulnerability-confirmed-patch-now"}, {"referenceType": "THIRD_PARTY", "url": "https://www.praetorian.com/blog/spring-core-jdk9-rce/"}, {"referenceType": "THIRD_PARTY", "url": "https://www.rapid7.com/blog/post/2022/03/30/spring4shell-zero-day-vulnerability-in-spring-framework/"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "cve", "reference": "CVE-2022-22968", "severity": 5.3, "status": "Open", "url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-22968", "threatCategory": "severe", "cwe": "178", "cvssVector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N", "cvssVectorSource": "cve_cvss_3", "deeperData": {"identifier": "CVE-2022-22968", "vulnIds": ["CVE-2022-22968"], "vulnerabilityLink": "http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2022-22968", "source": {"shortName": "CVE", "longName": "National Vulnerability Database"}, "mainSeverity": {"source": "cve_cvss_3", "score": 5.3, "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N"}, "severityScores": [{"source": "cve_cvss_2", "score": 5.0}, {"source": "sonatype_cvss_3", "score": 3.7}], "weakness": {"cweSource": "CVE", "cweIds": [{"id": "178", "uri": "https://cwe.mitre.org/data/definitions/178.html"}]}, "categories": ["data"], "description": "In Spring Framework versions 5.3.0 - 5.3.18, 5.2.0 - 5.2.20, and older unsupported versions, the patterns for disallowedFields on a DataBinder are case sensitive which means a field is not effectively protected unless it is listed with both upper and lower case for the first character of the field, including upper and lower case for the first character of all nested fields within the property path.", "explanationMarkdown": "The `spring-context` package is vulnerable to Improper Handling of Case Sensitivity. The `setDisallowedFields()` and `isAllowed()` methods in the `DataBinder` class fail to ensure that string comparisons during the data binding validation phase are case insensitive. Attackers with control over input fields used to bind data to object attributes have the ability to bypass disallowed fields. This may alter the expected functionality of the application. This also requires attackers to know the details of the `disallowedFields` deny list.", "detectionMarkdown": "The application is vulnerable by using this component. The project maintainers provide some additional information regarding the conditions for this to be exploitable:\n\n- Registration of disallowed field patterns in a DataBinder\n- `spring-webmvc` or `spring-webflux` dependency\n- The issue relates to data binding used to populate an object from request parameters (either query parameters or form data). Data binding is used for controller method parameters that are annotated with @ModelAttribute or optionally without it, and without any other Spring Web annotation.\n- The issue does not relate to @RequestBody controller method parameters (e.g. JSON deserialization). However, such methods may still be vulnerable if they have another method parameter populated via data binding from query parameters.\n- Your Spring MVC or Spring WebFlux application may be susceptible to data binding issues even if you do not register disallowed field patterns. We highly encourage you to review your DataBinder configuration and more broadly your approach to data binding. For more details, please see the new Data Binding Model Design section in the Spring Framework reference manual.\n\nReference: [https://spring.io/blog/2022/04/13/spring-framework-data-binding-rules-vulnerability-cve-2022-22968](https://spring.io/blog/2022/04/13/spring-framework-data-binding-rules-vulnerability-cve-2022-22968)", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue.\n\nNote: If this component is included as a bundled/transitive dependency of another component, there may not be an upgrade path. In this instance, we recommend contacting the maintainers who included the vulnerable package. Alternatively, we recommend investigating alternative components or a potential mitigating control. \n\nPotential Mitigation:\n```\nour recommended approach is to use a dedicated model object that exposes only properties that are relevant for the supported use case. Another alternative is to switch to allowed field patterns: instead of supplying a \"deny list\" via setDisallowedFields(), you can supply an explicit \"allow list\" via setAllowedFields() in a WebDataBinder.\n```\nReference: [https://spring.io/blog/2022/04/13/spring-framework-data-binding-rules-vulnerability-cve-2022-22968](https://spring.io/blog/2022/04/13/spring-framework-data-binding-rules-vulnerability-cve-2022-22968)", "advisories": [{"referenceType": "PROJECT", "url": "https://github.com/spring-projects/spring-framework/issues/28333"}, {"referenceType": "PROJECT", "url": "https://github.com/spring-projects/spring-framework/issues/28334"}, {"referenceType": "PROJECT", "url": "https://spring.io/blog/2022/04/13/spring-framework-data-binding-rules-vulnerability-cve-2022-22968"}, {"referenceType": "THIRD_PARTY", "url": "https://tanzu.vmware.com/security/cve-2022-22968"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "cve", "reference": "CVE-2022-22971", "severity": 6.5, "status": "Open", "url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-22971", "threatCategory": "severe", "cwe": "770", "cvssVector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H", "cvssVectorSource": "cve_cvss_3", "deeperData": {"identifier": "CVE-2022-22971", "vulnIds": ["CVE-2022-22971"], "vulnerabilityLink": "http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2022-22971", "source": {"shortName": "CVE", "longName": "National Vulnerability Database"}, "mainSeverity": {"source": "cve_cvss_3", "score": 6.5, "vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"}, "severityScores": [{"source": "cve_cvss_2", "score": 4.0}, {"source": "sonatype_cvss_3", "score": 6.5}], "weakness": {"cweSource": "CVE", "cweIds": [{"id": "770", "uri": "https://cwe.mitre.org/data/definitions/770.html"}]}, "categories": ["data"], "description": "In spring framework versions prior to 5.3.20+ , 5.2.22+ and old unsupported versions, application with a STOMP over WebSocket endpoint is vulnerable to a denial of service attack by an authenticated user.", "explanationMarkdown": "The `spring-messaging` package is vulnerable to a Denial of Service (DoS) attack. The `handleMessageInternal()` methods in the `SimpleBrokerMessageHandler` and `StompBrokerRelayMessageHandler` classes fail to account for CONNECT frames from users with existing sessions. An authenticated attacker can exploit this vulnerability to cause a DoS condition by issuing a CONNECT command via any of an affected application's STOMP over WebSocket endpoints.", "detectionMarkdown": "The application is vulnerable by using this component with STOMP over WebSocket endpoints.\n\nReference: [https://tanzu.vmware.com/security/cve-2022-22971](https://tanzu.vmware.com/security/cve-2022-22971)", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue.\n\nNote: If this component is included as a bundled/transitive dependency of another component, there may not be an upgrade path. In this instance, we recommend contacting the maintainers who included the vulnerable package. Alternatively, we recommend investigating alternative components or a potential mitigating control.", "advisories": [{"referenceType": "PROJECT", "url": "https://github.com/spring-projects/spring-framework/issues/28443"}, {"referenceType": "PROJECT", "url": "https://github.com/spring-projects/spring-framework/issues/28444"}, {"referenceType": "PROJECT", "url": "https://spring.io/blog/2022/05/11/spring-framework-5-3-20-and-5-2-22-available-now"}, {"referenceType": "PROJECT", "url": "https://tanzu.vmware.com/security/cve-2022-22971"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "cve", "reference": "CVE-2022-23913", "severity": 7.5, "status": "Open", "url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-23913", "threatCategory": "critical", "cwe": "400", "cvssVector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H", "cvssVectorSource": "cve_cvss_3", "deeperData": {"identifier": "CVE-2022-23913", "vulnIds": ["CVE-2022-23913"], "vulnerabilityLink": "http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2022-23913", "source": {"shortName": "CVE", "longName": "National Vulnerability Database"}, "mainSeverity": {"source": "cve_cvss_3", "score": 7.5, "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}, "severityScores": [{"source": "cve_cvss_2", "score": 5.0}, {"source": "sonatype_cvss_3", "score": 7.5}], "weakness": {"cweSource": "CVE", "cweIds": [{"id": "770", "uri": "https://cwe.mitre.org/data/definitions/770.html"}]}, "categories": ["data"], "description": "In Apache ActiveMQ Artemis prior to 2.20.0 or 2.19.1, an attacker could partially disrupt availability (DoS) through uncontrolled resource consumption of memory.", "explanationMarkdown": "The `artemis-core-client` is vulnerable to Uncontrolled Resource Consumption. The `decodeXid()` method in the `XidCodecSupport` class fails to validate the input buffer length while parsing messages that use the Xid Codec prior to reading the data. A remote attacker may craft a rogue message that causes the Java Virtual Machine to allocate a buffer larger than the maximum allowed size, causing an `OutOfMemory` exception resulting in a Denial of Service (DoS) condition to the `ActiveMQ Artemis Broker`.", "detectionMarkdown": "The application is vulnerable by using this component.", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue.\n\nNote: If this component is included as a bundled/transitive dependency of another component, there may not be an upgrade path. In this instance, we recommend contacting the maintainers who included the vulnerable package. Alternatively, we recommend investigating alternative components or a potential mitigating control.", "advisories": [{"referenceType": "PROJECT", "url": "https://github.com/apache/activemq-artemis/pull/3862"}, {"referenceType": "PROJECT", "url": "https://github.com/apache/activemq-artemis/pull/3871"}, {"referenceType": "PROJECT", "url": "https://issues.apache.org/jira/browse/ARTEMIS-3593"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "cve", "reference": "CVE-2022-25762", "severity": 8.6, "status": "Open", "url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-25762", "threatCategory": "critical", "cwe": "404", "cvssVector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:L/A:L", "cvssVectorSource": "cve_cvss_3", "deeperData": {"identifier": "CVE-2022-25762", "vulnIds": ["CVE-2022-25762"], "vulnerabilityLink": "http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2022-25762", "source": {"shortName": "CVE", "longName": "National Vulnerability Database"}, "mainSeverity": {"source": "cve_cvss_3", "score": 8.6, "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:L/A:L"}, "severityScores": [{"source": "cve_cvss_2", "score": 7.5}, {"source": "sonatype_cvss_3", "score": 8.6}], "weakness": {"cweSource": "CVE", "cweIds": [{"id": "404", "uri": "https://cwe.mitre.org/data/definitions/404.html"}]}, "categories": ["data", "operational"], "description": "If a web application sends a WebSocket message concurrently with the WebSocket connection closing when running on Apache Tomcat 8.5.0 to 8.5.75 or Apache Tomcat 9.0.0.M1 to 9.0.20, it is possible that the application will continue to use the socket after it has been closed. The error handling triggered in this case could cause the a pooled object to be placed in the pool twice. This could result in subsequent connections using the same object concurrently which could result in data being returned to the wrong use and/or other errors.", "explanationMarkdown": "The `tomcat-coyote` and `tomcat-embed-core` packages are vulnerable due to Improper Resource Shutdown or Release. The methods in the classes listed below do not properly handle cases where a WebSocket message is sent by an application at the same time as a WebSocket connection closing. This allows the web application to continue using a socket that has been closed and the pooled object to be duplicated due to improper error handling. A remote attacker can leverage this behavior to reuse the aforementioned object concurrently via subsequent requests to the affected application. This will result in otherwise restricted data being shared with the attacker or other unexpected behavior.\n\n*Vulnerable File(s) and Function(s)*:\n\n9.0.x range:\norg/apache/tomcat/util/net/NioChannel.class\n* close()\n\norg/apache/tomcat/util/net/NioEndpoint$NioSocketWrapper.class\n* fillReadBuffer()\n* doWrite()\n\n8.5.x range:\norg/apache/tomcat/util/net/NioChannel.class\n* reset()\n\norg/apache/tomcat/util/net/NioEndpoint.class\n* doCloseServerSocket()", "detectionMarkdown": "The application is vulnerable by using this component.", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue.\n\nNote: If this component is included as a bundled/transitive dependency of another component, there may not be an upgrade path. In this instance, we recommend contacting the maintainers who included the vulnerable package. Alternatively, we recommend investigating alternative components or a potential mitigating control.", "advisories": [{"referenceType": "PROJECT", "url": "https://lists.apache.org/thread/6ckmjfb1k61dyzkto9vm2k5jvt4o7w7c"}, {"referenceType": "PROJECT", "url": "https://tomcat.apache.org/security-8.html#Fixed_in_Apache_Tomcat_8.5.76"}, {"referenceType": "PROJECT", "url": "https://tomcat.apache.org/security-9.html#Fixed_in_Apache_Tomcat_9.0.21"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "cve", "reference": "CVE-2022-41915", "severity": 6.5, "status": "Open", "url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-41915", "threatCategory": "severe", "cwe": "113", "cvssVector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:N", "cvssVectorSource": "cve_cvss_3", "deeperData": {"identifier": "CVE-2022-41915", "vulnIds": ["CVE-2022-41915"], "vulnerabilityLink": "http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2022-41915", "source": {"shortName": "CVE", "longName": "National Vulnerability Database"}, "mainSeverity": {"source": "cve_cvss_3", "score": 6.5, "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:N"}, "severityScores": [{"source": "cve_cvss_2", "score": 0.0}, {"source": "sonatype_cvss_3", "score": 6.5}], "weakness": {"cweSource": "CVE", "cweIds": [{"id": "113", "uri": "https://cwe.mitre.org/data/definitions/113.html"}, {"id": "436", "uri": "https://cwe.mitre.org/data/definitions/436.html"}]}, "categories": ["data"], "description": "Netty project is an event-driven asynchronous network application framework. Starting in version 4.1.83.Final and prior to 4.1.86.Final, when calling `DefaultHttpHeadesr.set` with an _iterator_ of values, header value validation was not performed, allowing malicious header values in the iterator to perform HTTP Response Splitting. This issue has been patched in version 4.1.86.Final. Integrators can work around the issue by changing the `DefaultHttpHeaders.set(CharSequence, Iterator<?>)` call, into a `remove()` call, and call `add()` in a loop over the iterator of values.", "explanationMarkdown": "The `netty-codec` package is vulnerable to HTTP Response Splitting attacks. The `setObject()` methods in the `DefaultHeaders` class do not properly validate header values supplied via iterator arguments. A remote attacker can exploit this behavior by injecting arbitrary characters, such as Carriage Return (`\\r`) and Line Feed (`\\n`) (CRLF) into the header value of a request, allowing the attacker to control the body of a HTTP response.\n\n*Advisory Deviation Notice:*\n                        The Sonatype Security Research team discovered that the package affected by this vulnerability is `io.netty:netty-codec` instead of `io.netty.codec:codec-http` as stated in the advisory.", "detectionMarkdown": "The application is vulnerable by using this component if calling `DefaultHttpHeaders.set` with an iterator of values (as opposed to a single given value).\n\nReference: [https://github.com/netty/netty/security/advisories/GHSA-hh82-3pmq-7frp](https://github.com/netty/netty/security/advisories/GHSA-hh82-3pmq-7frp) ", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue.\n\n*Workaround:*\n>Integrators can work around the issue by changing the `DefaultHttpHeaders.set(CharSequence, Iterator<?>)` call, into a `remove()` call, and call `add()` in a loop over the iterator of values.\n\nReference: [https://github.com/netty/netty/security/advisories/GHSA-hh82-3pmq-7frp](https://github.com/netty/netty/security/advisories/GHSA-hh82-3pmq-7frp) \n\nNote: If this component is included as a bundled/transitive dependency of another component, there may not be an upgrade path. In this instance, we recommend contacting the maintainers who included the vulnerable package. Alternatively, we recommend investigating alternative components or a potential mitigating control.", "advisories": [{"referenceType": "PROJECT", "url": "https://github.com/netty/netty/security/advisories/GHSA-hh82-3pmq-7frp"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "cve", "reference": "CVE-2022-42252", "severity": 7.5, "status": "Open", "url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-42252", "threatCategory": "critical", "cwe": "444", "cvssVector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N", "cvssVectorSource": "cve_cvss_3", "deeperData": {"identifier": "CVE-2022-42252", "vulnIds": ["CVE-2022-42252"], "vulnerabilityLink": "http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2022-42252", "source": {"shortName": "CVE", "longName": "National Vulnerability Database"}, "mainSeverity": {"source": "cve_cvss_3", "score": 7.5, "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N"}, "severityScores": [{"source": "cve_cvss_2", "score": 0.0}, {"source": "sonatype_cvss_3", "score": 7.5}], "weakness": {"cweSource": "CVE", "cweIds": [{"id": "444", "uri": "https://cwe.mitre.org/data/definitions/444.html"}]}, "categories": ["data", "operational"], "description": "If Apache Tomcat 8.5.0 to 8.5.82, 9.0.0-M1 to 9.0.67, 10.0.0-M1 to 10.0.26 or 10.1.0-M1 to 10.1.0 was configured to ignore invalid HTTP headers via setting rejectIllegalHeader to false (the default for 8.5.x only), Tomcat did not reject a request containing an invalid Content-Length header making a request smuggling attack possible if Tomcat was located behind a reverse proxy that also failed to reject the request with the invalid header.", "explanationMarkdown": "The Apache `tomcat-coyote` package is vulnerable to HTTP Request Smuggling attacks. The `parseHeader()` and `skipLine()` methods in the `Http11InputBuffer` class fail to reject `Content-Length` headers containing Carriage Return and Line Feed (CRLF) characters when `rejectIllegalHeader` is disabled. A remote attacker can exploit this vulnerability to cause the server to process additional unexpected requests that may be leveraged to perform various other attacks.\n\n*Advisory Deviation Notice*: The Sonatype security research team discovered that this vulnerability was introduced in version 6.0.13 and not 8.5.0 as stated in the advisory.", "detectionMarkdown": "The application is vulnerable by using this component if configured to ignore malformed HTTP headers via `rejectIllegalHeader=false`. If Tomcat is running behind a reverse proxy, the reverse proxy must also ignore malformed headers in order to be vulnerable.\n\nReference: [https://github.com/advisories/GHSA-p22x-g9px-3945](https://github.com/advisories/GHSA-p22x-g9px-3945)\n\nDocumentation:\n[https://tomcat.apache.org/tomcat-10.1-doc/config/http.html#Standard_Implementation](https://tomcat.apache.org/tomcat-10.1-doc/config/http.html#Standard_Implementation)\n[https://tomcat.apache.org/tomcat-10.0-doc/config/http.html#Standard_Implementation](https://tomcat.apache.org/tomcat-10.0-doc/config/http.html#Standard_Implementation)\n[https://tomcat.apache.org/tomcat-9.0-doc/config/http.html#Standard_Implementation](https://tomcat.apache.org/tomcat-9.0-doc/config/http.html#Standard_Implementation)\n[https://tomcat.apache.org/tomcat-8.5-doc/config/http.html#Standard_Implementation](https://tomcat.apache.org/tomcat-8.5-doc/config/http.html#Standard_Implementation)", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue.\n\nNote: If this component is included as a bundled/transitive dependency of another component, there may not be an upgrade path. In this instance, we recommend contacting the maintainers who included the vulnerable package. Alternatively, we recommend investigating alternative components or a potential mitigating control.", "advisories": [{"referenceType": "PROJECT", "url": "https://lists.apache.org/thread/zzcxzvqfdqn515zfs3dxb7n8gty589sq"}, {"referenceType": "PROJECT", "url": "https://tomcat.apache.org/security-10.html"}, {"referenceType": "PROJECT", "url": "https://tomcat.apache.org/security-8.html"}, {"referenceType": "PROJECT", "url": "https://tomcat.apache.org/security-9.html"}, {"referenceType": "THIRD_PARTY", "url": "https://github.com/advisories/GHSA-p22x-g9px-3945"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "cve", "reference": "CVE-2023-20861", "severity": 6.5, "status": "Open", "url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-20861", "threatCategory": "severe", "cwe": "770", "cvssVector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H", "cvssVectorSource": "cve_cvss_3", "deeperData": {"identifier": "CVE-2023-20861", "vulnIds": ["CVE-2023-20861"], "vulnerabilityLink": "http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2023-20861", "source": {"shortName": "CVE", "longName": "National Vulnerability Database"}, "mainSeverity": {"source": "cve_cvss_3", "score": 6.5, "vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"}, "severityScores": [{"source": "cve_cvss_2", "score": 0.0}, {"source": "sonatype_cvss_3", "score": 5.3}], "weakness": {"cweSource": "CVE", "cweIds": [{"id": "noinfo", "uri": "https://cwe.mitre.org/data/definitions/noinfo.html"}]}, "categories": ["data", "operational"], "description": "In Spring Framework versions 6.0.0 - 6.0.6, 5.3.0 - 5.3.25, 5.2.0.RELEASE - 5.2.22.RELEASE, and older unsupported versions, it is possible for a user to provide a specially crafted SpEL expression that may cause a denial-of-service (DoS) condition.", "explanationMarkdown": "The `spring-expression` package is vulnerable to Denial of Service (DoS) attacks. The `getValueInternal()` methods in the `OperatorMatches` and `OpMultiply` classes fail to limit the input taken and results produced, respectively, by their SpEL operations. The `matches` operation does not restrict the length of user-supplied regular expressions,  while the `multiply` operation does not restrict its resulting text when provided with excessive repeats. A remote attacker who can supply crafted SpEL expressions can leverage these vulnerable operations to cause the application to exhaust its available system resources.", "detectionMarkdown": "The application is vulnerable by using this component.", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue.\n\nNote: If this component is included as a bundled/transitive dependency of another component, there may not be an upgrade path. In this instance, we recommend contacting the maintainers who included the vulnerable package. Alternatively, we recommend investigating alternative components or a potential mitigating control.", "advisories": [{"referenceType": "PROJECT", "url": "https://spring.io/blog/2023/03/20/spring-framework-5-2-23-fixes-cve-2023-20861"}, {"referenceType": "PROJECT", "url": "https://spring.io/security/cve-2023-20861"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "cve", "reference": "CVE-2023-20863", "severity": 6.5, "status": "Open", "url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-20863", "threatCategory": "severe", "cwe": "400", "cvssVector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H", "cvssVectorSource": "cve_cvss_3", "deeperData": {"identifier": "CVE-2023-20863", "vulnIds": ["CVE-2023-20863"], "vulnerabilityLink": "http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2023-20863", "source": {"shortName": "CVE", "longName": "National Vulnerability Database"}, "mainSeverity": {"source": "cve_cvss_3", "score": 6.5, "vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"}, "severityScores": [{"source": "cve_cvss_2", "score": 0.0}, {"source": "sonatype_cvss_3", "score": 7.5}], "weakness": {"cweSource": "CVE", "cweIds": [{"id": "917", "uri": "https://cwe.mitre.org/data/definitions/917.html"}]}, "categories": ["data", "operational"], "description": "In spring framework versions prior to 5.2.24 release+ ,5.3.27+ and 6.0.8+ , it is possible for a user to provide a specially crafted SpEL expression that may cause a denial-of-service (DoS) condition.", "explanationMarkdown": "The `spring-expression` package is vulnerable to Denial of Service (DoS) attacks. The `doParseExpression()` method in the `InternalSpelExpressionParser` class fails to limit the length of SpEL expressions before attempting to parse them. A remote attacker who can supply crafted SpEL expressions can leverage this behavior to cause the application to exhaust its available resources and ultimately induce a DoS condition.", "detectionMarkdown": "The application is vulnerable by using this component.", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue.\n\nNote: If this component is included as a bundled/transitive dependency of another component, there may not be an upgrade path. In this instance, we recommend contacting the maintainers who included the vulnerable package. Alternatively, we recommend investigating alternative components or a potential mitigating control.", "advisories": [{"referenceType": "PROJECT", "url": "https://github.com/spring-projects/spring-framework/issues/30325"}, {"referenceType": "PROJECT", "url": "https://spring.io/security/cve-2023-20863"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "cve", "reference": "CVE-2023-28708", "severity": 4.3, "status": "Open", "url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-28708", "threatCategory": "severe", "cwe": "200", "cvssVector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:L/I:N/A:N", "cvssVectorSource": "cve_cvss_3", "deeperData": {"identifier": "CVE-2023-28708", "vulnIds": ["CVE-2023-28708"], "vulnerabilityLink": "http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2023-28708", "source": {"shortName": "CVE", "longName": "National Vulnerability Database"}, "mainSeverity": {"source": "cve_cvss_3", "score": 4.3, "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:L/I:N/A:N"}, "severityScores": [{"source": "cve_cvss_2", "score": 0.0}, {"source": "sonatype_cvss_3", "score": 6.5}], "weakness": {"cweSource": "CVE", "cweIds": [{"id": "523", "uri": "https://cwe.mitre.org/data/definitions/523.html"}]}, "categories": ["data", "operational"], "description": "When using the RemoteIpFilter with requests received from a reverse proxy via HTTP that include the X-Forwarded-Proto header set to https, session cookies created by Apache Tomcat 11.0.0-M1 to 11.0.0.-M2, 10.1.0-M1 to 10.1.5, 9.0.0-M1 to 9.0.71 and 8.5.0 to 8.5.85 did not include the secure attribute. This could result in the user agent transmitting the session cookie over an insecure channel.", "explanationMarkdown": "The `tomcat-catalina` package is vulnerable to Information Disclosure. Multiple methods in multiple classes listed below fail to include the `secure` attribute in session cookies when the `RemoteIpFilter` filter is in use and requests are received from a reverse proxy (via HTTP) that have their `X-Forwarded-Proto` header set to `https`. As such, session cookies could be transmitted over an insecure channel, making it possible for an adversary to intercept them.\n\n**Advisory Deviation Notice:** Contrary to what the [advisory](https://lists.apache.org/thread/hdksc59z3s7tm39x0pp33mtwdrt8qr67) implies, the vulnerability may also impact all 7.x versions of Apache Tomcat, given the presence of vulnerable class files in these versions. Support for Apache Tomcat 7.x ended on 31st March 2021 and as such security advisories may not always provide information pertaining to 7.x versions.\n\n*Vulnerable File(s) and Function(s)*:\n\norg/apache/catalina/filters/RemoteIpFilter$XForwardedRequest.class\n- isSecure()\n- setSecure()\n\norg/apache/catalina/connector/Request.class\n\norg/apache/catalina/Globals.class", "detectionMarkdown": "The application is vulnerable by using this component when the `RemoteIpFilter` class is in use.", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue.\n**NOTE:** Support for Apache Tomcat 7.x ended on 31st March 2021. Future 7.x releases containing security fixes are unlikely and users should consider upgrading to later, non-vulnerable versions of the project.\n\nNote: If this component is included as a bundled/transitive dependency of another component, there may not be an upgrade path. In this instance, we recommend contacting the maintainers who included the vulnerable package. Alternatively, we recommend investigating alternative components or a potential mitigating control.", "advisories": [{"referenceType": "PROJECT", "url": "https://bz.apache.org/bugzilla/show_bug.cgi?id=66471"}, {"referenceType": "PROJECT", "url": "https://lists.apache.org/thread/hdksc59z3s7tm39x0pp33mtwdrt8qr67"}, {"referenceType": "PROJECT", "url": "https://tomcat.apache.org/security-10.html"}, {"referenceType": "PROJECT", "url": "https://tomcat.apache.org/security-11.html"}, {"referenceType": "PROJECT", "url": "https://tomcat.apache.org/security-8.html"}, {"referenceType": "PROJECT", "url": "https://tomcat.apache.org/security-9.html"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "sonatype", "reference": "sonatype-2017-0663", "severity": 4.8, "status": "Open", "url": "http://localhost:8070/ui/links/vln/sonatype-2017-0663", "threatCategory": "severe", "cwe": "300", "cvssVector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N", "cvssVectorSource": "sonatype_cvss_3", "deeperData": {"identifier": "sonatype-2017-0663", "vulnIds": ["sonatype-2017-0663"], "source": {"shortName": "Sonatype", "longName": "Sonatype Data Research"}, "mainSeverity": {"source": "sonatype_cvss_3", "score": 4.8, "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N"}, "severityScores": [{"source": "cve_cvss_2", "score": 0.0}], "weakness": {"cweSource": "Sonatype", "cweIds": [{"id": "300", "uri": "https://cwe.mitre.org/data/definitions/300.html"}]}, "categories": ["data"], "description": null, "explanationMarkdown": "The `jgroups` package is vulnerable to Man-in-the-Middle (MitM) attacks. The `connectToDestination` and `connect` methods in `StompConnection.class` do not properly configure an SSL socket instance upon its creation. This can lead to the HTTPS protocol being downgraded to HTTP and for an attacker to perform MitM attacks.", "detectionMarkdown": "The application is vulnerable by using this component.", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue.", "advisories": [{"referenceType": "PROJECT", "url": "https://github.com/belaban/JGroups/pull/348"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "sonatype", "reference": "sonatype-2020-0026", "severity": 6.5, "status": "Open", "url": "http://localhost:8070/ui/links/vln/sonatype-2020-0026", "threatCategory": "severe", "cwe": "300", "cvssVector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:L/A:N", "cvssVectorSource": "sonatype_cvss_3", "deeperData": {"identifier": "sonatype-2020-0026", "vulnIds": ["sonatype-2020-0026"], "source": {"shortName": "Sonatype", "longName": "Sonatype Data Research"}, "mainSeverity": {"source": "sonatype_cvss_3", "score": 6.5, "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:L/A:N"}, "severityScores": [{"source": "cve_cvss_2", "score": 0.0}], "weakness": {"cweSource": "Sonatype", "cweIds": [{"id": "300", "uri": "https://cwe.mitre.org/data/definitions/300.html"}]}, "categories": ["configuration", "data", "operational"], "description": null, "explanationMarkdown": "The `netty-handler` package is vulnerable to Improper Certificate Validation. The `newHandler` methods in `SslContext.class` do not verify hostnames by default when generating a new `SSLEngine`. An attacker can exploit this as part of a Man-in-the-Middle (MITM) attack to spoof their identity and gain access to or modify sensitive data.", "detectionMarkdown": "The application is vulnerable by using this component.\n\n*Note*: The developers of this project [consider this to be a user configuration issue](https://github.com/netty/netty/issues/9930#issuecomment-572578899) as opposed to a vulnerability in the component.", "recommendationMarkdown": "There is no non-vulnerable upgrade path for this component/package. We recommend investigating alternative components or a potential mitigating control. \n\nPer the vendor documentation, \"if you create SslHandler for the client side and want proper security, we advice that you configure the SSLEngine (see SSLParameters.setEndpointIdentificationAlgorithm(String)):\"\n\n ```\nSSLEngine sslEngine = sslHandler.engine();\n SSLParameters sslParameters = sslEngine.getSSLParameters();\n // only available since Java 7\n sslParameters.setEndpointIdentificationAlgorithm(\"HTTPS\");\n sslEngine.setSSLParameters(sslParameters);\n```\nReference: [https://netty.io/4.1/api/io/netty/handler/ssl/SslContext.html#newHandler-io.netty.buffer.ByteBufAllocator-java.util.concurrent.Executor-](https://netty.io/4.1/api/io/netty/handler/ssl/SslContext.html#newHandler-io.netty.buffer.ByteBufAllocator-java.util.concurrent.Executor-)", "advisories": [{"referenceType": "EVIDENCE", "url": "https://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLParameters.html#setEndpointIdentificationAlgorithm-java.lang.String-"}, {"referenceType": "PROJECT", "url": "https://github.com/netty/netty/issues/8537"}, {"referenceType": "PROJECT", "url": "https://github.com/netty/netty/issues/9930"}, {"referenceType": "PROJECT", "url": "https://netty.io/4.1/api/io/netty/handler/ssl/SslContext.html#newHandler-io.netty.buffer.ByteBufAllocator-java.util.concurrent.Executor-"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "sonatype", "reference": "sonatype-2020-0029", "severity": 7.5, "status": "Open", "url": "http://localhost:8070/ui/links/vln/sonatype-2020-0029", "threatCategory": "critical", "cwe": "789", "cvssVector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H", "cvssVectorSource": "sonatype_cvss_3", "deeperData": {"identifier": "sonatype-2020-0029", "vulnIds": ["sonatype-2020-0029", "CVE-2020-11612"], "source": {"shortName": "Sonatype", "longName": "Sonatype Data Research"}, "mainSeverity": {"source": "sonatype_cvss_3", "score": 7.5, "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}, "severityScores": [{"source": "cve_cvss_2", "score": 0.0}], "weakness": {"cweSource": "Sonatype", "cweIds": [{"id": "789", "uri": "https://cwe.mitre.org/data/definitions/789.html"}]}, "categories": ["data"], "description": null, "explanationMarkdown": "The `netty-codec` and `netty` packages are vulnerable to Denial of Service (DoS) attacks. The `decode` methods in `JdkZlibDecoder.class`, `JZlibDecoder.class`, `JZlibDecoder.class` and `ZlibDecoder.class` do not limit the eventual size of a compressed buffer after it is decompressed. Consequently, a malicious request can consume much more memory on a server than the size of the request would imply. An attacker can exploit this behavior by sending many such requests, resulting in a DoS situation.\n\n*Note*: CVE-2020-11612 has been assigned to this issue. \n\n*Advisory Deviation Notice:* The Sonatype security research team discovered that the vulnerability is present in all versions before 4.1.46.Final and versions 5.0.0.Alpha1 through 5.0.0.Alpha2, not just versions 4.1.x before 4.1.46 as the advisory states.", "detectionMarkdown": "The application is vulnerable by using this component.", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue.\n\nNote: If this component is included as a bundled/transitive dependency of another component, there may not be an upgrade path. In this instance, we recommend contacting the maintainers who included the vulnerable package. Alternatively, we recommend investigating alternative components or a potential mitigating control.", "advisories": [{"referenceType": "PROJECT", "url": "https://github.com/netty/netty/issues/9924"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "sonatype", "reference": "sonatype-2020-0103", "severity": 5.3, "status": "Open", "url": "http://localhost:8070/ui/links/vln/sonatype-2020-0103", "threatCategory": "severe", "cwe": "400", "cvssVector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L", "cvssVectorSource": "sonatype_cvss_3", "deeperData": {"identifier": "sonatype-2020-0103", "vulnIds": ["sonatype-2020-0103"], "source": {"shortName": "Sonatype", "longName": "Sonatype Data Research"}, "mainSeverity": {"source": "sonatype_cvss_3", "score": 5.3, "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L"}, "severityScores": [{"source": "cve_cvss_2", "score": 0.0}], "weakness": {"cweSource": "Sonatype", "cweIds": [{"id": "400", "uri": "https://cwe.mitre.org/data/definitions/400.html"}]}, "categories": ["data"], "description": null, "explanationMarkdown": "The `netty-codec-http` package is vulnerable to Denial of Service (DoS). The `decode` method in the `HttpObjectDecoder` class fails to limit the number of control characters being decoded from a packet header, allowing the library to parse HTTP headers beyond the maximum HTTP header size. An attacker may craft packets that cause intermittent hangs to a running netty service by including large blocks of control characters.\n", "detectionMarkdown": "The application is vulnerable by using this component.", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue.\n\nNote: If this component is included as a bundled/transitive dependency of another component, there may not be an upgrade path. In this instance, we recommend contacting the maintainers who included the vulnerable package. Alternatively, we recommend investigating alternative components or a potential mitigating control.", "advisories": [{"referenceType": "PROJECT", "url": "https://github.com/netty/netty/issues/10111"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "sonatype", "reference": "sonatype-2020-1031", "severity": 7.5, "status": "Open", "url": "http://localhost:8070/ui/links/vln/sonatype-2020-1031", "threatCategory": "critical", "cwe": "400", "cvssVector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H", "cvssVectorSource": "sonatype_cvss_3", "deeperData": {"identifier": "sonatype-2020-1031", "vulnIds": ["sonatype-2020-1031"], "source": {"shortName": "Sonatype", "longName": "Sonatype Data Research"}, "mainSeverity": {"source": "sonatype_cvss_3", "score": 7.5, "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}, "severityScores": [{"source": "cve_cvss_2", "score": 0.0}], "weakness": {"cweSource": "Sonatype", "cweIds": [{"id": "400", "uri": "https://cwe.mitre.org/data/definitions/400.html"}]}, "categories": ["data"], "description": null, "explanationMarkdown": "The `netty-codec-http` package is vulnerable to Denial of Service (DoS). The `delete()` and `tempFile()` methods in the  `AbstractDiskHttpData` class will create temporary files on disk when the `netty` HTTP server receives POST requests with bodies larger than 16k bytes. The server keeps the temporary files open and does not release the growing in-memory resources associated with the temporary files until the server is taken down, leading to memory leaks. A remote attacker may force a `netty` instance to service large POST requests and eventually cause the server to crash due to resource consumption.", "detectionMarkdown": "The application is vulnerable by using this component.", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue.\n\nNote: If this component is included as a bundled/transitive dependency of another component, there may not be an upgrade path. In this instance, we recommend contacting the maintainers who included the vulnerable package. Alternatively, we recommend investigating alternative components or a potential mitigating control.", "advisories": [{"referenceType": "PROJECT", "url": "https://github.com/netty/netty/issues/10351"}, {"referenceType": "PROJECT", "url": "https://github.com/netty/netty/pull/10560"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "sonatype", "reference": "sonatype-2021-0789", "severity": 8.4, "status": "Open", "url": "http://localhost:8070/ui/links/vln/sonatype-2021-0789", "threatCategory": "critical", "cwe": "119", "cvssVector": "CVSS:3.1/AV:L/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H", "cvssVectorSource": "sonatype_cvss_3", "deeperData": {"identifier": "sonatype-2021-0789", "vulnIds": ["sonatype-2021-0789"], "source": {"shortName": "Sonatype", "longName": "Sonatype Data Research"}, "mainSeverity": {"source": "sonatype_cvss_3", "score": 8.4, "vector": "CVSS:3.1/AV:L/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"}, "severityScores": [{"source": "cve_cvss_2", "score": 0.0}], "weakness": {"cweSource": "Sonatype", "cweIds": [{"id": "119", "uri": "https://cwe.mitre.org/data/definitions/119.html"}]}, "categories": ["data"], "description": null, "explanationMarkdown": "The `netty-codec` package contains a Buffer Overflow vulnerability. The `finishEncode` function in the `Lz4FrameEncoder.class` class incorrectly estimates the buffer size when writing a footer for the last header. An attacker could abuse this behavior by sending a payload to the flawed application that will overwrite contiguous memory chunks in the heap, resulting in a Denial of Service (DoS) condition or other unintended behavior.", "detectionMarkdown": "The application is vulnerable by using this component.", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue.\n\nNote: If this component is included as a bundled/transitive dependency of another component, there may not be an upgrade path. In this instance, we recommend contacting the maintainers who included the vulnerable package. Alternatively, we recommend investigating alternative components or a potential mitigating control.", "advisories": [{"referenceType": "PROJECT", "url": "https://github.com/netty/netty/pull/11429"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}, {"source": "sonatype", "reference": "sonatype-2022-1764", "severity": 9.8, "status": "Open", "url": "http://localhost:8070/ui/links/vln/sonatype-2022-1764", "threatCategory": "critical", "cwe": "470", "cvssVector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H", "cvssVectorSource": "sonatype_cvss_3", "deeperData": {"identifier": "sonatype-2022-1764", "vulnIds": ["sonatype-2022-1764"], "source": {"shortName": "Sonatype", "longName": "Sonatype Data Research"}, "mainSeverity": {"source": "sonatype_cvss_3", "score": 9.8, "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"}, "severityScores": [{"source": "cve_cvss_2", "score": 0.0}], "weakness": {"cweSource": "Sonatype", "cweIds": [{"id": "470", "uri": "https://cwe.mitre.org/data/definitions/470.html"}]}, "categories": ["data"], "description": null, "explanationMarkdown": "*NOTE:* This Sonatype issue is a duplicate of CVE-2022-22965, as Sonatype reported this issue before a CVE ID was officially released.\n\nThe `spring-beans` package is vulnerable to Remote Code Execution (RCE). The constructor method in the `CachedIntrospectionResults` class allows the loading of arbitrary classes. A remote attacker can leverage this behaviour to modify the web server's logging properties via a ClassLoader allowing for the upload of a web shell, ultimately resulting in RCE. \nThis vulnerability is also known as `springshell` or `spring4shell` which affects `spring-beans` and not `spring-core` as earlier reports suggested. \n\n*Note:* This issue is due to an insufficient fix for CVE-2010-1622. \n\n*Note*: This issue has been assigned CVE-2022-22965 since we initially reported this vulnerability.", "detectionMarkdown": "[According to the Spring project](https://spring.io/blog/2022/03/31/spring-framework-rce-early-announcement), this vulnerability is exploitable if the following are true about your specific application using this component:\n- JDK >=9 is being used.\n- The application is deployed as a .war (as opposed to a Spring Boot executable jar)\n\nIt is important to note that these qualifications pertain specifically to the currently published exploits (as of 3/31/2022). Due to the nature of this vulnerability, it is possible that future exploits may be discovered, and it is highly recommended that the component be updated to a non-vulnerable version regardless of the application's environment.\n\nFor example, initially it appeared that only applications running on Tomcat were affected, but exploits have since been found that work for Payara Server (and likely also Glassfish, the codebase Payara is based on). Please refer to [https://blog.payara.fish/payara-and-spring4shell](https://blog.payara.fish/payara-and-spring4shell) for more detail.", "recommendationMarkdown": "We recommend upgrading to a version of this component that is not vulnerable to this specific issue. \n\nThe Spring project has [released guidance on applying a workaround](https://spring.io/blog/2022/03/31/spring-framework-rce-early-announcement) for those who are unable to upgrade.\n\nNote: If this component is included as a bundled/transitive dependency of another component, there may not be an upgrade path. In this instance, we recommend contacting the maintainers who included the vulnerable package. Alternatively, we recommend investigating alternative components or a potential mitigating control.", "advisories": [{"referenceType": "PROJECT", "url": "https://spring.io/blog/2022/03/31/spring-framework-rce-early-announcement"}, {"referenceType": "THIRD_PARTY", "url": "http://web.archive.org/web/20220330064100/https://twitter.com/shyest_sys/status/1509053689331335174"}, {"referenceType": "THIRD_PARTY", "url": "https://blog.sonatype.com/new-0-day-spring-framework-vulnerability-confirmed-patch-now"}, {"referenceType": "THIRD_PARTY", "url": "https://www.praetorian.com/blog/spring-core-jdk9-rce/"}, {"referenceType": "THIRD_PARTY", "url": "https://www.rapid7.com/blog/post/2022/03/30/spring4shell-zero-day-vulnerability-in-spring-framework/"}], "researchType": "DEEP_DIVE", "isAdvancedVulnerabilityDetection": false}}]}, "remediation": {"versionChanges": [{"type": "next-non-failing", "data": {"component": {"packageUrl": "pkg:maven/org.apache.activemq.examples.modules/artemis-tomcat-jndi-resources-sample@2.11.0?classifier=exec-war&type=jar", "hash": null, "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "artemis-tomcat-jndi-resources-sample", "classifier": "exec-war", "extension": "jar", "groupId": "org.apache.activemq.examples.modules", "version": "2.11.0"}}, "displayName": "org.apache.activemq.examples.modules : artemis-tomcat-jndi-resources-sample : jar : exec-war : 2.11.0"}}}, {"type": "next-non-failing-with-dependencies", "data": {"component": {"packageUrl": "pkg:maven/org.apache.activemq.examples.modules/artemis-tomcat-jndi-resources-sample@2.11.0?classifier=exec-war&type=jar", "hash": null, "componentIdentifier": {"format": "maven", "coordinates": {"artifactId": "artemis-tomcat-jndi-resources-sample", "classifier": "exec-war", "extension": "jar", "groupId": "org.apache.activemq.examples.modules", "version": "2.11.0"}}, "displayName": "org.apache.activemq.examples.modules : artemis-tomcat-jndi-resources-sample : jar : exec-war : 2.11.0"}}}]}}, {"packageUrl": null, "hash": "ec06615a223186891741", "componentIdentifier": null, "displayName": "WebGoat.war, WebGoatLegacy-6.0.1.war", "proprietary": false, "matchState": "unknown", "pathnames": ["./target/WebGoatLegacy-6.0.1-war-exec.jar/WebGoat.war", "./target/WebGoatLegacy-6.0.1.war"], "identificationSource": "Sonatype", "licenseData": null, "securityData": null, "remediation": "One of either componentIdentifier or packageUrl must be supplied. Usually this is a proprietary component."}, {"packageUrl": null, "hash": "6d0684d8acf85cd6e7f2", "componentIdentifier": null, "displayName": "RegexMatch.dll", "proprietary": false, "matchState": "unknown", "pathnames": ["./src/main/java/org/owasp/webgoat/lessons/instructor/DBCrossSiteScripting/RegexMatch.dll", "./target/WebGoatLegacy-6.0.1-war-exec.jar/WebGoat.war/WEB-INF/classes/org/owasp/webgoat/lessons/instructor/DBCrossSiteScripting/RegexMatch.dll", "./target/WebGoatLegacy-6.0.1/WEB-INF/classes/org/owasp/webgoat/lessons/instructor/DBCrossSiteScripting/RegexMatch.dll", "./target/classes/org/owasp/webgoat/lessons/instructor/DBCrossSiteScripting/RegexMatch.dll"], "identificationSource": "Sonatype", "licenseData": null, "securityData": null, "remediation": "One of either componentIdentifier or packageUrl must be supplied. Usually this is a proprietary component."}, {"packageUrl": null, "hash": "c469533a6ea77f5da5bb", "componentIdentifier": null, "displayName": "Eclipse-Workspace.zip", "proprietary": false, "matchState": "unknown", "pathnames": ["./doc/attic/Eclipse-Workspace.zip"], "identificationSource": "Sonatype", "licenseData": null, "securityData": null, "remediation": "One of either componentIdentifier or packageUrl must be supplied. Usually this is a proprietary component."}]