Summary,Severity,Type,Watch-Name,Violated Resources,Component,Created,policy
"Versions of the npm CLI prior to 6.14.6 are vulnerable to an information exposure vulnerability through log files. The CLI supports URLs like ""<protocol>://[<user>[:<password>]@]<hostname>[:<port>][:][/]<path>"". The password value is not redacted and is printed to stdout and also to any generated log files.",Medium,security,everything,all-repos,npm://npm:3.10.10,2022-12-28T16:04:02-05:00,1 | Security-All
Prototype pollution attack when using _.zipObjectDeep in lodash before 4.17.20.,High,security,everything,all-repos,npm://lodash:4.17.19,2022-12-28T16:04:03-05:00,1 | Security-All
Prototype pollution attack when using _.zipObjectDeep in lodash before 4.17.20.,High,security,everything,all-repos,npm://lodash:4.17.15,2022-12-28T16:04:03-05:00,1 | Security-All
Prototype pollution attack when using _.zipObjectDeep in lodash before 4.17.20.,High,security,everything,all-repos,npm://lodash:4.13.1,2022-12-28T16:04:03-05:00,1 | Security-All
Prototype pollution attack when using _.zipObjectDeep in lodash before 4.17.20.,High,security,everything,all-repos,npm://lodash:2.4.2,2022-12-28T16:04:03-05:00,1 | Security-All
is-my-json-valid Package for Node.js index.js formatName() Function Schema Handling Arbitrary Code Execution,High,security,everything,all-repos,npm://is-my-json-valid:2.15.0,2022-12-28T16:04:03-05:00,1 | Security-All
is-my-json-valid Package for Node.js formats.js JSON Field style Format Improper Regular Expression DoS,Medium,security,everything,all-repos,npm://is-my-json-valid:2.15.0,2022-12-28T16:04:03-05:00,1 | Security-All
Lodash Package for Node.js lodash.js baseSet() Function Prototype Pollution DoS,High,security,everything,all-repos,npm://lodash:4.17.15,2022-12-28T16:04:03-05:00,1 | Security-All
Lodash Package for Node.js lodash.js baseSet() Function Prototype Pollution DoS,High,security,everything,all-repos,npm://lodash:4.13.1,2022-12-28T16:04:03-05:00,1 | Security-All
"A buffer over-read vulnerability exists in bl <4.0.3, <3.0.1, <2.2.1, and <1.2.3 which could allow an attacker to supply user input (even typed) that if it ends up in consume() argument and can become negative, the BufferList state can be corrupted, tricking it into exposing uninitialized memory via regular .slice() calls.",Medium,security,everything,all-repos,npm://bl:1.1.2,2022-12-28T16:04:02-05:00,1 | Security-All
"A buffer over-read vulnerability exists in bl <4.0.3, <3.0.1, <2.2.1, and <1.2.3 which could allow an attacker to supply user input (even typed) that if it ends up in consume() argument and can become negative, the BufferList state can be corrupted, tricking it into exposing uninitialized memory via regular .slice() calls.",Medium,security,everything,all-repos,npm://bl:1.0.3,2022-12-28T16:04:02-05:00,1 | Security-All
A TOCTOU issue in the chownr package before 1.1.0 for Node.js 10.10 could allow a local attacker to trick it into descending into unintended directories via symlink attacks.,Low,security,everything,all-repos,npm://chownr:1.0.1,2022-12-28T16:04:02-05:00,1 | Security-All
Handlebars before 4.4.5 allows Regular Expression Denial of Service (ReDoS) because of eager matching. The parser may be forced into an endless loop while processing crafted templates. This may allow attackers to exhaust system resources.,High,security,everything,all-repos,npm://handlebars:4.0.5,2022-12-28T16:04:03-05:00,1 | Security-All
"Handlebars before 3.0.8 and 4.x before 4.5.3 is vulnerable to Arbitrary Code Execution. The lookup helper fails to properly validate templates, allowing attackers to submit templates that execute arbitrary JavaScript. This can be used to run arbitrary code on a server processing Handlebars templates or in a victim's browser (effectively serving as XSS).",High,security,everything,all-repos,npm://handlebars:4.0.5,2022-12-28T16:04:02-05:00,1 | Security-All
This affects the package npm-user-validate before 1.0.1. The regex that validates user emails took exponentially longer to process long input strings beginning with @ characters.,High,security,everything,all-repos,npm://npm-user-validate:0.1.5,2022-12-28T16:04:01-05:00,1 | Security-All
"The package y18n before 3.2.2, 4.0.1 and 5.0.5, is vulnerable to Prototype Pollution.",Critical,security,everything,all-repos,npm://y18n:3.2.1,2022-12-28T16:04:03-05:00,1 | Security-All
Versions less than 0.0.6 of the Node.js stringstream module are vulnerable to an out-of-bounds read because of allocation of uninitialized buffers when a number is passed in the input stream (when using Node.js 4.x).,Medium,security,everything,all-repos,npm://stringstream:0.0.5,2022-12-28T16:04:03-05:00,1 | Security-All
"This affects the package ini before 1.3.6. If an attacker submits a malicious INI file to an application that parses it with ini.parse, they will pollute the prototype on the application. This can be exploited further depending on the context.",Critical,security,everything,all-repos,npm://ini:1.3.4,2022-12-28T16:04:02-05:00,1 | Security-All
"Lodash versions prior to 4.17.21 are vulnerable to Regular Expression Denial of Service (ReDoS) via the toNumber, trim and trimEnd functions.",Medium,security,everything,all-repos,npm://lodash:4.13.1,2022-12-28T16:04:02-05:00,1 | Security-All
"Lodash versions prior to 4.17.21 are vulnerable to Regular Expression Denial of Service (ReDoS) via the toNumber, trim and trimEnd functions.",Medium,security,everything,all-repos,npm://lodash:2.4.2,2022-12-28T16:04:02-05:00,1 | Security-All
"Lodash versions prior to 4.17.21 are vulnerable to Regular Expression Denial of Service (ReDoS) via the toNumber, trim and trimEnd functions.",Medium,security,everything,all-repos,npm://lodash:4.17.19,2022-12-28T16:04:02-05:00,1 | Security-All
"Lodash versions prior to 4.17.21 are vulnerable to Regular Expression Denial of Service (ReDoS) via the toNumber, trim and trimEnd functions.",Medium,security,everything,all-repos,npm://lodash:4.17.15,2022-12-28T16:04:02-05:00,1 | Security-All
Lodash versions prior to 4.17.21 are vulnerable to Command Injection via the template function.,High,security,everything,all-repos,npm://lodash:4.17.19,2022-12-28T16:04:02-05:00,1 | Security-All
Lodash versions prior to 4.17.21 are vulnerable to Command Injection via the template function.,High,security,everything,all-repos,npm://lodash:4.17.15,2022-12-28T16:04:02-05:00,1 | Security-All
Lodash versions prior to 4.17.21 are vulnerable to Command Injection via the template function.,High,security,everything,all-repos,npm://lodash:4.13.1,2022-12-28T16:04:02-05:00,1 | Security-All
Lodash versions prior to 4.17.21 are vulnerable to Command Injection via the template function.,High,security,everything,all-repos,npm://lodash:2.4.2,2022-12-28T16:04:02-05:00,1 | Security-All
The package hosted-git-info before 3.0.8 are vulnerable to Regular Expression Denial of Service (ReDoS) via regular expression shortcutMatch in the fromUrl function in index.js. The affected regular expression exhibits polynomial worst-case time complexity.,Medium,security,everything,all-repos,npm://hosted-git-info:2.1.5,2022-12-28T16:04:03-05:00,1 | Security-All
"The package underscore from 1.13.0-0 and before 1.13.0-2, from 1.3.2 and before 1.12.1 are vulnerable to Arbitrary Code Injection via the template function, particularly when a variable property is passed as an argument as it is not sanitized.",High,security,everything,all-repos,npm://underscore:1.8.3,2022-12-28T16:04:02-05:00,1 | Security-All
"The package underscore from 1.13.0-0 and before 1.13.0-2, from 1.3.2 and before 1.12.1 are vulnerable to Arbitrary Code Injection via the template function, particularly when a variable property is passed as an argument as it is not sanitized.",High,security,everything,all-repos,npm://underscore:1.5.1,2022-12-28T16:04:02-05:00,1 | Security-All
"The package underscore from 1.13.0-0 and before 1.13.0-2, from 1.3.2 and before 1.12.1 are vulnerable to Arbitrary Code Injection via the template function, particularly when a variable property is passed as an argument as it is not sanitized.",High,security,everything,all-repos,npm://underscore:1.3.3,2022-12-28T16:04:02-05:00,1 | Security-All
A vulnerability was found in Braces versions prior to 2.3.1. Affected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) attacks.,Medium,security,everything,all-repos,npm://braces:1.8.5,2022-12-28T16:04:02-05:00,1 | Security-All
It was discovered that the is-my-json-valid JavaScript library used an inefficient regular expression to validate JSON fields defined to have email format. A specially crafted JSON file could cause it to consume an excessive amount of CPU time when validated.,Medium,security,everything,all-repos,npm://is-my-json-valid:2.15.0,2022-12-28T16:04:03-05:00,1 | Security-All
The package handlebars before 4.7.7 are vulnerable to Remote Code Execution (RCE) when selecting certain compiling options to compile templates coming from an untrusted source.,Critical,security,everything,all-repos,npm://handlebars:4.0.5,2022-12-28T16:04:02-05:00,1 | Security-All
"All versions of package path-parse are vulnerable to Regular Expression Denial of Service (ReDoS) via splitDeviceRe, splitTailRe, and splitPathRe regular expressions. ReDoS exhibits polynomial worst-case time complexity.",High,security,everything,all-repos,npm://path-parse:1.0.5,2022-12-28T16:04:02-05:00,1 | Security-All
Cypress packages/server/lib/gui/windows.ts webPreferences Missing Context Isolation Test Handling Stored XSS,Medium,security,everything,all-repos,npm://cypress:3.8.3,2022-12-28T16:04:03-05:00,1 | Security-All
The package handlebars before 4.7.7 are vulnerable to Prototype Pollution when selecting certain compiling options to compile templates coming from an untrusted source.,Critical,security,everything,all-repos,npm://handlebars:4.0.5,2022-12-28T16:04:02-05:00,1 | Security-All
The trim-newlines package before 3.0.1 and 4.x before 4.0.1 for Node.js has an issue related to regular expression denial-of-service (ReDoS) for the .end() method.,High,security,everything,all-repos,npm://trim-newlines:1.0.0,2022-12-28T16:04:02-05:00,1 | Security-All
This affects the package glob-parent before 5.1.2. The enclosure regex used to check for strings ending in enclosure containing path separator.,High,security,everything,all-repos,npm://glob-parent:3.1.0,2022-12-28T16:04:03-05:00,1 | Security-All
This affects the package glob-parent before 5.1.2. The enclosure regex used to check for strings ending in enclosure containing path separator.,High,security,everything,all-repos,npm://glob-parent:2.0.0,2022-12-28T16:04:03-05:00,1 | Security-All
"The npm package ""tar"" (aka node-tar) before versions 6.1.1, 5.0.6, 4.4.14, and 3.3.2 has a arbitrary File Creation/Overwrite vulnerability due to insufficient absolute path sanitization. node-tar aims to prevent extraction of absolute file paths by turning absolute paths into relative paths when the `preservePaths` flag is not set to `true`. This is achieved by stripping the absolute path root from any absolute file paths contained in a tar file. For example `/home/user/.bashrc` would turn into `home/user/.bashrc`. This logic was insufficient when file paths contained repeated path roots such as `////home/user/.bashrc`. `node-tar` would only strip a single path root from such paths. When given an absolute file path with repeating path roots, the resulting path (e.g. `///home/user/.bashrc`) would still resolve to an absolute path, thus allowing arbitrary file creation and overwrite. This issue was addressed in releases 3.2.2, 4.4.14, 5.0.6 and 6.1.1. Users may work around this vulnerability without upgrading by creating a custom `onentry` method which sanitizes the `entry.path` or a `filter` method which removes entries with absolute paths. See referenced GitHub Advisory for details. Be aware of CVE-2021-32803 which fixes a similar bug in later versions of tar.",High,security,everything,all-repos,npm://tar:2.2.1,2022-12-28T16:04:02-05:00,1 | Security-All
"The npm package ""tar"" (aka node-tar) before versions 6.1.2, 5.0.7, 4.4.15, and 3.2.3 has an arbitrary File Creation/Overwrite vulnerability via insufficient symlink protection. `node-tar` aims to guarantee that any file whose location would be modified by a symbolic link is not extracted. This is, in part, achieved by ensuring that extracted directories are not symlinks. Additionally, in order to prevent unnecessary `stat` calls to determine whether a given path is a directory, paths are cached when directories are created. This logic was insufficient when extracting tar files that contained both a directory and a symlink with the same name as the directory. This order of operations resulted in the directory being created and added to the `node-tar` directory cache. When a directory is present in the directory cache, subsequent calls to mkdir for that directory are skipped. However, this is also where `node-tar` checks for symlinks occur. By first creating a directory, and then replacing that directory with a symlink, it was thus possible to bypass `node-tar` symlink checks on directories, essentially allowing an untrusted tar file to symlink into an arbitrary location and subsequently extracting arbitrary files into that location, thus allowing arbitrary file creation and overwrite. This issue was addressed in releases 3.2.3, 4.4.15, 5.0.7 and 6.1.2.",High,security,everything,all-repos,npm://tar:2.2.1,2022-12-28T16:04:02-05:00,1 | Security-All
"The npm package ""tar"" (aka node-tar) before versions 4.4.18, 5.0.10, and 6.1.9 has an arbitrary file creation/overwrite and arbitrary code execution vulnerability. node-tar aims to guarantee that any file whose location would be outside of the extraction target directory is not extracted. This is, in part, accomplished by sanitizing absolute paths of entries within the archive, skipping archive entries that contain `..` path portions, and resolving the sanitized paths against the extraction target directory. This logic was insufficient on Windows systems when extracting tar files that contained a path that was not an absolute path, but specified a drive letter different from the extraction target, such as `C:some\path`. If the drive letter does not match the extraction target, for example `D:\extraction\dir`, then the result of `path.resolve(extractionDirectory, entryPath)` would resolve against the current working directory on the `C:` drive, rather than the extraction target directory. Additionally, a `..` portion of the path could occur immediately after the drive letter, such as `C:../foo`, and was not properly sanitized by the logic that checked for `..` within the normalized and split portions of the path. This only affects users of `node-tar` on Windows systems. These issues were addressed in releases 4.4.18, 5.0.10 and 6.1.9. The v3 branch of node-tar has been deprecated and did not receive patches for these issues. If you are still using a v3 release we recommend you update to a more recent version of node-tar. There is no reasonable way to work around this issue without performing the same path normalization procedures that node-tar now does. Users are encouraged to upgrade to the latest patched versions of node-tar, rather than attempt to sanitize paths themselves.",High,security,everything,all-repos,npm://tar:2.2.1,2022-12-28T16:04:03-05:00,1 | Security-All
"The npm package ""tar"" (aka node-tar) before versions 4.4.18, 5.0.10, and 6.1.9 has an arbitrary file creation/overwrite and arbitrary code execution vulnerability. node-tar aims to guarantee that any file whose location would be modified by a symbolic link is not extracted. This is, in part, achieved by ensuring that extracted directories are not symlinks. Additionally, in order to prevent unnecessary stat calls to determine whether a given path is a directory, paths are cached when directories are created. This logic was insufficient when extracting tar files that contained both a directory and a symlink with names containing unicode values that normalized to the same value. Additionally, on Windows systems, long path portions would resolve to the same file system entities as their 8.3 ""short path"" counterparts. A specially crafted tar archive could thus include a directory with one form of the path, followed by a symbolic link with a different string that resolves to the same file system entity, followed by a file using the first form. By first creating a directory, and then replacing that directory with a symlink that had a different apparent name that resolved to the same entry in the filesystem, it was thus possible to bypass node-tar symlink checks on directories, essentially allowing an untrusted tar file to symlink into an arbitrary location and subsequently extracting arbitrary files into that location, thus allowing arbitrary file creation and overwrite. These issues were addressed in releases 4.4.18, 5.0.10 and 6.1.9. The v3 branch of node-tar has been deprecated and did not receive patches for these issues. If you are still using a v3 release we recommend you update to a more recent version of node-tar. If this is not possible, a workaround is available in the referenced GHSA-qq89-hq3f-393p.",High,security,everything,all-repos,npm://tar:2.2.1,2022-12-28T16:04:02-05:00,1 | Security-All
"The npm package ""tar"" (aka node-tar) before versions 4.4.16, 5.0.8, and 6.1.7 has an arbitrary file creation/overwrite and arbitrary code execution vulnerability. node-tar aims to guarantee that any file whose location would be modified by a symbolic link is not extracted. This is, in part, achieved by ensuring that extracted directories are not symlinks. Additionally, in order to prevent unnecessary stat calls to determine whether a given path is a directory, paths are cached when directories are created. This logic was insufficient when extracting tar files that contained both a directory and a symlink with the same name as the directory, where the symlink and directory names in the archive entry used backslashes as a path separator on posix systems. The cache checking logic used both `\` and `/` characters as path separators, however `\` is a valid filename character on posix systems. By first creating a directory, and then replacing that directory with a symlink, it was thus possible to bypass node-tar symlink checks on directories, essentially allowing an untrusted tar file to symlink into an arbitrary location and subsequently extracting arbitrary files into that location, thus allowing arbitrary file creation and overwrite. Additionally, a similar confusion could arise on case-insensitive filesystems. If a tar archive contained a directory at `FOO`, followed by a symbolic link named `foo`, then on case-insensitive file systems, the creation of the symbolic link would remove the directory from the filesystem, but _not_ from the internal directory cache, as it would not be treated as a cache hit. A subsequent file entry within the `FOO` directory would then be placed in the target of the symbolic link, thinking that the directory had already been created. These issues were addressed in releases 4.4.16, 5.0.8 and 6.1.7. The v3 branch of node-tar has been deprecated and did not receive patches for these issues. If you are still using a v3 release we recommend you update to a more recent version of node-tar. I",High,security,everything,all-repos,npm://tar:2.2.1,2022-12-28T16:04:01-05:00,1 | Security-All
JS-YAML Package for Node.js lib/loader.js readAlias() Function YAML Anchor Handling Arbitrary Code Execution,Medium,security,everything,all-repos,npm://js-yaml:3.6.1,2022-12-28T16:04:02-05:00,1 | Security-All
This affects the package jsonpointer before 5.0.0. A type confusion vulnerability can lead to a bypass of a previous Prototype Pollution fix when the pointer components are arrays.,Critical,security,everything,all-repos,npm://jsonpointer:4.0.0,2022-12-28T16:04:03-05:00,1 | Security-All
shelljs is vulnerable to Improper Privilege Management,High,security,everything,all-repos,npm://shelljs:0.3.0,2022-12-28T16:04:01-05:00,1 | Security-All
"Marked is a markdown parser and compiler. Prior to version 4.0.10, the regular expression `block.def` may cause catastrophic backtracking against some strings and lead to a regular expression denial of service (ReDoS). Anyone who runs untrusted markdown through a vulnerable version of marked and does not use a worker with a time limit may be affected. This issue is patched in version 4.0.10. As a workaround, avoid running untrusted markdown through marked or run marked on a worker thread and set a reasonable time limit to prevent draining resources.",High,security,everything,all-repos,npm://marked:0.3.9,2022-12-28T16:04:03-05:00,1 | Security-All
"Marked is a markdown parser and compiler. Prior to version 4.0.10, the regular expression `inline.reflinkSearch` may cause catastrophic backtracking against some strings and lead to a denial of service (DoS). Anyone who runs untrusted markdown through a vulnerable version of marked and does not use a worker with a time limit may be affected. This issue is patched in version 4.0.10. As a workaround, avoid running untrusted markdown through marked or run marked on a worker thread and set a reasonable time limit to prevent draining resources.",High,security,everything,all-repos,npm://marked:0.3.9,2022-12-28T16:04:02-05:00,1 | Security-All
unset-value Package for Node.js index.js unset() Function Prototype Pollution Arbitrary Code Execution,Critical,security,everything,all-repos,npm://unset-value:1.0.0,2022-12-28T16:04:02-05:00,1 | Security-All
Commander.js Package for Node.js index.js parse() Function Argument Parsing Arbitrary Code Execution Weakness,Unknown,security,everything,all-repos,npm://commander:0.6.1,2022-12-28T16:04:02-05:00,1 | Security-All
Commander.js Package for Node.js index.js parse() Function Argument Parsing Arbitrary Code Execution Weakness,Unknown,security,everything,all-repos,npm://commander:0.5.2,2022-12-28T16:04:02-05:00,1 | Security-All
Commander.js Package for Node.js index.js parse() Function Argument Parsing Arbitrary Code Execution Weakness,Unknown,security,everything,all-repos,npm://commander:2.9.0,2022-12-28T16:04:02-05:00,1 | Security-All
Commander.js Package for Node.js index.js parse() Function Argument Parsing Arbitrary Code Execution Weakness,Unknown,security,everything,all-repos,npm://commander:2.5.1,2022-12-28T16:04:02-05:00,1 | Security-All
Commander.js Package for Node.js index.js parse() Function Argument Parsing Arbitrary Code Execution Weakness,Unknown,security,everything,all-repos,npm://commander:2.15.1,2022-12-28T16:04:02-05:00,1 | Security-All
Commander.js Package for Node.js index.js parse() Function Argument Parsing Arbitrary Code Execution Weakness,Unknown,security,everything,all-repos,npm://commander:2.3.0,2022-12-28T16:04:02-05:00,1 | Security-All
tap-mocha-reporter lib/utils.js Regular Expression Remote DoS,High,security,everything,all-repos,npm://tap-mocha-reporter:2.0.1,2022-12-28T16:04:02-05:00,1 | Security-All
"Minimist <=1.2.5 is vulnerable to Prototype Pollution via file index.js, function setKey() (lines 69-95).",Critical,security,everything,all-repos,npm://minimist:0.0.10,2022-12-28T16:04:02-05:00,1 | Security-All
"Minimist <=1.2.5 is vulnerable to Prototype Pollution via file index.js, function setKey() (lines 69-95).",Critical,security,everything,all-repos,npm://minimist:1.2.0,2022-12-28T16:04:02-05:00,1 | Security-All
"Minimist <=1.2.5 is vulnerable to Prototype Pollution via file index.js, function setKey() (lines 69-95).",Critical,security,everything,all-repos,npm://minimist:0.0.8,2022-12-28T16:04:02-05:00,1 | Security-All
"Moment.js is a JavaScript date library for parsing, validating, manipulating, and formatting dates. A path traversal vulnerability impacts npm (server) users of Moment.js between versions 1.0.1 and 2.29.1, especially if a user-provided locale string is directly used to switch moment locale. This problem is patched in 2.29.2, and the patch can be applied to all affected versions. As a workaround, sanitize the user-provided locale name before passing it to Moment.js.",High,security,everything,all-repos,npm://moment:2.24.0,2022-12-28T16:04:03-05:00,1 | Security-All
"In Async before 2.6.4 and 3.x before 3.2.2, a malicious user can obtain privileges via the mapValues() method, aka lib/internal/iterator.js createObjectIterator prototype pollution.",High,security,everything,all-repos,npm://async:2.6.1,2022-12-28T16:04:02-05:00,1 | Security-All
"This affects the package nconf before 0.11.4. When using the memory engine, it is possible to store a nested JSON representation of the configuration. The .set() function, that is responsible for setting the configuration properties, is vulnerable to Prototype Pollution. By providing a crafted property, it is possible to modify the properties on the Object.prototype.",High,security,everything,all-repos,npm://nconf:0.6.9,2022-12-28T16:04:02-05:00,1 | Security-All
"This affects the package nconf before 0.11.4. When using the memory engine, it is possible to store a nested JSON representation of the configuration. The .set() function, that is responsible for setting the configuration properties, is vulnerable to Prototype Pollution. By providing a crafted property, it is possible to modify the properties on the Object.prototype.",High,security,everything,all-repos,npm://nconf:0.10.0,2022-12-28T16:04:02-05:00,1 | Security-All
"The ejs (aka Embedded JavaScript templates) package 3.1.6 for Node.js allows server-side template injection in settings[view options][outputFunctionName]. This is parsed as an internal option, and overwrites the outputFunctionName option with an arbitrary OS command (which is executed upon template compilation).",Critical,security,everything,all-repos,npm://ejs:0.4.3,2022-12-28T16:04:02-05:00,1 | Security-All
"Hawk is an HTTP authentication scheme providing mechanisms for making authenticated HTTP requests with partial cryptographic verification of the request and response, covering the HTTP method, request URI, host, and optionally the request payload. Hawk used a regular expression to parse `Host` HTTP header (`Hawk.utils.parseHost()`), which was subject to regular expression DoS attack - meaning each added character in the attacker's input increases the computation time exponentially. `parseHost()` was patched in `9.0.1` to use built-in `URL` class to parse hostname instead. `Hawk.authenticate()` accepts `options` argument. If that contains `host` and `port`, those would be used instead of a call to `utils.parseHost()`.",High,security,everything,all-repos,npm://hawk:3.1.3,2022-12-28T16:04:02-05:00,1 | Security-All
"Hawk is an HTTP authentication scheme providing mechanisms for making authenticated HTTP requests with partial cryptographic verification of the request and response, covering the HTTP method, request URI, host, and optionally the request payload. Hawk used a regular expression to parse `Host` HTTP header (`Hawk.utils.parseHost()`), which was subject to regular expression DoS attack - meaning each added character in the attacker's input increases the computation time exponentially. `parseHost()` was patched in `9.0.1` to use built-in `URL` class to parse hostname instead. `Hawk.authenticate()` accepts `options` argument. If that contains `host` and `port`, those would be used instead of a call to `utils.parseHost()`.",High,security,everything,all-repos,npm://hawk:1.0.0,2022-12-28T16:04:02-05:00,1 | Security-All
json-schema is vulnerable to Improperly Controlled Modification of Object Prototype Attributes ('Prototype Pollution'),Critical,security,everything,all-repos,npm://json-schema:0.2.3,2022-12-28T16:04:03-05:00,1 | Security-All
Moment Package for Node.js lib/create/from-string.js preprocessRFC2822() Function Message Parsing Improper Regular Expression DoS,High,security,everything,all-repos,npm://moment:2.24.0,2022-12-28T16:04:03-05:00,1 | Security-All
Mocha Package for Node.js lib/utils.js clean() Function Improper Regular Expression DoS,High,security,everything,all-repos,npm://mocha:2.5.3,2022-12-28T16:04:03-05:00,1 | Security-All
Mocha Package for Node.js lib/utils.js clean() Function Improper Regular Expression DoS,High,security,everything,all-repos,npm://mocha:2.0.1,2022-12-28T16:04:03-05:00,1 | Security-All
JavaScript Big Number (jsbn) index.js Multiple Functions Timing Side-channel Information Disclosure,Medium,security,everything,all-repos,npm://jsbn:0.1.1,2022-12-28T16:04:02-05:00,1 | Security-All
JavaScript Big Number (jsbn) index.js Multiple Functions Timing Side-channel Information Disclosure,Medium,security,everything,all-repos,npm://jsbn:0.1.0,2022-12-28T16:04:02-05:00,1 | Security-All
The got package before 12.1.0 (also fixed in 11.8.5) for Node.js allows a redirect to a UNIX socket.,Medium,security,everything,all-repos,npm://got:6.7.1,2022-12-28T16:04:02-05:00,1 | Security-All
"moment is a JavaScript date library for parsing, validating, manipulating, and formatting dates. Affected versions of moment were found to use an inefficient parsing algorithm. Specifically using string-to-date parsing in moment (more specifically rfc2822 parsing, which is tried by default) has quadratic (N^2) complexity on specific inputs. Users may notice a noticeable slowdown is observed with inputs above 10k characters. Users who pass user-provided strings without sanity length checks to moment constructor are vulnerable to (Re)DoS attacks. The problem is patched in 2.29.4, the patch can be applied to all affected versions with minimal tweaking. Users are advised to upgrade. Users unable to upgrade should consider limiting date lengths accepted from user input.",High,security,everything,all-repos,npm://moment:2.24.0,2022-12-28T16:04:03-05:00,1 | Security-All
"A vulnerability was found in the minimatch package. This flaw allows a Regular Expression Denial of Service (ReDoS) when calling the braceExpand function with specific arguments, resulting in a Denial of Service.",High,security,everything,all-repos,npm://minimatch:0.3.0,2022-12-28T16:04:03-05:00,1 | Security-All
"A vulnerability was found in the minimatch package. This flaw allows a Regular Expression Denial of Service (ReDoS) when calling the braceExpand function with specific arguments, resulting in a Denial of Service.",High,security,everything,all-repos,npm://minimatch:3.0.3,2022-12-28T16:04:03-05:00,1 | Security-All
"A vulnerability was found in the minimatch package. This flaw allows a Regular Expression Denial of Service (ReDoS) when calling the braceExpand function with specific arguments, resulting in a Denial of Service.",High,security,everything,all-repos,npm://minimatch:3.0.2,2022-12-28T16:04:03-05:00,1 | Security-All
"qs before 6.10.3, as used in Express before 4.17.3 and other products, allows attackers to cause a Node process hang for an Express application because an __ proto__ key can be used. In many typical Express use cases, an unauthenticated remote attacker can place the attack payload in the query string of the URL that is used to visit the application, such as a[__proto__]=b&a[__proto__]&a[length]=100000000. The fix was backported to qs 6.9.7, 6.8.3, 6.7.3, 6.6.1, 6.5.3, 6.4.1, 6.3.3, and 6.2.4 (and therefore Express 4.17.3, which has ""deps: qs@6.9.7"" in its release description, is not vulnerable).",High,security,everything,all-repos,npm://qs:0.6.6,2022-12-28T16:04:02-05:00,1 | Security-All
"qs before 6.10.3, as used in Express before 4.17.3 and other products, allows attackers to cause a Node process hang for an Express application because an __ proto__ key can be used. In many typical Express use cases, an unauthenticated remote attacker can place the attack payload in the query string of the URL that is used to visit the application, such as a[__proto__]=b&a[__proto__]&a[length]=100000000. The fix was backported to qs 6.9.7, 6.8.3, 6.7.3, 6.6.1, 6.5.3, 6.4.1, 6.3.3, and 6.2.4 (and therefore Express 4.17.3, which has ""deps: qs@6.9.7"" in its release description, is not vulnerable).",High,security,everything,all-repos,npm://qs:6.2.1,2022-12-28T16:04:02-05:00,1 | Security-All
"qs before 6.10.3, as used in Express before 4.17.3 and other products, allows attackers to cause a Node process hang for an Express application because an __ proto__ key can be used. In many typical Express use cases, an unauthenticated remote attacker can place the attack payload in the query string of the URL that is used to visit the application, such as a[__proto__]=b&a[__proto__]&a[length]=100000000. The fix was backported to qs 6.9.7, 6.8.3, 6.7.3, 6.6.1, 6.5.3, 6.4.1, 6.3.3, and 6.2.4 (and therefore Express 4.17.3, which has ""deps: qs@6.9.7"" in its release description, is not vulnerable).",High,security,everything,all-repos,npm://qs:5.2.1,2022-12-28T16:04:02-05:00,1 | Security-All
A vulnerability has been found in OWASP NodeGoat and classified as problematic. This vulnerability affects unknown code of the file app/routes/research.js of the component Query Parameter Handler. The manipulation leads to denial of service. The attack can be initiated remotely. The name of the patch is 4a4d1db74c63fb4ff8d366551c3af006c25ead12. It is recommended to apply a patch to fix this issue. The identifier of this vulnerability is VDB-216184.,High,security,everything,all-repos,npm://owasp-nodejs-goat:1.3.0,2022-12-28T16:04:02-05:00,1 | Security-All
A ReDoS (regular expression denial of service) flaw was found in the tough-cookie module before 2.3.3 for Node.js. An attacker that is able to make an HTTP request using a specially crafted cookie may cause the application to consume an excessive amount of CPU.,High,security,everything,all-repos,npm://tough-cookie:2.2.2,2022-12-28T16:04:03-05:00,1 | Security-All
A ReDoS (regular expression denial of service) flaw was found in the tough-cookie module before 2.3.3 for Node.js. An attacker that is able to make an HTTP request using a specially crafted cookie may cause the application to consume an excessive amount of CPU.,High,security,everything,all-repos,npm://tough-cookie:2.3.1,2022-12-28T16:04:03-05:00,1 | Security-All
"The is-my-json-valid package before 2.12.4 for Node.js has an incorrect exports['utc-millisec'] regular expression, which allows remote attackers to cause a denial of service (blocked event loop) via a crafted string.",High,security,everything,all-repos,npm://is-my-json-valid:2.15.0,2022-12-28T16:04:03-05:00,1 | Security-All
"The uglify-js package before 2.6.0 for Node.js allows attackers to cause a denial of service (CPU consumption) via crafted input in a parse call, aka a ""regular expression denial of service (ReDoS).""",High,security,everything,all-repos,npm://uglify-js:2.4.24,2022-12-28T16:04:03-05:00,1 | Security-All
"The qs module before 1.0.0 does not have an option or default for specifying object depth and when parsing a string representing a deeply nested object will block the event loop for long periods of time. An attacker could leverage this to cause a temporary denial-of-service condition, for example, in a web application, other requests would not be processed while this blocking is occurring.",High,security,everything,all-repos,npm://qs:0.6.6,2022-12-28T16:04:03-05:00,1 | Security-All
react-native-meteor-oauth is a library for Oauth2 login to a Meteor server in React Native. The oauth Random Token is generated using a non-cryptographically strong RNG (Math.random()).,Medium,security,everything,all-repos,npm://randomatic:1.1.5,2022-12-28T16:04:01-05:00,1 | Security-All
"Request is an http client. If a request is made using ```multipart```, and the body type is a ```number```, then the specified number of non-zero memory is passed in the body. This affects Request >=2.2.6 <2.47.0 || >2.51.0 <=2.67.0.",Medium,security,everything,all-repos,npm://request:2.67.0,2022-12-28T16:04:02-05:00,1 | Security-All
"Request is an http client. If a request is made using ```multipart```, and the body type is a ```number```, then the specified number of non-zero memory is passed in the body. This affects Request >=2.2.6 <2.47.0 || >2.51.0 <=2.67.0.",Medium,security,everything,all-repos,npm://request:2.36.0,2022-12-28T16:04:02-05:00,1 | Security-All
"Minimatch is a minimal matching utility that works by converting glob expressions into JavaScript `RegExp` objects. The primary function, `minimatch(path, pattern)` in Minimatch 3.0.1 and earlier is vulnerable to ReDoS in the `pattern` parameter.",High,security,everything,all-repos,npm://minimatch:0.3.0,2022-12-28T16:04:02-05:00,1 | Security-All
"The mime module < 1.4.1, 2.0.1, 2.0.2 is vulnerable to regular expression denial of service when a mime lookup is performed on untrusted user input.",High,security,everything,all-repos,npm://mime:1.2.11,2022-12-28T16:04:02-05:00,1 | Security-All
The debug module is vulnerable to regular expression denial of service when untrusted user input is passed into the o formatter. It takes around 50k characters to block for 2 seconds making this a low severity issue.,Medium,security,everything,all-repos,npm://debug:2.2.0,2022-12-28T16:04:01-05:00,1 | Security-All
"Growl adds growl notification support to nodejs. Growl before 1.10.2 does not properly sanitize input before passing it to exec, allowing for arbitrary command execution.",Critical,security,everything,all-repos,npm://growl:1.9.2,2022-12-28T16:04:02-05:00,1 | Security-All
"lodash node module before 4.17.5 suffers from a Modification of Assumed-Immutable Data (MAID) vulnerability via defaultsDeep, merge, and mergeWith functions, which allows a malicious user to modify the prototype of ""Object"" via __proto__, causing the addition or modification of an existing property that will exist on all objects.",Medium,security,everything,all-repos,npm://lodash:4.13.1,2022-12-28T16:04:03-05:00,1 | Security-All
"lodash node module before 4.17.5 suffers from a Modification of Assumed-Immutable Data (MAID) vulnerability via defaultsDeep, merge, and mergeWith functions, which allows a malicious user to modify the prototype of ""Object"" via __proto__, causing the addition or modification of an existing property that will exist on all objects.",Medium,security,everything,all-repos,npm://lodash:2.4.2,2022-12-28T16:04:03-05:00,1 | Security-All
sshpk is vulnerable to ReDoS when parsing crafted invalid public keys.,High,security,everything,all-repos,npm://sshpk:1.10.1,2022-12-28T16:04:02-05:00,1 | Security-All
"hoek node module before 4.2.0 and 5.0.x before 5.0.3 suffers from a Modification of Assumed-Immutable Data (MAID) vulnerability via 'merge' and 'applyToDefaults' functions, which allows a malicious user to modify the prototype of ""Object"" via __proto__, causing the addition or modification of an existing property that will exist on all objects.",High,security,everything,all-repos,npm://hoek:2.16.3,2022-12-28T16:04:02-05:00,1 | Security-All
"hoek node module before 4.2.0 and 5.0.x before 5.0.3 suffers from a Modification of Assumed-Immutable Data (MAID) vulnerability via 'merge' and 'applyToDefaults' functions, which allows a malicious user to modify the prototype of ""Object"" via __proto__, causing the addition or modification of an existing property that will exist on all objects.",High,security,everything,all-repos,npm://hoek:0.9.1,2022-12-28T16:04:02-05:00,1 | Security-All
"index.js in brace-expansion before 1.1.7 is vulnerable to Regular Expression Denial of Service (ReDoS) attacks, as demonstrated by an expand argument containing many comma characters.",High,security,everything,all-repos,npm://brace-expansion:1.1.6,2022-12-28T16:04:03-05:00,1 | Security-All
Hawk before 3.1.3 and 4.x before 4.1.1 allow remote attackers to cause a denial of service (CPU consumption or partial outage) via a long (1) header or (2) URI that is matched against an improper regular expression.,High,security,everything,all-repos,npm://hawk:1.0.0,2022-12-28T16:04:03-05:00,1 | Security-All
NodeJS Tough-Cookie version 2.2.2 contains a Regular Expression Parsing vulnerability in HTTP request Cookie Header parsing that can result in Denial of Service. This attack appear to be exploitable via Custom HTTP header passed by client. This vulnerability appears to have been fixed in 2.3.0.,Medium,security,everything,all-repos,npm://tough-cookie:2.2.2,2022-12-28T16:04:02-05:00,1 | Security-All
"The qs module before 1.0.0 in Node.js does not call the compact function for array data, which allows remote attackers to cause a denial of service (memory consumption) by using a large index value to create a sparse array.",Medium,security,everything,all-repos,npm://qs:0.6.6,2022-12-28T16:04:02-05:00,1 | Security-All
"adm-zip npm library before 0.4.9 is vulnerable to directory traversal, allowing attackers to write to arbitrary files via a ../ (dot dot slash) in a Zip archive entry that is mishandled during extraction. This vulnerability is also known as 'Zip-Slip'.",Medium,security,everything,all-repos,npm://adm-zip:0.4.4,2022-12-28T16:04:03-05:00,1 | Security-All
nodejs ejs versions older than 2.5.3 is vulnerable to remote code execution due to weak input validation in ejs.renderFile() function,Critical,security,everything,all-repos,npm://ejs:0.4.3,2022-12-28T16:04:02-05:00,1 | Security-All
nodejs ejs version older than 2.5.5 is vulnerable to a denial-of-service due to weak input validation in the ejs.renderFile(),High,security,everything,all-repos,npm://ejs:0.4.3,2022-12-28T16:04:02-05:00,1 | Security-All
nodejs ejs version older than 2.5.5 is vulnerable to a Cross-site-scripting in the ejs.renderFile() resulting in code injection,Medium,security,everything,all-repos,npm://ejs:0.4.3,2022-12-28T16:04:03-05:00,1 | Security-All
"An issue was discovered in an npm 5.7.0 2018-02-21 pre-release (marked as ""next: 5.7.0"" and therefore automatically installed by an ""npm upgrade -g npm"" command, and also announced in the vendor's blog without mention of pre-release status). It might allow local users to bypass intended filesystem access restrictions because ownerships of /etc and /usr directories are being changed unexpectedly, related to a ""correctMkdir"" issue.",High,security,everything,all-repos,npm://npm:3.10.10,2022-12-28T16:04:02-05:00,1 | Security-All
"A prototype pollution vulnerability  was found in module extend <2.0.2, ~<3.0.2 that allows an attacker to inject arbitrary properties onto Object.prototype.",Critical,security,everything,all-repos,npm://extend:3.0.0,2022-12-28T16:04:01-05:00,1 | Security-All
"A prototype pollution vulnerability was found in lodash <4.17.11 where the functions merge, mergeWith, and defaultsDeep can be tricked into adding or modifying properties of Object.prototype.",Medium,security,everything,all-repos,npm://lodash:4.13.1,2022-12-28T16:04:03-05:00,1 | Security-All
"A prototype pollution vulnerability was found in lodash <4.17.11 where the functions merge, mergeWith, and defaultsDeep can be tricked into adding or modifying properties of Object.prototype.",Medium,security,everything,all-repos,npm://lodash:2.4.2,2022-12-28T16:04:03-05:00,1 | Security-All
node-handlebars Template Handling Prototype Manipulation Remote Code Execution,Critical,security,everything,all-repos,npm://handlebars:4.0.5,2022-12-28T16:04:01-05:00,1 | Security-All
marked lib/marked.js inline() Function Regular Expresssion Handling DoS,High,security,everything,all-repos,npm://marked:0.3.9,2022-12-28T16:04:02-05:00,1 | Security-All
utile Package for Node.js lib/base64.js base64.encode() Function Buffer Allocation Handling Memory Consumption DoS,Medium,security,everything,all-repos,npm://utile:0.2.1,2022-12-28T16:04:03-05:00,1 | Security-All
utile Package for Node.js lib/base64.js base64.encode() Function Buffer Allocation Handling Memory Consumption DoS,Medium,security,everything,all-repos,npm://utile:0.3.0,2022-12-28T16:04:03-05:00,1 | Security-All
Platform.js HTTP User-Agent Header Parsing Regular Expression Handling Remote DoS,Medium,security,everything,all-repos,npm://platform:1.3.1,2022-12-28T16:04:02-05:00,1 | Security-All
JS-YAML lib/js-yaml/loader.js storeMappingPair() Function Nested Array Handling Resource Consumption DoS Weakness,Medium,security,everything,all-repos,npm://js-yaml:3.6.1,2022-12-28T16:04:03-05:00,1 | Security-All
JS-YAML lib/js-yaml/loader.js storeMappingPair() Function Object Property Handling Arbitrary Code Execution,Critical,security,everything,all-repos,npm://js-yaml:3.6.1,2022-12-28T16:04:02-05:00,1 | Security-All
"A vulnerability was found in node-tar before version 4.4.2 (excluding version 2.2.2). An Arbitrary File Overwrite issue exists when extracting a tarball containing a hardlink to a file that already exists on the system, in conjunction with a later plain file with the same name as the hardlink. This plain file content replaces the existing file content. A patch has been applied to node-tar v2.2.2).",High,security,everything,all-repos,npm://tar:2.2.1,2022-12-28T16:04:02-05:00,1 | Security-All
Eran Hammer cryptiles version 4.1.1 earlier contains a CWE-331: Insufficient Entropy vulnerability in randomDigits() method that can result in An attacker is more likely to be able to brute force something that was supposed to be random.. This attack appear to be exploitable via Depends upon the calling application.. This vulnerability appears to have been fixed in 4.1.2.,Critical,security,everything,all-repos,npm://cryptiles:2.0.5,2022-12-28T16:04:03-05:00,1 | Security-All
Eran Hammer cryptiles version 4.1.1 earlier contains a CWE-331: Insufficient Entropy vulnerability in randomDigits() method that can result in An attacker is more likely to be able to brute force something that was supposed to be random.. This attack appear to be exploitable via Depends upon the calling application.. This vulnerability appears to have been fixed in 4.1.2.,Critical,security,everything,all-repos,npm://cryptiles:0.2.2,2022-12-28T16:04:03-05:00,1 | Security-All
"fstream before 1.0.12 is vulnerable to Arbitrary File Overwrite. Extracting tarballs containing a hardlink to a file that already exists in the system, and a file that matches the hardlink, will overwrite the system's file with the contents of the extracted file. The fstream.DirWriter() function is vulnerable.",High,security,everything,all-repos,npm://fstream:1.0.10,2022-12-28T16:04:02-05:00,1 | Security-All
marked Package for Node.js lib/marked.js heading Regular Expression Handling CPU Consumption DoS,Medium,security,everything,all-repos,npm://marked:0.3.9,2022-12-28T16:04:01-05:00,1 | Security-All
"lodash prior to 4.17.11 is affected by: CWE-400: Uncontrolled Resource Consumption. The impact is: Denial of service. The component is: Date handler. The attack vector is: Attacker provides very long strings, which the library attempts to match using a regular expression. The fixed version is: 4.17.11.",Medium,security,everything,all-repos,npm://lodash:4.13.1,2022-12-28T16:04:03-05:00,1 | Security-All
"lodash prior to 4.17.11 is affected by: CWE-400: Uncontrolled Resource Consumption. The impact is: Denial of service. The component is: Date handler. The attack vector is: Attacker provides very long strings, which the library attempts to match using a regular expression. The fixed version is: 4.17.11.",Medium,security,everything,all-repos,npm://lodash:2.4.2,2022-12-28T16:04:03-05:00,1 | Security-All
Versions of lodash lower than 4.17.12 are vulnerable to Prototype Pollution. The function defaultsDeep could be tricked into adding or modifying properties of Object.prototype using a constructor payload.,Critical,security,everything,all-repos,npm://lodash:4.13.1,2022-12-28T16:04:03-05:00,1 | Security-All
Versions of lodash lower than 4.17.12 are vulnerable to Prototype Pollution. The function defaultsDeep could be tricked into adding or modifying properties of Object.prototype using a constructor payload.,Critical,security,everything,all-repos,npm://lodash:2.4.2,2022-12-28T16:04:03-05:00,1 | Security-All
helmet-csp Package for Node.js lib/transform-directives-for-browser.ts transformDirectivesForBrowser() Function Default Directive Handling Content Security Policy Bypass,Medium,security,everything,all-repos,npm://helmet-csp:1.2.2,2022-12-28T16:04:02-05:00,1 | Security-All
mongodb Package for Node.js (node-mongodb-native) lib/operations/db_ops.js createCollection() Function Collection Name Validation Improper Exception Handling DoS,High,security,everything,all-repos,npm://mongodb:2.2.36,2022-12-28T16:04:03-05:00,1 | Security-All
"Versions of the npm CLI prior to 6.13.4 are vulnerable to an Arbitrary File Overwrite. It fails to prevent existing globally-installed binaries to be overwritten by other package installations. For example, if a package was installed globally and created a serve binary, any subsequent installs of packages that also create a serve binary would overwrite the previous serve binary. This behavior is still allowed in local installations and also through install scripts. This vulnerability bypasses a user using the --ignore-scripts install option.",Medium,security,everything,all-repos,npm://npm:3.10.10,2022-12-28T16:04:03-05:00,1 | Security-All
Versions of the npm CLI prior to 6.13.3 are vulnerable to an Arbitrary File Write. It fails to prevent access to folders outside of the intended node_modules folder through the bin field. A properly constructed entry in the package.json bin field would allow a package publisher to modify and/or gain access to arbitrary files on a user's system when the package is installed. This behavior is still possible through install scripts. This vulnerability bypasses a user using the --ignore-scripts install option.,High,security,everything,all-repos,npm://npm:3.10.10,2022-12-28T16:04:03-05:00,1 | Security-All
Versions of the npm CLI prior to 6.13.3 are vulnerable to an Arbitrary File Write. It is possible for packages to create symlinks to files outside of thenode_modules folder through the bin field upon installation. A properly constructed entry in the package.json bin field would allow a package publisher to create a symlink pointing to arbitrary files on a user's system when the package is installed. This behavior is still possible through install scripts. This vulnerability bypasses a user using the --ignore-scripts install option.,Medium,security,everything,all-repos,npm://npm:3.10.10,2022-12-28T16:04:03-05:00,1 | Security-All
"Versions of handlebars prior to 4.3.0 are vulnerable to Prototype Pollution leading to Remote Code Execution. Templates may alter an Object's __proto__ and __defineGetter__ properties, which may allow an attacker to execute arbitrary code through crafted payloads.",Critical,security,everything,all-repos,npm://handlebars:4.0.5,2022-12-28T16:04:03-05:00,1 | Security-All
"the web framework using ljharb's qs module older than v6.3.2, v6.2.3, v6.1.2, and v6.0.4 is vulnerable to a DoS. A malicious user can send a evil request to cause the web framework crash.",High,security,everything,all-repos,npm://qs:0.6.6,2022-12-28T16:04:03-05:00,1 | Security-All
"the web framework using ljharb's qs module older than v6.3.2, v6.2.3, v6.1.2, and v6.0.4 is vulnerable to a DoS. A malicious user can send a evil request to cause the web framework crash.",High,security,everything,all-repos,npm://qs:6.2.1,2022-12-28T16:04:03-05:00,1 | Security-All
"the web framework using ljharb's qs module older than v6.3.2, v6.2.3, v6.1.2, and v6.0.4 is vulnerable to a DoS. A malicious user can send a evil request to cause the web framework crash.",High,security,everything,all-repos,npm://qs:5.2.1,2022-12-28T16:04:03-05:00,1 | Security-All
"minimist before 1.2.2 could be tricked into adding or modifying properties of Object.prototype using a ""constructor"" or ""__proto__"" payload.",Medium,security,everything,all-repos,npm://minimist:0.0.10,2022-12-28T16:04:03-05:00,1 | Security-All
"minimist before 1.2.2 could be tricked into adding or modifying properties of Object.prototype using a ""constructor"" or ""__proto__"" payload.",Medium,security,everything,all-repos,npm://minimist:1.2.0,2022-12-28T16:04:03-05:00,1 | Security-All
"minimist before 1.2.2 could be tricked into adding or modifying properties of Object.prototype using a ""constructor"" or ""__proto__"" payload.",Medium,security,everything,all-repos,npm://minimist:0.0.8,2022-12-28T16:04:03-05:00,1 | Security-All
"yargs-parser could be tricked into adding or modifying properties of Object.prototype using a ""__proto__"" payload.",Medium,security,everything,all-repos,npm://yargs-parser:2.4.1,2022-12-28T16:04:02-05:00,1 | Security-All
minimist Package for Node.js --__proto__.y=Polluted Argument Handling Prototype Pollution Remote Property Manipulation,Critical,security,everything,all-repos,npm://minimist:1.2.0,2022-12-28T16:04:03-05:00,1 | Security-All
minimist Package for Node.js --__proto__.y=Polluted Argument Handling Prototype Pollution Remote Property Manipulation,Critical,security,everything,all-repos,npm://minimist:0.0.8,2022-12-28T16:04:03-05:00,1 | Security-All
minimist Package for Node.js --__proto__.y=Polluted Argument Handling Prototype Pollution Remote Property Manipulation,Critical,security,everything,all-repos,npm://minimist:0.0.10,2022-12-28T16:04:03-05:00,1 | Security-All
"All versions of bson before 1.1.4 are vulnerable to Deserialization of Untrusted Data. The package will ignore an unknown value for an object's _bsotype, leading to cases where an object is serialized as a document rather than the intended BSON type.",Critical,security,everything,all-repos,npm://bson:1.0.8,2022-12-28T16:04:03-05:00,1 | Security-All
"All versions of bson before 1.1.4 are vulnerable to Deserialization of Untrusted Data. The package will ignore an unknown value for an object's _bsotype, leading to cases where an object is serialized as a document rather than the intended BSON type.",Critical,security,everything,all-repos,npm://bson:1.0.9,2022-12-28T16:04:03-05:00,1 | Security-All
Incorrect parsing of certain JSON input may result in js-bson not correctly serializing BSON. This may cause unexpected application behaviour including data disclosure. This issue affects: MongoDB Inc. js-bson library version 1.1.3 and prior to.,Medium,security,everything,all-repos,npm://bson:1.0.8,2022-12-28T16:04:03-05:00,1 | Security-All
Incorrect parsing of certain JSON input may result in js-bson not correctly serializing BSON. This may cause unexpected application behaviour including data disclosure. This issue affects: MongoDB Inc. js-bson library version 1.1.3 and prior to.,Medium,security,everything,all-repos,npm://bson:1.0.9,2022-12-28T16:04:03-05:00,1 | Security-All
"Versions of the npm CLI prior to 6.14.6 are vulnerable to an information exposure vulnerability through log files. The CLI supports URLs like ""<protocol>://[<user>[:<password>]@]<hostname>[:<port>][:][/]<path>"". The password value is not redacted and is printed to stdout and also to any generated log files.",Medium,security,my-project-watch,all-repos,npm://npm:3.10.10,2022-12-28T16:04:04-05:00,1 | Security-All
Prototype pollution attack when using _.zipObjectDeep in lodash before 4.17.20.,High,security,my-project-watch,all-repos,npm://lodash:2.4.2,2022-12-28T16:04:03-05:00,1 | Security-All
Prototype pollution attack when using _.zipObjectDeep in lodash before 4.17.20.,High,security,my-project-watch,all-repos,npm://lodash:4.17.19,2022-12-28T16:04:03-05:00,1 | Security-All
Prototype pollution attack when using _.zipObjectDeep in lodash before 4.17.20.,High,security,my-project-watch,all-repos,npm://lodash:4.17.15,2022-12-28T16:04:03-05:00,1 | Security-All
Prototype pollution attack when using _.zipObjectDeep in lodash before 4.17.20.,High,security,my-project-watch,all-repos,npm://lodash:4.13.1,2022-12-28T16:04:03-05:00,1 | Security-All
is-my-json-valid Package for Node.js index.js formatName() Function Schema Handling Arbitrary Code Execution,High,security,my-project-watch,all-repos,npm://is-my-json-valid:2.15.0,2022-12-28T16:04:03-05:00,1 | Security-All
is-my-json-valid Package for Node.js formats.js JSON Field style Format Improper Regular Expression DoS,Medium,security,my-project-watch,all-repos,npm://is-my-json-valid:2.15.0,2022-12-28T16:04:03-05:00,1 | Security-All
Lodash Package for Node.js lodash.js baseSet() Function Prototype Pollution DoS,High,security,my-project-watch,all-repos,npm://lodash:4.17.15,2022-12-28T16:04:03-05:00,1 | Security-All
Lodash Package for Node.js lodash.js baseSet() Function Prototype Pollution DoS,High,security,my-project-watch,all-repos,npm://lodash:4.13.1,2022-12-28T16:04:03-05:00,1 | Security-All
"A buffer over-read vulnerability exists in bl <4.0.3, <3.0.1, <2.2.1, and <1.2.3 which could allow an attacker to supply user input (even typed) that if it ends up in consume() argument and can become negative, the BufferList state can be corrupted, tricking it into exposing uninitialized memory via regular .slice() calls.",Medium,security,my-project-watch,all-repos,npm://bl:1.1.2,2022-12-28T16:04:03-05:00,1 | Security-All
"A buffer over-read vulnerability exists in bl <4.0.3, <3.0.1, <2.2.1, and <1.2.3 which could allow an attacker to supply user input (even typed) that if it ends up in consume() argument and can become negative, the BufferList state can be corrupted, tricking it into exposing uninitialized memory via regular .slice() calls.",Medium,security,my-project-watch,all-repos,npm://bl:1.0.3,2022-12-28T16:04:03-05:00,1 | Security-All
A TOCTOU issue in the chownr package before 1.1.0 for Node.js 10.10 could allow a local attacker to trick it into descending into unintended directories via symlink attacks.,Low,security,my-project-watch,all-repos,npm://chownr:1.0.1,2022-12-28T16:04:04-05:00,1 | Security-All
Handlebars before 4.4.5 allows Regular Expression Denial of Service (ReDoS) because of eager matching. The parser may be forced into an endless loop while processing crafted templates. This may allow attackers to exhaust system resources.,High,security,my-project-watch,all-repos,npm://handlebars:4.0.5,2022-12-28T16:04:03-05:00,1 | Security-All
"Handlebars before 3.0.8 and 4.x before 4.5.3 is vulnerable to Arbitrary Code Execution. The lookup helper fails to properly validate templates, allowing attackers to submit templates that execute arbitrary JavaScript. This can be used to run arbitrary code on a server processing Handlebars templates or in a victim's browser (effectively serving as XSS).",High,security,my-project-watch,all-repos,npm://handlebars:4.0.5,2022-12-28T16:04:03-05:00,1 | Security-All
This affects the package npm-user-validate before 1.0.1. The regex that validates user emails took exponentially longer to process long input strings beginning with @ characters.,High,security,my-project-watch,all-repos,npm://npm-user-validate:0.1.5,2022-12-28T16:04:03-05:00,1 | Security-All
"The package y18n before 3.2.2, 4.0.1 and 5.0.5, is vulnerable to Prototype Pollution.",Critical,security,my-project-watch,all-repos,npm://y18n:3.2.1,2022-12-28T16:04:03-05:00,"2 | Security-All,Security-Critical"
Versions less than 0.0.6 of the Node.js stringstream module are vulnerable to an out-of-bounds read because of allocation of uninitialized buffers when a number is passed in the input stream (when using Node.js 4.x).,Medium,security,my-project-watch,all-repos,npm://stringstream:0.0.5,2022-12-28T16:04:03-05:00,1 | Security-All
"This affects the package ini before 1.3.6. If an attacker submits a malicious INI file to an application that parses it with ini.parse, they will pollute the prototype on the application. This can be exploited further depending on the context.",Critical,security,my-project-watch,all-repos,npm://ini:1.3.4,2022-12-28T16:04:03-05:00,"2 | Security-All,Security-Critical"
"Lodash versions prior to 4.17.21 are vulnerable to Regular Expression Denial of Service (ReDoS) via the toNumber, trim and trimEnd functions.",Medium,security,my-project-watch,all-repos,npm://lodash:4.17.15,2022-12-28T16:04:03-05:00,1 | Security-All
"Lodash versions prior to 4.17.21 are vulnerable to Regular Expression Denial of Service (ReDoS) via the toNumber, trim and trimEnd functions.",Medium,security,my-project-watch,all-repos,npm://lodash:4.13.1,2022-12-28T16:04:03-05:00,1 | Security-All
"Lodash versions prior to 4.17.21 are vulnerable to Regular Expression Denial of Service (ReDoS) via the toNumber, trim and trimEnd functions.",Medium,security,my-project-watch,all-repos,npm://lodash:2.4.2,2022-12-28T16:04:03-05:00,1 | Security-All
"Lodash versions prior to 4.17.21 are vulnerable to Regular Expression Denial of Service (ReDoS) via the toNumber, trim and trimEnd functions.",Medium,security,my-project-watch,all-repos,npm://lodash:4.17.19,2022-12-28T16:04:03-05:00,1 | Security-All
Lodash versions prior to 4.17.21 are vulnerable to Command Injection via the template function.,High,security,my-project-watch,all-repos,npm://lodash:4.17.19,2022-12-28T16:04:03-05:00,1 | Security-All
Lodash versions prior to 4.17.21 are vulnerable to Command Injection via the template function.,High,security,my-project-watch,all-repos,npm://lodash:4.17.15,2022-12-28T16:04:03-05:00,1 | Security-All
Lodash versions prior to 4.17.21 are vulnerable to Command Injection via the template function.,High,security,my-project-watch,all-repos,npm://lodash:4.13.1,2022-12-28T16:04:03-05:00,1 | Security-All
Lodash versions prior to 4.17.21 are vulnerable to Command Injection via the template function.,High,security,my-project-watch,all-repos,npm://lodash:2.4.2,2022-12-28T16:04:03-05:00,1 | Security-All
The package hosted-git-info before 3.0.8 are vulnerable to Regular Expression Denial of Service (ReDoS) via regular expression shortcutMatch in the fromUrl function in index.js. The affected regular expression exhibits polynomial worst-case time complexity.,Medium,security,my-project-watch,all-repos,npm://hosted-git-info:2.1.5,2022-12-28T16:04:03-05:00,1 | Security-All
"The package underscore from 1.13.0-0 and before 1.13.0-2, from 1.3.2 and before 1.12.1 are vulnerable to Arbitrary Code Injection via the template function, particularly when a variable property is passed as an argument as it is not sanitized.",High,security,my-project-watch,all-repos,npm://underscore:1.8.3,2022-12-28T16:04:03-05:00,1 | Security-All
"The package underscore from 1.13.0-0 and before 1.13.0-2, from 1.3.2 and before 1.12.1 are vulnerable to Arbitrary Code Injection via the template function, particularly when a variable property is passed as an argument as it is not sanitized.",High,security,my-project-watch,all-repos,npm://underscore:1.5.1,2022-12-28T16:04:03-05:00,1 | Security-All
"The package underscore from 1.13.0-0 and before 1.13.0-2, from 1.3.2 and before 1.12.1 are vulnerable to Arbitrary Code Injection via the template function, particularly when a variable property is passed as an argument as it is not sanitized.",High,security,my-project-watch,all-repos,npm://underscore:1.3.3,2022-12-28T16:04:03-05:00,1 | Security-All
A vulnerability was found in Braces versions prior to 2.3.1. Affected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) attacks.,Medium,security,my-project-watch,all-repos,npm://braces:1.8.5,2022-12-28T16:04:03-05:00,1 | Security-All
It was discovered that the is-my-json-valid JavaScript library used an inefficient regular expression to validate JSON fields defined to have email format. A specially crafted JSON file could cause it to consume an excessive amount of CPU time when validated.,Medium,security,my-project-watch,all-repos,npm://is-my-json-valid:2.15.0,2022-12-28T16:04:03-05:00,1 | Security-All
The package handlebars before 4.7.7 are vulnerable to Remote Code Execution (RCE) when selecting certain compiling options to compile templates coming from an untrusted source.,Critical,security,my-project-watch,all-repos,npm://handlebars:4.0.5,2022-12-28T16:04:04-05:00,"2 | Security-All,Security-Critical"
"All versions of package path-parse are vulnerable to Regular Expression Denial of Service (ReDoS) via splitDeviceRe, splitTailRe, and splitPathRe regular expressions. ReDoS exhibits polynomial worst-case time complexity.",High,security,my-project-watch,all-repos,npm://path-parse:1.0.5,2022-12-28T16:04:03-05:00,1 | Security-All
Cypress packages/server/lib/gui/windows.ts webPreferences Missing Context Isolation Test Handling Stored XSS,Medium,security,my-project-watch,all-repos,npm://cypress:3.8.3,2022-12-28T16:04:03-05:00,1 | Security-All
The package handlebars before 4.7.7 are vulnerable to Prototype Pollution when selecting certain compiling options to compile templates coming from an untrusted source.,Critical,security,my-project-watch,all-repos,npm://handlebars:4.0.5,2022-12-28T16:04:03-05:00,"2 | Security-All,Security-Critical"
The trim-newlines package before 3.0.1 and 4.x before 4.0.1 for Node.js has an issue related to regular expression denial-of-service (ReDoS) for the .end() method.,High,security,my-project-watch,all-repos,npm://trim-newlines:1.0.0,2022-12-28T16:04:03-05:00,1 | Security-All
This affects the package glob-parent before 5.1.2. The enclosure regex used to check for strings ending in enclosure containing path separator.,High,security,my-project-watch,all-repos,npm://glob-parent:3.1.0,2022-12-28T16:04:03-05:00,1 | Security-All
This affects the package glob-parent before 5.1.2. The enclosure regex used to check for strings ending in enclosure containing path separator.,High,security,my-project-watch,all-repos,npm://glob-parent:2.0.0,2022-12-28T16:04:03-05:00,1 | Security-All
"The npm package ""tar"" (aka node-tar) before versions 6.1.1, 5.0.6, 4.4.14, and 3.3.2 has a arbitrary File Creation/Overwrite vulnerability due to insufficient absolute path sanitization. node-tar aims to prevent extraction of absolute file paths by turning absolute paths into relative paths when the `preservePaths` flag is not set to `true`. This is achieved by stripping the absolute path root from any absolute file paths contained in a tar file. For example `/home/user/.bashrc` would turn into `home/user/.bashrc`. This logic was insufficient when file paths contained repeated path roots such as `////home/user/.bashrc`. `node-tar` would only strip a single path root from such paths. When given an absolute file path with repeating path roots, the resulting path (e.g. `///home/user/.bashrc`) would still resolve to an absolute path, thus allowing arbitrary file creation and overwrite. This issue was addressed in releases 3.2.2, 4.4.14, 5.0.6 and 6.1.1. Users may work around this vulnerability without upgrading by creating a custom `onentry` method which sanitizes the `entry.path` or a `filter` method which removes entries with absolute paths. See referenced GitHub Advisory for details. Be aware of CVE-2021-32803 which fixes a similar bug in later versions of tar.",High,security,my-project-watch,all-repos,npm://tar:2.2.1,2022-12-28T16:04:03-05:00,1 | Security-All
"The npm package ""tar"" (aka node-tar) before versions 6.1.2, 5.0.7, 4.4.15, and 3.2.3 has an arbitrary File Creation/Overwrite vulnerability via insufficient symlink protection. `node-tar` aims to guarantee that any file whose location would be modified by a symbolic link is not extracted. This is, in part, achieved by ensuring that extracted directories are not symlinks. Additionally, in order to prevent unnecessary `stat` calls to determine whether a given path is a directory, paths are cached when directories are created. This logic was insufficient when extracting tar files that contained both a directory and a symlink with the same name as the directory. This order of operations resulted in the directory being created and added to the `node-tar` directory cache. When a directory is present in the directory cache, subsequent calls to mkdir for that directory are skipped. However, this is also where `node-tar` checks for symlinks occur. By first creating a directory, and then replacing that directory with a symlink, it was thus possible to bypass `node-tar` symlink checks on directories, essentially allowing an untrusted tar file to symlink into an arbitrary location and subsequently extracting arbitrary files into that location, thus allowing arbitrary file creation and overwrite. This issue was addressed in releases 3.2.3, 4.4.15, 5.0.7 and 6.1.2.",High,security,my-project-watch,all-repos,npm://tar:2.2.1,2022-12-28T16:04:03-05:00,1 | Security-All
"The npm package ""tar"" (aka node-tar) before versions 4.4.18, 5.0.10, and 6.1.9 has an arbitrary file creation/overwrite and arbitrary code execution vulnerability. node-tar aims to guarantee that any file whose location would be outside of the extraction target directory is not extracted. This is, in part, accomplished by sanitizing absolute paths of entries within the archive, skipping archive entries that contain `..` path portions, and resolving the sanitized paths against the extraction target directory. This logic was insufficient on Windows systems when extracting tar files that contained a path that was not an absolute path, but specified a drive letter different from the extraction target, such as `C:some\path`. If the drive letter does not match the extraction target, for example `D:\extraction\dir`, then the result of `path.resolve(extractionDirectory, entryPath)` would resolve against the current working directory on the `C:` drive, rather than the extraction target directory. Additionally, a `..` portion of the path could occur immediately after the drive letter, such as `C:../foo`, and was not properly sanitized by the logic that checked for `..` within the normalized and split portions of the path. This only affects users of `node-tar` on Windows systems. These issues were addressed in releases 4.4.18, 5.0.10 and 6.1.9. The v3 branch of node-tar has been deprecated and did not receive patches for these issues. If you are still using a v3 release we recommend you update to a more recent version of node-tar. There is no reasonable way to work around this issue without performing the same path normalization procedures that node-tar now does. Users are encouraged to upgrade to the latest patched versions of node-tar, rather than attempt to sanitize paths themselves.",High,security,my-project-watch,all-repos,npm://tar:2.2.1,2022-12-28T16:04:03-05:00,1 | Security-All
"The npm package ""tar"" (aka node-tar) before versions 4.4.18, 5.0.10, and 6.1.9 has an arbitrary file creation/overwrite and arbitrary code execution vulnerability. node-tar aims to guarantee that any file whose location would be modified by a symbolic link is not extracted. This is, in part, achieved by ensuring that extracted directories are not symlinks. Additionally, in order to prevent unnecessary stat calls to determine whether a given path is a directory, paths are cached when directories are created. This logic was insufficient when extracting tar files that contained both a directory and a symlink with names containing unicode values that normalized to the same value. Additionally, on Windows systems, long path portions would resolve to the same file system entities as their 8.3 ""short path"" counterparts. A specially crafted tar archive could thus include a directory with one form of the path, followed by a symbolic link with a different string that resolves to the same file system entity, followed by a file using the first form. By first creating a directory, and then replacing that directory with a symlink that had a different apparent name that resolved to the same entry in the filesystem, it was thus possible to bypass node-tar symlink checks on directories, essentially allowing an untrusted tar file to symlink into an arbitrary location and subsequently extracting arbitrary files into that location, thus allowing arbitrary file creation and overwrite. These issues were addressed in releases 4.4.18, 5.0.10 and 6.1.9. The v3 branch of node-tar has been deprecated and did not receive patches for these issues. If you are still using a v3 release we recommend you update to a more recent version of node-tar. If this is not possible, a workaround is available in the referenced GHSA-qq89-hq3f-393p.",High,security,my-project-watch,all-repos,npm://tar:2.2.1,2022-12-28T16:04:03-05:00,1 | Security-All
"The npm package ""tar"" (aka node-tar) before versions 4.4.16, 5.0.8, and 6.1.7 has an arbitrary file creation/overwrite and arbitrary code execution vulnerability. node-tar aims to guarantee that any file whose location would be modified by a symbolic link is not extracted. This is, in part, achieved by ensuring that extracted directories are not symlinks. Additionally, in order to prevent unnecessary stat calls to determine whether a given path is a directory, paths are cached when directories are created. This logic was insufficient when extracting tar files that contained both a directory and a symlink with the same name as the directory, where the symlink and directory names in the archive entry used backslashes as a path separator on posix systems. The cache checking logic used both `\` and `/` characters as path separators, however `\` is a valid filename character on posix systems. By first creating a directory, and then replacing that directory with a symlink, it was thus possible to bypass node-tar symlink checks on directories, essentially allowing an untrusted tar file to symlink into an arbitrary location and subsequently extracting arbitrary files into that location, thus allowing arbitrary file creation and overwrite. Additionally, a similar confusion could arise on case-insensitive filesystems. If a tar archive contained a directory at `FOO`, followed by a symbolic link named `foo`, then on case-insensitive file systems, the creation of the symbolic link would remove the directory from the filesystem, but _not_ from the internal directory cache, as it would not be treated as a cache hit. A subsequent file entry within the `FOO` directory would then be placed in the target of the symbolic link, thinking that the directory had already been created. These issues were addressed in releases 4.4.16, 5.0.8 and 6.1.7. The v3 branch of node-tar has been deprecated and did not receive patches for these issues. If you are still using a v3 release we recommend you update to a more recent version of node-tar. I",High,security,my-project-watch,all-repos,npm://tar:2.2.1,2022-12-28T16:04:03-05:00,1 | Security-All
JS-YAML Package for Node.js lib/loader.js readAlias() Function YAML Anchor Handling Arbitrary Code Execution,Medium,security,my-project-watch,all-repos,npm://js-yaml:3.6.1,2022-12-28T16:04:03-05:00,1 | Security-All
This affects the package jsonpointer before 5.0.0. A type confusion vulnerability can lead to a bypass of a previous Prototype Pollution fix when the pointer components are arrays.,Critical,security,my-project-watch,all-repos,npm://jsonpointer:4.0.0,2022-12-28T16:04:03-05:00,"2 | Security-All,Security-Critical"
shelljs is vulnerable to Improper Privilege Management,High,security,my-project-watch,all-repos,npm://shelljs:0.3.0,2022-12-28T16:04:03-05:00,1 | Security-All
"Marked is a markdown parser and compiler. Prior to version 4.0.10, the regular expression `block.def` may cause catastrophic backtracking against some strings and lead to a regular expression denial of service (ReDoS). Anyone who runs untrusted markdown through a vulnerable version of marked and does not use a worker with a time limit may be affected. This issue is patched in version 4.0.10. As a workaround, avoid running untrusted markdown through marked or run marked on a worker thread and set a reasonable time limit to prevent draining resources.",High,security,my-project-watch,all-repos,npm://marked:0.3.9,2022-12-28T16:04:03-05:00,1 | Security-All
"Marked is a markdown parser and compiler. Prior to version 4.0.10, the regular expression `inline.reflinkSearch` may cause catastrophic backtracking against some strings and lead to a denial of service (DoS). Anyone who runs untrusted markdown through a vulnerable version of marked and does not use a worker with a time limit may be affected. This issue is patched in version 4.0.10. As a workaround, avoid running untrusted markdown through marked or run marked on a worker thread and set a reasonable time limit to prevent draining resources.",High,security,my-project-watch,all-repos,npm://marked:0.3.9,2022-12-28T16:04:03-05:00,1 | Security-All
unset-value Package for Node.js index.js unset() Function Prototype Pollution Arbitrary Code Execution,Critical,security,my-project-watch,all-repos,npm://unset-value:1.0.0,2022-12-28T16:04:03-05:00,"2 | Security-All,Security-Critical"
Commander.js Package for Node.js index.js parse() Function Argument Parsing Arbitrary Code Execution Weakness,Unknown,security,my-project-watch,all-repos,npm://commander:0.6.1,2022-12-28T16:04:03-05:00,1 | Security-All
Commander.js Package for Node.js index.js parse() Function Argument Parsing Arbitrary Code Execution Weakness,Unknown,security,my-project-watch,all-repos,npm://commander:0.5.2,2022-12-28T16:04:03-05:00,1 | Security-All
Commander.js Package for Node.js index.js parse() Function Argument Parsing Arbitrary Code Execution Weakness,Unknown,security,my-project-watch,all-repos,npm://commander:2.9.0,2022-12-28T16:04:03-05:00,1 | Security-All
Commander.js Package for Node.js index.js parse() Function Argument Parsing Arbitrary Code Execution Weakness,Unknown,security,my-project-watch,all-repos,npm://commander:2.5.1,2022-12-28T16:04:03-05:00,1 | Security-All
Commander.js Package for Node.js index.js parse() Function Argument Parsing Arbitrary Code Execution Weakness,Unknown,security,my-project-watch,all-repos,npm://commander:2.15.1,2022-12-28T16:04:03-05:00,1 | Security-All
Commander.js Package for Node.js index.js parse() Function Argument Parsing Arbitrary Code Execution Weakness,Unknown,security,my-project-watch,all-repos,npm://commander:2.3.0,2022-12-28T16:04:03-05:00,1 | Security-All
tap-mocha-reporter lib/utils.js Regular Expression Remote DoS,High,security,my-project-watch,all-repos,npm://tap-mocha-reporter:2.0.1,2022-12-28T16:04:03-05:00,1 | Security-All
"Minimist <=1.2.5 is vulnerable to Prototype Pollution via file index.js, function setKey() (lines 69-95).",Critical,security,my-project-watch,all-repos,npm://minimist:0.0.10,2022-12-28T16:04:03-05:00,"2 | Security-All,Security-Critical"
"Minimist <=1.2.5 is vulnerable to Prototype Pollution via file index.js, function setKey() (lines 69-95).",Critical,security,my-project-watch,all-repos,npm://minimist:1.2.0,2022-12-28T16:04:03-05:00,"2 | Security-All,Security-Critical"
"Minimist <=1.2.5 is vulnerable to Prototype Pollution via file index.js, function setKey() (lines 69-95).",Critical,security,my-project-watch,all-repos,npm://minimist:0.0.8,2022-12-28T16:04:03-05:00,"2 | Security-All,Security-Critical"
"Moment.js is a JavaScript date library for parsing, validating, manipulating, and formatting dates. A path traversal vulnerability impacts npm (server) users of Moment.js between versions 1.0.1 and 2.29.1, especially if a user-provided locale string is directly used to switch moment locale. This problem is patched in 2.29.2, and the patch can be applied to all affected versions. As a workaround, sanitize the user-provided locale name before passing it to Moment.js.",High,security,my-project-watch,all-repos,npm://moment:2.24.0,2022-12-28T16:04:03-05:00,1 | Security-All
"In Async before 2.6.4 and 3.x before 3.2.2, a malicious user can obtain privileges via the mapValues() method, aka lib/internal/iterator.js createObjectIterator prototype pollution.",High,security,my-project-watch,all-repos,npm://async:2.6.1,2022-12-28T16:04:03-05:00,1 | Security-All
"This affects the package nconf before 0.11.4. When using the memory engine, it is possible to store a nested JSON representation of the configuration. The .set() function, that is responsible for setting the configuration properties, is vulnerable to Prototype Pollution. By providing a crafted property, it is possible to modify the properties on the Object.prototype.",High,security,my-project-watch,all-repos,npm://nconf:0.6.9,2022-12-28T16:04:03-05:00,1 | Security-All
"This affects the package nconf before 0.11.4. When using the memory engine, it is possible to store a nested JSON representation of the configuration. The .set() function, that is responsible for setting the configuration properties, is vulnerable to Prototype Pollution. By providing a crafted property, it is possible to modify the properties on the Object.prototype.",High,security,my-project-watch,all-repos,npm://nconf:0.10.0,2022-12-28T16:04:03-05:00,1 | Security-All
"The ejs (aka Embedded JavaScript templates) package 3.1.6 for Node.js allows server-side template injection in settings[view options][outputFunctionName]. This is parsed as an internal option, and overwrites the outputFunctionName option with an arbitrary OS command (which is executed upon template compilation).",Critical,security,my-project-watch,all-repos,npm://ejs:0.4.3,2022-12-28T16:04:03-05:00,"2 | Security-All,Security-Critical"
"Hawk is an HTTP authentication scheme providing mechanisms for making authenticated HTTP requests with partial cryptographic verification of the request and response, covering the HTTP method, request URI, host, and optionally the request payload. Hawk used a regular expression to parse `Host` HTTP header (`Hawk.utils.parseHost()`), which was subject to regular expression DoS attack - meaning each added character in the attacker's input increases the computation time exponentially. `parseHost()` was patched in `9.0.1` to use built-in `URL` class to parse hostname instead. `Hawk.authenticate()` accepts `options` argument. If that contains `host` and `port`, those would be used instead of a call to `utils.parseHost()`.",High,security,my-project-watch,all-repos,npm://hawk:3.1.3,2022-12-28T16:04:03-05:00,1 | Security-All
"Hawk is an HTTP authentication scheme providing mechanisms for making authenticated HTTP requests with partial cryptographic verification of the request and response, covering the HTTP method, request URI, host, and optionally the request payload. Hawk used a regular expression to parse `Host` HTTP header (`Hawk.utils.parseHost()`), which was subject to regular expression DoS attack - meaning each added character in the attacker's input increases the computation time exponentially. `parseHost()` was patched in `9.0.1` to use built-in `URL` class to parse hostname instead. `Hawk.authenticate()` accepts `options` argument. If that contains `host` and `port`, those would be used instead of a call to `utils.parseHost()`.",High,security,my-project-watch,all-repos,npm://hawk:1.0.0,2022-12-28T16:04:03-05:00,1 | Security-All
json-schema is vulnerable to Improperly Controlled Modification of Object Prototype Attributes ('Prototype Pollution'),Critical,security,my-project-watch,all-repos,npm://json-schema:0.2.3,2022-12-28T16:04:03-05:00,"2 | Security-All,Security-Critical"
Moment Package for Node.js lib/create/from-string.js preprocessRFC2822() Function Message Parsing Improper Regular Expression DoS,High,security,my-project-watch,all-repos,npm://moment:2.24.0,2022-12-28T16:04:03-05:00,1 | Security-All
Mocha Package for Node.js lib/utils.js clean() Function Improper Regular Expression DoS,High,security,my-project-watch,all-repos,npm://mocha:2.5.3,2022-12-28T16:04:03-05:00,1 | Security-All
Mocha Package for Node.js lib/utils.js clean() Function Improper Regular Expression DoS,High,security,my-project-watch,all-repos,npm://mocha:2.0.1,2022-12-28T16:04:03-05:00,1 | Security-All
JavaScript Big Number (jsbn) index.js Multiple Functions Timing Side-channel Information Disclosure,Medium,security,my-project-watch,all-repos,npm://jsbn:0.1.1,2022-12-28T16:04:03-05:00,1 | Security-All
JavaScript Big Number (jsbn) index.js Multiple Functions Timing Side-channel Information Disclosure,Medium,security,my-project-watch,all-repos,npm://jsbn:0.1.0,2022-12-28T16:04:03-05:00,1 | Security-All
The got package before 12.1.0 (also fixed in 11.8.5) for Node.js allows a redirect to a UNIX socket.,Medium,security,my-project-watch,all-repos,npm://got:6.7.1,2022-12-28T16:04:03-05:00,1 | Security-All
"moment is a JavaScript date library for parsing, validating, manipulating, and formatting dates. Affected versions of moment were found to use an inefficient parsing algorithm. Specifically using string-to-date parsing in moment (more specifically rfc2822 parsing, which is tried by default) has quadratic (N^2) complexity on specific inputs. Users may notice a noticeable slowdown is observed with inputs above 10k characters. Users who pass user-provided strings without sanity length checks to moment constructor are vulnerable to (Re)DoS attacks. The problem is patched in 2.29.4, the patch can be applied to all affected versions with minimal tweaking. Users are advised to upgrade. Users unable to upgrade should consider limiting date lengths accepted from user input.",High,security,my-project-watch,all-repos,npm://moment:2.24.0,2022-12-28T16:04:03-05:00,1 | Security-All
"A vulnerability was found in the minimatch package. This flaw allows a Regular Expression Denial of Service (ReDoS) when calling the braceExpand function with specific arguments, resulting in a Denial of Service.",High,security,my-project-watch,all-repos,npm://minimatch:0.3.0,2022-12-28T16:04:04-05:00,1 | Security-All
"A vulnerability was found in the minimatch package. This flaw allows a Regular Expression Denial of Service (ReDoS) when calling the braceExpand function with specific arguments, resulting in a Denial of Service.",High,security,my-project-watch,all-repos,npm://minimatch:3.0.3,2022-12-28T16:04:04-05:00,1 | Security-All
"A vulnerability was found in the minimatch package. This flaw allows a Regular Expression Denial of Service (ReDoS) when calling the braceExpand function with specific arguments, resulting in a Denial of Service.",High,security,my-project-watch,all-repos,npm://minimatch:3.0.2,2022-12-28T16:04:04-05:00,1 | Security-All
"qs before 6.10.3, as used in Express before 4.17.3 and other products, allows attackers to cause a Node process hang for an Express application because an __ proto__ key can be used. In many typical Express use cases, an unauthenticated remote attacker can place the attack payload in the query string of the URL that is used to visit the application, such as a[__proto__]=b&a[__proto__]&a[length]=100000000. The fix was backported to qs 6.9.7, 6.8.3, 6.7.3, 6.6.1, 6.5.3, 6.4.1, 6.3.3, and 6.2.4 (and therefore Express 4.17.3, which has ""deps: qs@6.9.7"" in its release description, is not vulnerable).",High,security,my-project-watch,all-repos,npm://qs:0.6.6,2022-12-28T16:04:03-05:00,1 | Security-All
"qs before 6.10.3, as used in Express before 4.17.3 and other products, allows attackers to cause a Node process hang for an Express application because an __ proto__ key can be used. In many typical Express use cases, an unauthenticated remote attacker can place the attack payload in the query string of the URL that is used to visit the application, such as a[__proto__]=b&a[__proto__]&a[length]=100000000. The fix was backported to qs 6.9.7, 6.8.3, 6.7.3, 6.6.1, 6.5.3, 6.4.1, 6.3.3, and 6.2.4 (and therefore Express 4.17.3, which has ""deps: qs@6.9.7"" in its release description, is not vulnerable).",High,security,my-project-watch,all-repos,npm://qs:6.2.1,2022-12-28T16:04:03-05:00,1 | Security-All
"qs before 6.10.3, as used in Express before 4.17.3 and other products, allows attackers to cause a Node process hang for an Express application because an __ proto__ key can be used. In many typical Express use cases, an unauthenticated remote attacker can place the attack payload in the query string of the URL that is used to visit the application, such as a[__proto__]=b&a[__proto__]&a[length]=100000000. The fix was backported to qs 6.9.7, 6.8.3, 6.7.3, 6.6.1, 6.5.3, 6.4.1, 6.3.3, and 6.2.4 (and therefore Express 4.17.3, which has ""deps: qs@6.9.7"" in its release description, is not vulnerable).",High,security,my-project-watch,all-repos,npm://qs:5.2.1,2022-12-28T16:04:03-05:00,1 | Security-All
A vulnerability has been found in OWASP NodeGoat and classified as problematic. This vulnerability affects unknown code of the file app/routes/research.js of the component Query Parameter Handler. The manipulation leads to denial of service. The attack can be initiated remotely. The name of the patch is 4a4d1db74c63fb4ff8d366551c3af006c25ead12. It is recommended to apply a patch to fix this issue. The identifier of this vulnerability is VDB-216184.,High,security,my-project-watch,all-repos,npm://owasp-nodejs-goat:1.3.0,2022-12-28T16:04:03-05:00,1 | Security-All
A ReDoS (regular expression denial of service) flaw was found in the tough-cookie module before 2.3.3 for Node.js. An attacker that is able to make an HTTP request using a specially crafted cookie may cause the application to consume an excessive amount of CPU.,High,security,my-project-watch,all-repos,npm://tough-cookie:2.2.2,2022-12-28T16:04:03-05:00,1 | Security-All
A ReDoS (regular expression denial of service) flaw was found in the tough-cookie module before 2.3.3 for Node.js. An attacker that is able to make an HTTP request using a specially crafted cookie may cause the application to consume an excessive amount of CPU.,High,security,my-project-watch,all-repos,npm://tough-cookie:2.3.1,2022-12-28T16:04:03-05:00,1 | Security-All
"The is-my-json-valid package before 2.12.4 for Node.js has an incorrect exports['utc-millisec'] regular expression, which allows remote attackers to cause a denial of service (blocked event loop) via a crafted string.",High,security,my-project-watch,all-repos,npm://is-my-json-valid:2.15.0,2022-12-28T16:04:03-05:00,1 | Security-All
"The uglify-js package before 2.6.0 for Node.js allows attackers to cause a denial of service (CPU consumption) via crafted input in a parse call, aka a ""regular expression denial of service (ReDoS).""",High,security,my-project-watch,all-repos,npm://uglify-js:2.4.24,2022-12-28T16:04:03-05:00,1 | Security-All
"The qs module before 1.0.0 does not have an option or default for specifying object depth and when parsing a string representing a deeply nested object will block the event loop for long periods of time. An attacker could leverage this to cause a temporary denial-of-service condition, for example, in a web application, other requests would not be processed while this blocking is occurring.",High,security,my-project-watch,all-repos,npm://qs:0.6.6,2022-12-28T16:04:03-05:00,1 | Security-All
react-native-meteor-oauth is a library for Oauth2 login to a Meteor server in React Native. The oauth Random Token is generated using a non-cryptographically strong RNG (Math.random()).,Medium,security,my-project-watch,all-repos,npm://randomatic:1.1.5,2022-12-28T16:04:03-05:00,1 | Security-All
"Request is an http client. If a request is made using ```multipart```, and the body type is a ```number```, then the specified number of non-zero memory is passed in the body. This affects Request >=2.2.6 <2.47.0 || >2.51.0 <=2.67.0.",Medium,security,my-project-watch,all-repos,npm://request:2.67.0,2022-12-28T16:04:04-05:00,1 | Security-All
"Request is an http client. If a request is made using ```multipart```, and the body type is a ```number```, then the specified number of non-zero memory is passed in the body. This affects Request >=2.2.6 <2.47.0 || >2.51.0 <=2.67.0.",Medium,security,my-project-watch,all-repos,npm://request:2.36.0,2022-12-28T16:04:04-05:00,1 | Security-All
"Minimatch is a minimal matching utility that works by converting glob expressions into JavaScript `RegExp` objects. The primary function, `minimatch(path, pattern)` in Minimatch 3.0.1 and earlier is vulnerable to ReDoS in the `pattern` parameter.",High,security,my-project-watch,all-repos,npm://minimatch:0.3.0,2022-12-28T16:04:03-05:00,1 | Security-All
"The mime module < 1.4.1, 2.0.1, 2.0.2 is vulnerable to regular expression denial of service when a mime lookup is performed on untrusted user input.",High,security,my-project-watch,all-repos,npm://mime:1.2.11,2022-12-28T16:04:03-05:00,1 | Security-All
The debug module is vulnerable to regular expression denial of service when untrusted user input is passed into the o formatter. It takes around 50k characters to block for 2 seconds making this a low severity issue.,Medium,security,my-project-watch,all-repos,npm://debug:2.2.0,2022-12-28T16:04:03-05:00,1 | Security-All
"Growl adds growl notification support to nodejs. Growl before 1.10.2 does not properly sanitize input before passing it to exec, allowing for arbitrary command execution.",Critical,security,my-project-watch,all-repos,npm://growl:1.9.2,2022-12-28T16:04:04-05:00,"2 | Security-All,Security-Critical"
"lodash node module before 4.17.5 suffers from a Modification of Assumed-Immutable Data (MAID) vulnerability via defaultsDeep, merge, and mergeWith functions, which allows a malicious user to modify the prototype of ""Object"" via __proto__, causing the addition or modification of an existing property that will exist on all objects.",Medium,security,my-project-watch,all-repos,npm://lodash:4.13.1,2022-12-28T16:04:03-05:00,1 | Security-All
"lodash node module before 4.17.5 suffers from a Modification of Assumed-Immutable Data (MAID) vulnerability via defaultsDeep, merge, and mergeWith functions, which allows a malicious user to modify the prototype of ""Object"" via __proto__, causing the addition or modification of an existing property that will exist on all objects.",Medium,security,my-project-watch,all-repos,npm://lodash:2.4.2,2022-12-28T16:04:03-05:00,1 | Security-All
sshpk is vulnerable to ReDoS when parsing crafted invalid public keys.,High,security,my-project-watch,all-repos,npm://sshpk:1.10.1,2022-12-28T16:04:04-05:00,1 | Security-All
"hoek node module before 4.2.0 and 5.0.x before 5.0.3 suffers from a Modification of Assumed-Immutable Data (MAID) vulnerability via 'merge' and 'applyToDefaults' functions, which allows a malicious user to modify the prototype of ""Object"" via __proto__, causing the addition or modification of an existing property that will exist on all objects.",High,security,my-project-watch,all-repos,npm://hoek:2.16.3,2022-12-28T16:04:03-05:00,1 | Security-All
"hoek node module before 4.2.0 and 5.0.x before 5.0.3 suffers from a Modification of Assumed-Immutable Data (MAID) vulnerability via 'merge' and 'applyToDefaults' functions, which allows a malicious user to modify the prototype of ""Object"" via __proto__, causing the addition or modification of an existing property that will exist on all objects.",High,security,my-project-watch,all-repos,npm://hoek:0.9.1,2022-12-28T16:04:03-05:00,1 | Security-All
"index.js in brace-expansion before 1.1.7 is vulnerable to Regular Expression Denial of Service (ReDoS) attacks, as demonstrated by an expand argument containing many comma characters.",High,security,my-project-watch,all-repos,npm://brace-expansion:1.1.6,2022-12-28T16:04:03-05:00,1 | Security-All
Hawk before 3.1.3 and 4.x before 4.1.1 allow remote attackers to cause a denial of service (CPU consumption or partial outage) via a long (1) header or (2) URI that is matched against an improper regular expression.,High,security,my-project-watch,all-repos,npm://hawk:1.0.0,2022-12-28T16:04:03-05:00,1 | Security-All
NodeJS Tough-Cookie version 2.2.2 contains a Regular Expression Parsing vulnerability in HTTP request Cookie Header parsing that can result in Denial of Service. This attack appear to be exploitable via Custom HTTP header passed by client. This vulnerability appears to have been fixed in 2.3.0.,Medium,security,my-project-watch,all-repos,npm://tough-cookie:2.2.2,2022-12-28T16:04:03-05:00,1 | Security-All
"The qs module before 1.0.0 in Node.js does not call the compact function for array data, which allows remote attackers to cause a denial of service (memory consumption) by using a large index value to create a sparse array.",Medium,security,my-project-watch,all-repos,npm://qs:0.6.6,2022-12-28T16:04:03-05:00,1 | Security-All
"adm-zip npm library before 0.4.9 is vulnerable to directory traversal, allowing attackers to write to arbitrary files via a ../ (dot dot slash) in a Zip archive entry that is mishandled during extraction. This vulnerability is also known as 'Zip-Slip'.",Medium,security,my-project-watch,all-repos,npm://adm-zip:0.4.4,2022-12-28T16:04:03-05:00,1 | Security-All
nodejs ejs versions older than 2.5.3 is vulnerable to remote code execution due to weak input validation in ejs.renderFile() function,Critical,security,my-project-watch,all-repos,npm://ejs:0.4.3,2022-12-28T16:04:03-05:00,"2 | Security-All,Security-Critical"
nodejs ejs version older than 2.5.5 is vulnerable to a denial-of-service due to weak input validation in the ejs.renderFile(),High,security,my-project-watch,all-repos,npm://ejs:0.4.3,2022-12-28T16:04:03-05:00,1 | Security-All
nodejs ejs version older than 2.5.5 is vulnerable to a Cross-site-scripting in the ejs.renderFile() resulting in code injection,Medium,security,my-project-watch,all-repos,npm://ejs:0.4.3,2022-12-28T16:04:03-05:00,1 | Security-All
"An issue was discovered in an npm 5.7.0 2018-02-21 pre-release (marked as ""next: 5.7.0"" and therefore automatically installed by an ""npm upgrade -g npm"" command, and also announced in the vendor's blog without mention of pre-release status). It might allow local users to bypass intended filesystem access restrictions because ownerships of /etc and /usr directories are being changed unexpectedly, related to a ""correctMkdir"" issue.",High,security,my-project-watch,all-repos,npm://npm:3.10.10,2022-12-28T16:04:03-05:00,1 | Security-All
"A prototype pollution vulnerability  was found in module extend <2.0.2, ~<3.0.2 that allows an attacker to inject arbitrary properties onto Object.prototype.",Critical,security,my-project-watch,all-repos,npm://extend:3.0.0,2022-12-28T16:04:03-05:00,"2 | Security-All,Security-Critical"
"A prototype pollution vulnerability was found in lodash <4.17.11 where the functions merge, mergeWith, and defaultsDeep can be tricked into adding or modifying properties of Object.prototype.",Medium,security,my-project-watch,all-repos,npm://lodash:4.13.1,2022-12-28T16:04:03-05:00,1 | Security-All
"A prototype pollution vulnerability was found in lodash <4.17.11 where the functions merge, mergeWith, and defaultsDeep can be tricked into adding or modifying properties of Object.prototype.",Medium,security,my-project-watch,all-repos,npm://lodash:2.4.2,2022-12-28T16:04:03-05:00,1 | Security-All
node-handlebars Template Handling Prototype Manipulation Remote Code Execution,Critical,security,my-project-watch,all-repos,npm://handlebars:4.0.5,2022-12-28T16:04:03-05:00,"2 | Security-All,Security-Critical"
marked lib/marked.js inline() Function Regular Expresssion Handling DoS,High,security,my-project-watch,all-repos,npm://marked:0.3.9,2022-12-28T16:04:03-05:00,1 | Security-All
utile Package for Node.js lib/base64.js base64.encode() Function Buffer Allocation Handling Memory Consumption DoS,Medium,security,my-project-watch,all-repos,npm://utile:0.2.1,2022-12-28T16:04:03-05:00,1 | Security-All
utile Package for Node.js lib/base64.js base64.encode() Function Buffer Allocation Handling Memory Consumption DoS,Medium,security,my-project-watch,all-repos,npm://utile:0.3.0,2022-12-28T16:04:03-05:00,1 | Security-All
Platform.js HTTP User-Agent Header Parsing Regular Expression Handling Remote DoS,Medium,security,my-project-watch,all-repos,npm://platform:1.3.1,2022-12-28T16:04:03-05:00,1 | Security-All
JS-YAML lib/js-yaml/loader.js storeMappingPair() Function Nested Array Handling Resource Consumption DoS Weakness,Medium,security,my-project-watch,all-repos,npm://js-yaml:3.6.1,2022-12-28T16:04:03-05:00,1 | Security-All
JS-YAML lib/js-yaml/loader.js storeMappingPair() Function Object Property Handling Arbitrary Code Execution,Critical,security,my-project-watch,all-repos,npm://js-yaml:3.6.1,2022-12-28T16:04:03-05:00,"2 | Security-All,Security-Critical"
"A vulnerability was found in node-tar before version 4.4.2 (excluding version 2.2.2). An Arbitrary File Overwrite issue exists when extracting a tarball containing a hardlink to a file that already exists on the system, in conjunction with a later plain file with the same name as the hardlink. This plain file content replaces the existing file content. A patch has been applied to node-tar v2.2.2).",High,security,my-project-watch,all-repos,npm://tar:2.2.1,2022-12-28T16:04:03-05:00,1 | Security-All
Eran Hammer cryptiles version 4.1.1 earlier contains a CWE-331: Insufficient Entropy vulnerability in randomDigits() method that can result in An attacker is more likely to be able to brute force something that was supposed to be random.. This attack appear to be exploitable via Depends upon the calling application.. This vulnerability appears to have been fixed in 4.1.2.,Critical,security,my-project-watch,all-repos,npm://cryptiles:0.2.2,2022-12-28T16:04:03-05:00,"2 | Security-All,Security-Critical"
Eran Hammer cryptiles version 4.1.1 earlier contains a CWE-331: Insufficient Entropy vulnerability in randomDigits() method that can result in An attacker is more likely to be able to brute force something that was supposed to be random.. This attack appear to be exploitable via Depends upon the calling application.. This vulnerability appears to have been fixed in 4.1.2.,Critical,security,my-project-watch,all-repos,npm://cryptiles:2.0.5,2022-12-28T16:04:03-05:00,"2 | Security-All,Security-Critical"
"fstream before 1.0.12 is vulnerable to Arbitrary File Overwrite. Extracting tarballs containing a hardlink to a file that already exists in the system, and a file that matches the hardlink, will overwrite the system's file with the contents of the extracted file. The fstream.DirWriter() function is vulnerable.",High,security,my-project-watch,all-repos,npm://fstream:1.0.10,2022-12-28T16:04:03-05:00,1 | Security-All
marked Package for Node.js lib/marked.js heading Regular Expression Handling CPU Consumption DoS,Medium,security,my-project-watch,all-repos,npm://marked:0.3.9,2022-12-28T16:04:03-05:00,1 | Security-All
"lodash prior to 4.17.11 is affected by: CWE-400: Uncontrolled Resource Consumption. The impact is: Denial of service. The component is: Date handler. The attack vector is: Attacker provides very long strings, which the library attempts to match using a regular expression. The fixed version is: 4.17.11.",Medium,security,my-project-watch,all-repos,npm://lodash:4.13.1,2022-12-28T16:04:03-05:00,1 | Security-All
"lodash prior to 4.17.11 is affected by: CWE-400: Uncontrolled Resource Consumption. The impact is: Denial of service. The component is: Date handler. The attack vector is: Attacker provides very long strings, which the library attempts to match using a regular expression. The fixed version is: 4.17.11.",Medium,security,my-project-watch,all-repos,npm://lodash:2.4.2,2022-12-28T16:04:03-05:00,1 | Security-All
Versions of lodash lower than 4.17.12 are vulnerable to Prototype Pollution. The function defaultsDeep could be tricked into adding or modifying properties of Object.prototype using a constructor payload.,Critical,security,my-project-watch,all-repos,npm://lodash:4.13.1,2022-12-28T16:04:04-05:00,"2 | Security-All,Security-Critical"
Versions of lodash lower than 4.17.12 are vulnerable to Prototype Pollution. The function defaultsDeep could be tricked into adding or modifying properties of Object.prototype using a constructor payload.,Critical,security,my-project-watch,all-repos,npm://lodash:2.4.2,2022-12-28T16:04:04-05:00,"2 | Security-All,Security-Critical"
helmet-csp Package for Node.js lib/transform-directives-for-browser.ts transformDirectivesForBrowser() Function Default Directive Handling Content Security Policy Bypass,Medium,security,my-project-watch,all-repos,npm://helmet-csp:1.2.2,2022-12-28T16:04:03-05:00,1 | Security-All
mongodb Package for Node.js (node-mongodb-native) lib/operations/db_ops.js createCollection() Function Collection Name Validation Improper Exception Handling DoS,High,security,my-project-watch,all-repos,npm://mongodb:2.2.36,2022-12-28T16:04:03-05:00,1 | Security-All
"Versions of the npm CLI prior to 6.13.4 are vulnerable to an Arbitrary File Overwrite. It fails to prevent existing globally-installed binaries to be overwritten by other package installations. For example, if a package was installed globally and created a serve binary, any subsequent installs of packages that also create a serve binary would overwrite the previous serve binary. This behavior is still allowed in local installations and also through install scripts. This vulnerability bypasses a user using the --ignore-scripts install option.",Medium,security,my-project-watch,all-repos,npm://npm:3.10.10,2022-12-28T16:04:03-05:00,1 | Security-All
Versions of the npm CLI prior to 6.13.3 are vulnerable to an Arbitrary File Write. It fails to prevent access to folders outside of the intended node_modules folder through the bin field. A properly constructed entry in the package.json bin field would allow a package publisher to modify and/or gain access to arbitrary files on a user's system when the package is installed. This behavior is still possible through install scripts. This vulnerability bypasses a user using the --ignore-scripts install option.,High,security,my-project-watch,all-repos,npm://npm:3.10.10,2022-12-28T16:04:03-05:00,1 | Security-All
Versions of the npm CLI prior to 6.13.3 are vulnerable to an Arbitrary File Write. It is possible for packages to create symlinks to files outside of thenode_modules folder through the bin field upon installation. A properly constructed entry in the package.json bin field would allow a package publisher to create a symlink pointing to arbitrary files on a user's system when the package is installed. This behavior is still possible through install scripts. This vulnerability bypasses a user using the --ignore-scripts install option.,Medium,security,my-project-watch,all-repos,npm://npm:3.10.10,2022-12-28T16:04:03-05:00,1 | Security-All
"Versions of handlebars prior to 4.3.0 are vulnerable to Prototype Pollution leading to Remote Code Execution. Templates may alter an Object's __proto__ and __defineGetter__ properties, which may allow an attacker to execute arbitrary code through crafted payloads.",Critical,security,my-project-watch,all-repos,npm://handlebars:4.0.5,2022-12-28T16:04:03-05:00,"2 | Security-All,Security-Critical"
"the web framework using ljharb's qs module older than v6.3.2, v6.2.3, v6.1.2, and v6.0.4 is vulnerable to a DoS. A malicious user can send a evil request to cause the web framework crash.",High,security,my-project-watch,all-repos,npm://qs:6.2.1,2022-12-28T16:04:03-05:00,1 | Security-All
"the web framework using ljharb's qs module older than v6.3.2, v6.2.3, v6.1.2, and v6.0.4 is vulnerable to a DoS. A malicious user can send a evil request to cause the web framework crash.",High,security,my-project-watch,all-repos,npm://qs:5.2.1,2022-12-28T16:04:03-05:00,1 | Security-All
"the web framework using ljharb's qs module older than v6.3.2, v6.2.3, v6.1.2, and v6.0.4 is vulnerable to a DoS. A malicious user can send a evil request to cause the web framework crash.",High,security,my-project-watch,all-repos,npm://qs:0.6.6,2022-12-28T16:04:03-05:00,1 | Security-All
"minimist before 1.2.2 could be tricked into adding or modifying properties of Object.prototype using a ""constructor"" or ""__proto__"" payload.",Medium,security,my-project-watch,all-repos,npm://minimist:0.0.8,2022-12-28T16:04:03-05:00,1 | Security-All
"minimist before 1.2.2 could be tricked into adding or modifying properties of Object.prototype using a ""constructor"" or ""__proto__"" payload.",Medium,security,my-project-watch,all-repos,npm://minimist:0.0.10,2022-12-28T16:04:03-05:00,1 | Security-All
"minimist before 1.2.2 could be tricked into adding or modifying properties of Object.prototype using a ""constructor"" or ""__proto__"" payload.",Medium,security,my-project-watch,all-repos,npm://minimist:1.2.0,2022-12-28T16:04:03-05:00,1 | Security-All
"yargs-parser could be tricked into adding or modifying properties of Object.prototype using a ""__proto__"" payload.",Medium,security,my-project-watch,all-repos,npm://yargs-parser:2.4.1,2022-12-28T16:04:03-05:00,1 | Security-All
minimist Package for Node.js --__proto__.y=Polluted Argument Handling Prototype Pollution Remote Property Manipulation,Critical,security,my-project-watch,all-repos,npm://minimist:0.0.10,2022-12-28T16:04:03-05:00,"2 | Security-All,Security-Critical"
minimist Package for Node.js --__proto__.y=Polluted Argument Handling Prototype Pollution Remote Property Manipulation,Critical,security,my-project-watch,all-repos,npm://minimist:1.2.0,2022-12-28T16:04:03-05:00,"2 | Security-All,Security-Critical"
minimist Package for Node.js --__proto__.y=Polluted Argument Handling Prototype Pollution Remote Property Manipulation,Critical,security,my-project-watch,all-repos,npm://minimist:0.0.8,2022-12-28T16:04:03-05:00,"2 | Security-All,Security-Critical"
"All versions of bson before 1.1.4 are vulnerable to Deserialization of Untrusted Data. The package will ignore an unknown value for an object's _bsotype, leading to cases where an object is serialized as a document rather than the intended BSON type.",Critical,security,my-project-watch,all-repos,npm://bson:1.0.8,2022-12-28T16:04:03-05:00,"2 | Security-All,Security-Critical"
"All versions of bson before 1.1.4 are vulnerable to Deserialization of Untrusted Data. The package will ignore an unknown value for an object's _bsotype, leading to cases where an object is serialized as a document rather than the intended BSON type.",Critical,security,my-project-watch,all-repos,npm://bson:1.0.9,2022-12-28T16:04:03-05:00,"2 | Security-All,Security-Critical"
Incorrect parsing of certain JSON input may result in js-bson not correctly serializing BSON. This may cause unexpected application behaviour including data disclosure. This issue affects: MongoDB Inc. js-bson library version 1.1.3 and prior to.,Medium,security,my-project-watch,all-repos,npm://bson:1.0.8,2022-12-28T16:04:03-05:00,1 | Security-All
Incorrect parsing of certain JSON input may result in js-bson not correctly serializing BSON. This may cause unexpected application behaviour including data disclosure. This issue affects: MongoDB Inc. js-bson library version 1.1.3 and prior to.,Medium,security,my-project-watch,all-repos,npm://bson:1.0.9,2022-12-28T16:04:03-05:00,1 | Security-All
