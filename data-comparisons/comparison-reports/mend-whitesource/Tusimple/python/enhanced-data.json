{"TotalAdvisories": 79, "UniqueAdvisories": 12, "Advisories": [{"cve": "CVE-2020-25659", "description": "The `cryptography` package contains an Observable Timing Discrepancy vulnerability. The implementation of the `_enc_dec_rsa_pkey_ctx` function in `rsa.py` is not time constant, making it vulnerable to the Bleichenbacher timing attack during RSA decryption when PKCS padding has been used. An attacker can exploit this to eventually break RSA encryption and get access to sensitive data.\n \n*Advisory Deviation Notice:* The Sonatype security research team discovered that the root cause of the vulnerability is in 0.4, not in all versions before 3.2 as the advisory states."}, {"cve": "CVE-2020-36242", "description": "The `cryptography` package is vulnerable to Integer Overflow. The `update_into()` method in `ciphers.py` may pass buffer lengths into OpenSSL's `EVP_CipherUpdate` function that are greater than 2GiB, resulting in Integer Overflow that leads to memory corruption. An attacker with control over the input buffer being encrypted by the selected cipher may craft a large buffer that may results in Denial of Service (DoS), and potentially Remote Code Execution (RCE).\n\n*Advisory Deviation Notice:* The Sonatype security research team discovered that the vulnerability is present in version 1.8 until 3.3.2, not just 3.1 until 3.3.2 as the advisory states."}, {"cve": "CVE-2023-23931", "description": "The `cryptography` package is vulnerable due to an Improper Check for Unusual or Exceptional Conditions. The `update_into()` function in the `ciphers.py` file unsafely allows immutable objects that implement the buffer protocol (e.g. `bytes`) to be mutated. A developer unaware of this situation may open a security risk by generating corrupted outputs.\n\n*Advisory Deviation Notice:* The Sonatype Security Research team has created a CVSS score that differs from the publicly available score that, based on our research, more accurately reflects the severity of the vulnerability."}, {"cve": "CVE-2023-23934", "description": "The `Werkzeug` package is vulnerable due to Improper Input Validation. The `_cookie_parse_impl()` function in the `_internal.py` file does not properly parse cookies with a leading `=` character, allowing an adjacent subdomain to set incorrect cookie values for a compromised application if they are running on a browser that allows nameless cookies such as `=value`. An adjacent attacker can leverage this vulnerability to inject a malicious cookie into an affected application if it is running next to a subdomain in their control.\n\n*Advisory Deviation Notice:*\n                        The Sonatype Security Research team discovered that this vulnerability was actually introduced in version `0.9` and, therefore, not all versions prior to `2.2.3` are vulnerable as stated in the advisory."}, {"cve": "CVE-2019-12760", "description": "The parso package is vulnerable to Deserialization of Untrusted Data. The `_load_from_file_system` function in `cache.py` deserializes grammars with pickle when caching is enabled. An attacker who is able to place a malicious pickle in the same location where it stores caches serialized grammars could exploit this behavior to execute arbitrary code on the vulnerable system.\n\n*Advisory Deviation Notice:* The Sonatype security research team discovered that the vulnerability is present from initial version 0.0.1 up to and including the latest version, not just \"through 0.4.0\" as the advisory states."}, {"cve": "CVE-2020-25658", "description": "The `rsa` package is vulnerable to Timing Attack. The `decrypt` function in `pkcs1.py` perform security checks that might provide confidential information based on the time the application takes to raise an error or an exception. An attacker could abuse this behavior by performing a Bleichenbacher attack against the vulnerable RSA API to decrypt RSA cipher text. \n\n*Advisory Deviation Notice:* The Sonatype security research team discovered that the fix for this vulnerability introduced in version 4.7 was found to be insufficient, contrary to what is stated in the advisory."}, {"cve": "CVE-2019-11358", "description": "The `jquery` package is vulnerable to Prototype Pollution. The `jQuery.extend` and `jQuery.fn.extend` functions defined in many files allow an untrusted object to extend `Object.prototype`. An attacker can modify and add prototype properties to JavaScript objects and can potentially leverage those changes to crash the application or execute remote code.\n\n*Advisory Deviation Notice:* The Sonatype security research team has assessed the CVSS score for this vulnerability to be 7.5 given the nature of prototype pollution and the high impact to data integrity, as opposed to a score of 6.1 reported by [NVD](https://nvd.nist.gov/vuln/detail/CVE-2019-11358)."}, {"cve": "CVE-2023-24816", "description": "The `ipython` package is vulnerable to OS Command Injection. The `_set_term_title()` function in the `terminal.py` file contains legacy code to set the title for a terminal window which is reached on Windows systems that do not have the `ctypes` dependency available. This function fails to sanitize user controllable input prior to directly concatenating it to a command and executing it via the `os.system()` function. An attacker with the ability to influence input to the affected function can exploit this vulnerability by submitting shell meta-characters and commands within the `title` parameter. This will result in the execution of arbitrary commands on the affected host limited to the scope of the current process.\n\n*Advisory Deviation Notice:*\nThe Sonatype Security Research team discovered that this vulnerability was introduced in version 0.10 for Pypi and 0.8.1 for RPM and therefore does not affect all versions prior to 8.10.0 as stated in the advisory."}, {"cve": "CVE-2022-24785", "description": "The `moment` package is vulnerable to Path Traversal. The `loadLocale()` function in the `locales.js` file fails to sanitize traversal characters from user-supplied locale names before using them to load modules from the file system. A remote attacker who can influence locale names loaded by the affected function can exploit this vulnerability to traverse beyond the intended directory in order to exfiltrate information or cause other unexpected behavior.\n\n*Advisory Deviation Notice*: The Sonatype security research team discovered that this vulnerability was introduced in version 2.8.0 and not 1.0.1 as stated in the advisory."}, {"cve": "CVE-2020-28500", "description": "The `lodash` package contains a Regular Expression Denial of Service (ReDoS) vulnerability. The `lodash.js`, `trimEnd.js`, `trim.js`, `toNumber.js`, and `parseInt.js` files contain a vulnerable regular expression used for trimming whitespace on strings. An attacker can exploit this with a large input string that would take an exponentially long amount of time to parse, resulting in a Denial of Service (DoS).\n\n*Advisory Deviation Notice:* The Sonatype security research team has discovered that the root cause of the vulnerability is in version 4.0.0, not in all versions as the advisory implies. In other words, versions prior to 4.0.0 are not vulnerable to this flaw."}, {"cve": "CVE-2022-40899", "description": "The `future` package is vulnerable to a Regular Expression Denial of Service (ReDoS) attack. The `http2time()` and `iso2time()` functions in the `cookiejar.py` file use unsafe regular expressions to parse time values from `Set-Cookie` headers returned by servers. A remote attacker with control of a server to which the application connects can exploit this vulnerability by responding with a `Set-Cookie` header containing a long string of repeating whitespace characters. Processing the attacker's server responses may cause the application to consume all available resources, resulting in a DoS condition.\n\n*Advisory Deviation Notice*: The Sonatype security research team discovered that this vulnerability was introduced in version `0.3.0-rc1` and therefore does not affect all versions `0.18.2` and earlier as stated in the advisory."}, {"cve": "CVE-2020-8252", "description": "The `libuv` dependency of the `nodejs` package is vulnerable to Buffer Overflow due to an Incorrect Calculation of Buffer Size. The `internal.h` file fails to properly define a buffer size for paths longer than 256 bytes allowing malicious actors to corrupt the application. An attacker can exploit this vulnerability by providing an affected instance with a specially-crafted input to write to memory beyond the dedicated buffer. This will result in an application crash and may be leveraged to perform Remote Code Execution (RCE) or various other attacks.\n\n*Advisory Deviation Notice:* The Sonatype Security Research team discovered that this vulnerability is still present in version 10.22.1, contrary to what is stated in the advisory. Additionally, the Sonatype Security Research team discovered that this vulnerability was actually introduced in version 10.16.0 instead of 10.0.0 as stated in the advisory."}], "TotalWorkarounds": 7, "Workarounds": [{"cve": "sonatype-2020-0201", "remediation": "There is no non-vulnerable upgrade path for this component/package. We recommend investigating alternative components or a potential mitigating control.\n\n**NOTE**: The default configuration for Flask comes with the `SESSION_COOKIE_SECURE` flag set to `False` which enables sensitive cookies from being transmitted over non-encrypted (HTTP) connections making them susceptible to MitM attacks. Setting this option to `True` is recommended. While that alone will **not** encrypt the session cookie data, the setting still protects the data in transit by \n enforcing cookies be only sent over HTTPS.\n\nReference: [https://github.com/pallets/flask/blob/d091bb00c0358e9f30006a064f3dbb671b99aeae/src/flask/app.py#L320](https://github.com/pallets/flask/blob/d091bb00c0358e9f30006a064f3dbb671b99aeae/src/flask/app.py#L320)"}, {"cve": "CVE-2020-11023", "remediation": "\nAlternatively, a workaround is provided by [jQuery](https://github.com/jquery/jquery/security/advisories/GHSA-jpcq-cgw6-v4j6):\n>To workaround this issue without upgrading, use DOMPurify with its `SAFE_FOR_JQUERY` option to sanitize the HTML string before passing it to a jQuery method.\n\n\nNote: If this component is included as a bundled/transitive dependency of another component, there may not be an upgrade path. In this instance, we recommend contacting the maintainers who included the vulnerable package. Alternatively, we recommend investigating alternative components or a potential mitigating control."}, {"cve": "sonatype-2020-0201", "remediation": "There is no non-vulnerable upgrade path for this component/package. We recommend investigating alternative components or a potential mitigating control.\n\n**NOTE**: The default configuration for Flask comes with the `SESSION_COOKIE_SECURE` flag set to `False` which enables sensitive cookies from being transmitted over non-encrypted (HTTP) connections making them susceptible to MitM attacks. Setting this option to `True` is recommended. While that alone will **not** encrypt the session cookie data, the setting still protects the data in transit by \n enforcing cookies be only sent over HTTPS.\n\nReference: [https://github.com/pallets/flask/blob/d091bb00c0358e9f30006a064f3dbb671b99aeae/src/flask/app.py#L320](https://github.com/pallets/flask/blob/d091bb00c0358e9f30006a064f3dbb671b99aeae/src/flask/app.py#L320)"}, {"cve": "CVE-2020-11023", "remediation": "\nAlternatively, a workaround is provided by [jQuery](https://github.com/jquery/jquery/security/advisories/GHSA-jpcq-cgw6-v4j6):\n>To workaround this issue without upgrading, use DOMPurify with its `SAFE_FOR_JQUERY` option to sanitize the HTML string before passing it to a jQuery method.\n\n\nNote: If this component is included as a bundled/transitive dependency of another component, there may not be an upgrade path. In this instance, we recommend contacting the maintainers who included the vulnerable package. Alternatively, we recommend investigating alternative components or a potential mitigating control."}, {"cve": "CVE-2023-24816", "remediation": "If upgrading is not a viable option the project has provided the following [workaround](https://github.com/ipython/ipython/security/advisories/GHSA-29gw-9793-fvw7):\n```\nSet the configuration option c.TerminalInteractiveShell.term_title_format='IPython' (or to any other fixed, safe string).\nWhen using py files, you can conditionally set this option based on the version number of IPython.\n```\n\nNote: If this component is included as a bundled/transitive dependency of another component, there may not be an upgrade path. In this instance, we recommend contacting the maintainers who included the vulnerable package. Alternatively, we recommend investigating alternative components or a potential mitigating control."}, {"cve": "CVE-2020-11023", "remediation": "\nAlternatively, a workaround is provided by [jQuery](https://github.com/jquery/jquery/security/advisories/GHSA-jpcq-cgw6-v4j6):\n>To workaround this issue without upgrading, use DOMPurify with its `SAFE_FOR_JQUERY` option to sanitize the HTML string before passing it to a jQuery method.\n\n\nNote: If this component is included as a bundled/transitive dependency of another component, there may not be an upgrade path. In this instance, we recommend contacting the maintainers who included the vulnerable package. Alternatively, we recommend investigating alternative components or a potential mitigating control."}, {"cve": "CVE-2023-24816", "remediation": "If upgrading is not a viable option the project has provided the following [workaround](https://github.com/ipython/ipython/security/advisories/GHSA-29gw-9793-fvw7):\n```\nSet the configuration option c.TerminalInteractiveShell.term_title_format='IPython' (or to any other fixed, safe string).\nWhen using py files, you can conditionally set this option based on the version number of IPython.\n```\n\nNote: If this component is included as a bundled/transitive dependency of another component, there may not be an upgrade path. In this instance, we recommend contacting the maintainers who included the vulnerable package. Alternatively, we recommend investigating alternative components or a potential mitigating control."}]}